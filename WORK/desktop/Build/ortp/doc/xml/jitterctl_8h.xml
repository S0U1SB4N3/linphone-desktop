<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="jitterctl_8h" kind="file" language="C++">
    <compoundname>jitterctl.h</compoundname>
    <includes refid="rtpsession_8h" local="no">ortp/rtpsession.h</includes>
    <includedby refid="jitterctl_8c" local="yes">jitterctl.c</includedby>
    <includedby refid="rtcp_8c" local="yes">rtcp.c</includedby>
    <includedby refid="rtpparse_8c" local="yes">rtpparse.c</includedby>
    <includedby refid="rtpsession_8c" local="yes">rtpsession.c</includedby>
    <incdepgraph>
      <node id="88">
        <label>ortp/payloadtype.h</label>
        <link refid="payloadtype_8h"/>
      </node>
      <node id="89">
        <label>ortp/rtpprofile.h</label>
        <link refid="rtpprofile_8h"/>
      </node>
      <node id="86">
        <label>ortp/rtpsession.h</label>
        <link refid="rtpsession_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>ortp/sessionset.h</label>
        <link refid="sessionset_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>sys/types.h</label>
      </node>
      <node id="93">
        <label>unistd.h</label>
      </node>
      <node id="87">
        <label>bctoolbox/list.h</label>
      </node>
      <node id="91">
        <label>sys/time.h</label>
      </node>
      <node id="85">
        <label>jitterctl.h</label>
        <link refid="jitterctl_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="jitterctl_8h_1afc341fdc73377723bf8fd21f54604d53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_init</definition>
        <argsstring>(JitterControl *ctl, PayloadType *pt)</argsstring>
        <name>jitter_control_init</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type><ref refid="struct__OrtpPayloadType" kindref="compound">PayloadType</ref> *</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h" line="32" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="39" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8h_1a182eff0b6b99969acabc02e8e7061ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_enable_adaptive</definition>
        <argsstring>(JitterControl *ctl, bool_t val)</argsstring>
        <name>jitter_control_enable_adaptive</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h" line="33" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8h_1aefdc33463e2c0c13889a128e6869a971" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORTP_INLINE bool_t</type>
        <definition>static ORTP_INLINE bool_t jitter_control_adaptive_enabled</definition>
        <argsstring>(JitterControl *ctl)</argsstring>
        <name>jitter_control_adaptive_enabled</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h" line="34" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8h_1ac7cedf0ca397e8dce8fec56957ac135f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_set_payload</definition>
        <argsstring>(JitterControl *ctl, PayloadType *pt)</argsstring>
        <name>jitter_control_set_payload</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type><ref refid="struct__OrtpPayloadType" kindref="compound">PayloadType</ref> *</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h" line="35" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="62" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8h_1a6daec9a9429b1f37fc6936894c1dd556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_update_corrective_slide</definition>
        <argsstring>(JitterControl *ctl)</argsstring>
        <name>jitter_control_update_corrective_slide</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h" line="36" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="79" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8h_1a720e6485be865ec0984ce087f71fcf2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_update_size</definition>
        <argsstring>(JitterControl *ctl, queue_t *q)</argsstring>
        <name>jitter_control_update_size</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type><ref refid="struct__queue" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h" line="37" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="92" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8h_1a50e88a74fcb7836f0276f0b683b0a3d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float jitter_control_compute_mean_size</definition>
        <argsstring>(JitterControl *ctl)</argsstring>
        <name>jitter_control_compute_mean_size</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h" line="38" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="103" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8h_1ab0a96f0d9704bae7953be2115808e00e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_new_packet</definition>
        <argsstring>(JitterControl *ctl, uint32_t packet_ts, uint32_t cur_str_ts)</argsstring>
        <name>jitter_control_new_packet</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>packet_ts</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cur_str_ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h" line="39" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="173" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8h_1a5314adc47148f84ea7ba030a441f9f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_new_packet_basic</definition>
        <argsstring>(JitterControl *ctl, uint32_t packet_ts, uint32_t cur_str_ts)</argsstring>
        <name>jitter_control_new_packet_basic</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>packet_ts</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cur_str_ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h" line="41" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="196" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8h_1af726e52cbd7e8dec6c06e44c23d8865c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_new_packet_rls</definition>
        <argsstring>(JitterControl *ctl, uint32_t packet_ts, uint32_t cur_str_ts)</argsstring>
        <name>jitter_control_new_packet_rls</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>packet_ts</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cur_str_ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h" line="42" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="238" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8h_1a509fdd4214fb821f3eac9784326be503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t jitter_control_get_compensated_timestamp</definition>
        <argsstring>(JitterControl *obj, uint32_t user_ts)</argsstring>
        <name>jitter_control_get_compensated_timestamp</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>user_ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h" line="44" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="329" bodyend="343"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>oRTP<sp/>library<sp/>is<sp/>an<sp/>RTP<sp/>(Realtime<sp/>Transport<sp/>Protocol<sp/>-<sp/>rfc3550)<sp/>implementation<sp/>with<sp/>additional<sp/>features.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2017<sp/>Belledonne<sp/>Communications<sp/>SARL</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitterctl.h</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>Mon<sp/>Nov<sp/><sp/>8<sp/>11:53:21<sp/>2004</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/><sp/>2004<sp/><sp/>Simon<sp/>MORLAT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>Email<sp/>simon.morlat@linphone.org</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JITTERCTL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JITTERCTL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="rtpsession_8h" kindref="compound">ortp/rtpsession.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_init(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/><ref refid="struct__OrtpPayloadType" kindref="compound">PayloadType</ref><sp/>*pt);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_enable_adaptive(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/>bool_t<sp/>val);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ORTP_INLINE<sp/>bool_t<sp/>jitter_control_adaptive_enabled(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctl-&gt;params.adaptive;<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_set_payload(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/><ref refid="struct__OrtpPayloadType" kindref="compound">PayloadType</ref><sp/>*pt);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_update_corrective_slide(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_update_size(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/><ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>*q);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jitter_control_compute_mean_size(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_new_packet(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/>uint32_t<sp/>packet_ts,<sp/>uint32_t<sp/>cur_str_ts);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_new_packet_basic(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/>uint32_t<sp/>packet_ts,<sp/>uint32_t<sp/>cur_str_ts);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_new_packet_rls(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/>uint32_t<sp/>packet_ts,<sp/>uint32_t<sp/>cur_str_ts);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">uint32_t<sp/>jitter_control_get_compensated_timestamp(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*obj<sp/>,<sp/>uint32_t<sp/>user_ts);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.h"/>
  </compounddef>
</doxygen>
