<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="rtpsession_8h" kind="file" language="C++">
    <compoundname>rtpsession.h</compoundname>
    <includes local="no">bctoolbox/list.h</includes>
    <includes refid="port_8h" local="no">ortp/port.h</includes>
    <includes refid="rtp_8h" local="no">ortp/rtp.h</includes>
    <includes refid="payloadtype_8h" local="no">ortp/payloadtype.h</includes>
    <includes refid="rtpprofile_8h" local="no">ortp/rtpprofile.h</includes>
    <includes refid="sessionset_8h" local="no">ortp/sessionset.h</includes>
    <includes refid="rtcp_8h" local="no">ortp/rtcp.h</includes>
    <includes refid="str__utils_8h" local="no">ortp/str_utils.h</includes>
    <includes refid="include_2ortp_2utils_8h" local="no">ortp/utils.h</includes>
    <includes refid="rtpsignaltable_8h" local="no">ortp/rtpsignaltable.h</includes>
    <includes refid="event_8h" local="no">ortp/event.h</includes>
    <includedby refid="congestiondetector_8c" local="no">congestiondetector.c</includedby>
    <includedby refid="event_8c" local="yes">event.c</includedby>
    <includedby refid="src_2utils_8h" local="yes">utils.h</includedby>
    <includedby refid="jitterctl_8c" local="yes">jitterctl.c</includedby>
    <includedby refid="rtpsession__priv_8h" local="yes">rtpsession_priv.h</includedby>
    <includedby refid="jitterctl_8h" local="no">jitterctl.h</includedby>
    <includedby refid="netsim_8c" local="yes">netsim.c</includedby>
    <includedby refid="scheduler_8h" local="yes">scheduler.h</includedby>
    <includedby refid="rtcp_8c" local="yes">rtcp.c</includedby>
    <includedby refid="rtcp__fb_8c" local="yes">rtcp_fb.c</includedby>
    <includedby refid="rtcp__xr_8c" local="yes">rtcp_xr.c</includedby>
    <includedby refid="rtpsession__inet_8c" local="yes">rtpsession_inet.c</includedby>
    <includedby refid="rtpsignaltable_8c" local="no">rtpsignaltable.c</includedby>
    <includedby refid="videobandwidthestimator_8c" local="no">videobandwidthestimator.c</includedby>
    <includedby refid="ortp_8h" local="yes">ortp.h</includedby>
    <includedby refid="sessionset_8h" local="no">sessionset.h</includedby>
    <includedby refid="telephonyevents_8h" local="no">telephonyevents.h</includedby>
    <incdepgraph>
      <node id="303">
        <label>ortp/payloadtype.h</label>
        <link refid="payloadtype_8h"/>
      </node>
      <node id="304">
        <label>ortp/rtpprofile.h</label>
        <link refid="rtpprofile_8h"/>
      </node>
      <node id="301">
        <label>rtpsession.h</label>
        <link refid="rtpsession_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
      </node>
      <node id="305">
        <label>ortp/sessionset.h</label>
        <link refid="sessionset_8h"/>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
      </node>
      <node id="307">
        <label>sys/types.h</label>
      </node>
      <node id="308">
        <label>unistd.h</label>
      </node>
      <node id="302">
        <label>bctoolbox/list.h</label>
      </node>
      <node id="306">
        <label>sys/time.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="312">
        <label>telephonyevents.h</label>
        <link refid="telephonyevents_8h"/>
      </node>
      <node id="310">
        <label>ortp.h</label>
        <link refid="ortp_8h"/>
      </node>
      <node id="309">
        <label>rtpsession.h</label>
        <link refid="rtpsession_8h"/>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
      </node>
      <node id="311">
        <label>sessionset.h</label>
        <link refid="sessionset_8h"/>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct__JBParameters" prot="public">_JBParameters</innerclass>
    <innerclass refid="struct__JitterControl" prot="public">_JitterControl</innerclass>
    <innerclass refid="struct__WaitPoint" prot="public">_WaitPoint</innerclass>
    <innerclass refid="struct__RtpTransportModifier" prot="public">_RtpTransportModifier</innerclass>
    <innerclass refid="struct__RtpTransport" prot="public">_RtpTransport</innerclass>
    <innerclass refid="struct__OrtpNetworkSimulatorParams" prot="public">_OrtpNetworkSimulatorParams</innerclass>
    <innerclass refid="struct__OrtpNetworkSimulatorCtx" prot="public">_OrtpNetworkSimulatorCtx</innerclass>
    <innerclass refid="structOrtpRtcpSendAlgorithm" prot="public">OrtpRtcpSendAlgorithm</innerclass>
    <innerclass refid="structOrtpRtcpFbConfiguration" prot="public">OrtpRtcpFbConfiguration</innerclass>
    <innerclass refid="structOrtpRtcpXrMediaCallbacks" prot="public">OrtpRtcpXrMediaCallbacks</innerclass>
    <innerclass refid="structOrtpRtcpXrConfiguration" prot="public">OrtpRtcpXrConfiguration</innerclass>
    <innerclass refid="structOrtpRtcpXrStats" prot="public">OrtpRtcpXrStats</innerclass>
    <innerclass refid="structOrtpRtcpTmmbrInfo" prot="public">OrtpRtcpTmmbrInfo</innerclass>
    <innerclass refid="struct__OrtpAddress" prot="public">_OrtpAddress</innerclass>
    <innerclass refid="struct__OrtpStream" prot="public">_OrtpStream</innerclass>
    <innerclass refid="struct__RtpStream" prot="public">_RtpStream</innerclass>
    <innerclass refid="struct__RtcpStream" prot="public">_RtcpStream</innerclass>
    <innerclass refid="struct__RtpSession" prot="public">_RtpSession</innerclass>
    <innerclass refid="struct__OrtpVideoBandwidthEstimatorParams" prot="public">_OrtpVideoBandwidthEstimatorParams</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="rtpsession_8h_1ae8364ff8d641437f64db26f0c5496fd6" prot="public" static="no">
        <name>ORTP_AVPF_FEATURE_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="47" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtpsession_8h_1ae84c26ce4d3e292b56f532f129de73b8" prot="public" static="no">
        <name>ORTP_AVPF_FEATURE_TMMBR</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="48" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtpsession_8h_1a9992c56fe4dcd8471b74c0ed1634004a" prot="public" static="no">
        <name>ORTP_AVPF_FEATURE_GENERIC_NACK</name>
        <initializer>(1 &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="49" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtpsession_8h_1a3c603af07cb968bf19eb45cd76c19c46" prot="public" static="no">
        <name>ORTP_RTCP_XR_UNAVAILABLE_PARAMETER</name>
        <initializer>127</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="215" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtpsession_8h_1aebafb54a8e5c89125e363d14c0e53c5c" prot="public" static="no">
        <name>rtp_session_remove_contributing_sources</name>
        <initializer>rtp_session_remove_contributing_source</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="680" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="680" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtpsession_8h_1a5fd8198a7297a09a67e4d52851366bdf" prot="public" static="no">
        <name>rtp_session_set_flag</name>
        <param><defname>session</defname></param>
        <param><defname>flag</defname></param>
        <initializer>(session)-&gt;flags|=(flag)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="730" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtpsession_8h_1a86766b15b3f7cb3c4b17dd0e7767ad5c" prot="public" static="no">
        <name>rtp_session_unset_flag</name>
        <param><defname>session</defname></param>
        <param><defname>flag</defname></param>
        <initializer>(session)-&gt;flags&amp;=~(flag)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="731" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="731" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="rtpsession_8h_1a92b43c38e09e41102c74caf800ca283a" prot="public" static="no">
        <name>RtpSessionMode</name>
        <enumvalue id="rtpsession_8h_1a92b43c38e09e41102c74caf800ca283aaa52ae9e9b4dedbf0144a05f4ab59932c" prot="public">
          <name>RTP_SESSION_RECVONLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1a92b43c38e09e41102c74caf800ca283aa4a9b8206c93ef2c3a34153e0e6fe999c" prot="public">
          <name>RTP_SESSION_SENDONLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1a92b43c38e09e41102c74caf800ca283aafd976ec5fe2ed4d0d0712ca647576317" prot="public">
          <name>RTP_SESSION_SENDRECV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="52" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="enum" id="rtpsession_8h_1a12dd602d0765ecba0632f34cbc74fe34" prot="public" static="no">
        <name>_OrtpJitterBufferAlgorithm</name>
        <enumvalue id="rtpsession_8h_1a12dd602d0765ecba0632f34cbc74fe34a682a358b2d0f3301e2d5f45a85185dd4" prot="public">
          <name>OrtpJitterBufferBasic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1a12dd602d0765ecba0632f34cbc74fe34a8521cad16daa2db4221e4354e879a97d" prot="public">
          <name>OrtpJitterBufferRecursiveLeastSquare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="59" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="enum" id="rtpsession_8h_1a0caa396950b0b4e735801e37f6e740df" prot="public" static="no">
        <name>_OrtpNetworkSimulatorMode</name>
        <enumvalue id="rtpsession_8h_1a0caa396950b0b4e735801e37f6e740dfa261a9f54f59f1fe0a435c5d988e10aba" prot="public">
          <name>OrtpNetworkSimulatorInvalid</name>
          <initializer>=-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1a0caa396950b0b4e735801e37f6e740dfa10cfd43bab32e947b1ea8705e5eff04c" prot="public">
          <name>OrtpNetworkSimulatorInbound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>simulation is applied when receiving packets </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1a0caa396950b0b4e735801e37f6e740dfa5d6240d40c29de7bd17d7944d6cb5a02" prot="public">
          <name>OrtpNetworkSimulatorOutbound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>simulation is applied to sent packets </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1a0caa396950b0b4e735801e37f6e740dfaba58c2b92f32b0d2bd064c255e5678fe" prot="public">
          <name>OrtpNetworkSimulatorOutboundControlled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>simulation is applied to sent packets according to sent timestamps set in the timestamps field of mblk_t, which is defined only with -DORTP_TIMESTAMP </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="145" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="145" bodyend="151"/>
      </memberdef>
      <memberdef kind="enum" id="rtpsession_8h_1aafbd304f3047da14a071c499cfd5256a" prot="public" static="no">
        <name>OrtpRtcpXrPlcStatus</name>
        <enumvalue id="rtpsession_8h_1aafbd304f3047da14a071c499cfd5256aa956c28d7403d2ce12032febb78212d5f" prot="public">
          <name>OrtpRtcpXrNoPlc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1aafbd304f3047da14a071c499cfd5256aa534fa9548de95e3ba618e455ef4cc97e" prot="public">
          <name>OrtpRtcpXrSilencePlc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1aafbd304f3047da14a071c499cfd5256aa7036acaae4807afc186476c511bdf958" prot="public">
          <name>OrtpRtcpXrEnhancedPlc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="217" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="217" bodyend="221"/>
      </memberdef>
      <memberdef kind="enum" id="rtpsession_8h_1a17bf7ed5fadf0b2408163bcfc69051ff" prot="public" static="no">
        <name>OrtpRtcpXrRcvrRttMode</name>
        <enumvalue id="rtpsession_8h_1a17bf7ed5fadf0b2408163bcfc69051ffa8e5215d34699d61f4e6a58564d276507" prot="public">
          <name>OrtpRtcpXrRcvrRttNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1a17bf7ed5fadf0b2408163bcfc69051ffa47c49a8944d45e90edddcb3f3e75e449" prot="public">
          <name>OrtpRtcpXrRcvrRttAll</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1a17bf7ed5fadf0b2408163bcfc69051ffabca13c3f37eb84055e939648e78291a4" prot="public">
          <name>OrtpRtcpXrRcvrRttSender</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="237" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="237" bodyend="241"/>
      </memberdef>
      <memberdef kind="enum" id="rtpsession_8h_1a400fa760cf895f44e75a01127d9c0c8a" prot="public" static="no">
        <name>OrtpRtcpXrStatSummaryFlag</name>
        <enumvalue id="rtpsession_8h_1a400fa760cf895f44e75a01127d9c0c8aa9e15d19340d2e29286f42e6608557b21" prot="public">
          <name>OrtpRtcpXrStatSummaryLoss</name>
          <initializer>= (1 &lt;&lt; 7)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1a400fa760cf895f44e75a01127d9c0c8aa630f68fe96568d0847f79cd1bbe7dc32" prot="public">
          <name>OrtpRtcpXrStatSummaryDup</name>
          <initializer>= (1 &lt;&lt; 6)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1a400fa760cf895f44e75a01127d9c0c8aa4d8f526888f38f7cfc105b3f11cf59f3" prot="public">
          <name>OrtpRtcpXrStatSummaryJitt</name>
          <initializer>= (1 &lt;&lt; 5)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1a400fa760cf895f44e75a01127d9c0c8aac19f751eeca605b007b5ff5371e18804" prot="public">
          <name>OrtpRtcpXrStatSummaryTTL</name>
          <initializer>= (1 &lt;&lt; 3)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rtpsession_8h_1a400fa760cf895f44e75a01127d9c0c8aa48e3cdafdb3c1ca5a6841907b133f41a" prot="public">
          <name>OrtpRtcpXrStatSummaryHL</name>
          <initializer>= (1 &lt;&lt; 4)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="243" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="243" bodyend="249"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="rtpsession_8h_1a5d583de241654202f1c13dd6bc408e7f" prot="public" static="no">
        <type>enum _OrtpJitterBufferAlgorithm</type>
        <definition>typedef enum _OrtpJitterBufferAlgorithm  OrtpJitterBufferAlgorithm</definition>
        <argsstring></argsstring>
        <name>OrtpJitterBufferAlgorithm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a045ce176ebe9323b1e7574e35c5fc777" prot="public" static="no">
        <type>struct <ref refid="struct__JBParameters" kindref="compound">_JBParameters</ref></type>
        <definition>typedef struct _JBParameters  JBParameters</definition>
        <argsstring></argsstring>
        <name>JBParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Jitter buffer parameters </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a4205699e0555a63bd81af2586497c034" prot="public" static="no">
        <type>struct <ref refid="struct__JitterControl" kindref="compound">_JitterControl</ref></type>
        <definition>typedef struct _JitterControl  JitterControl</definition>
        <argsstring></argsstring>
        <name>JitterControl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1ae8610e15ff6f0d81dafb6aabc7509637" prot="public" static="no">
        <type>struct <ref refid="struct__WaitPoint" kindref="compound">_WaitPoint</ref></type>
        <definition>typedef struct _WaitPoint  WaitPoint</definition>
        <argsstring></argsstring>
        <name>WaitPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a05389c4cca8b4811572d204ec6fec7ff" prot="public" static="no">
        <type>struct <ref refid="struct__RtpTransportModifier" kindref="compound">_RtpTransportModifier</ref></type>
        <definition>typedef struct _RtpTransportModifier  RtpTransportModifier</definition>
        <argsstring></argsstring>
        <name>RtpTransportModifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1ae11f0980998cf9047234a410493fb944" prot="public" static="no">
        <type>struct <ref refid="struct__RtpTransport" kindref="compound">_RtpTransport</ref></type>
        <definition>typedef struct _RtpTransport   RtpTransport</definition>
        <argsstring></argsstring>
        <name>RtpTransport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a9a6c6d3da3b206c1152e33ba1716234b" prot="public" static="no">
        <type>enum <ref refid="rtpsession_8h_1a0caa396950b0b4e735801e37f6e740df" kindref="member">_OrtpNetworkSimulatorMode</ref></type>
        <definition>typedef enum _OrtpNetworkSimulatorMode OrtpNetworkSimulatorMode</definition>
        <argsstring></argsstring>
        <name>OrtpNetworkSimulatorMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a7c436ea11700f00fc5f1ad8e70b2eb5b" prot="public" static="no">
        <type>struct <ref refid="struct__OrtpNetworkSimulatorParams" kindref="compound">_OrtpNetworkSimulatorParams</ref></type>
        <definition>typedef struct _OrtpNetworkSimulatorParams OrtpNetworkSimulatorParams</definition>
        <argsstring></argsstring>
        <name>OrtpNetworkSimulatorParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Structure describing the network simulator parameters </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a066443a1af99e13facf1d79b5e7ee133" prot="public" static="no">
        <type>struct <ref refid="struct__OrtpNetworkSimulatorCtx" kindref="compound">_OrtpNetworkSimulatorCtx</ref></type>
        <definition>typedef struct _OrtpNetworkSimulatorCtx OrtpNetworkSimulatorCtx</definition>
        <argsstring></argsstring>
        <name>OrtpNetworkSimulatorCtx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1ae66ad710ff1c91bd13531ed86a7aeeb6" prot="public" static="no">
        <type>struct <ref refid="structOrtpRtcpSendAlgorithm" kindref="compound">OrtpRtcpSendAlgorithm</ref></type>
        <definition>typedef struct OrtpRtcpSendAlgorithm  OrtpRtcpSendAlgorithm</definition>
        <argsstring></argsstring>
        <name>OrtpRtcpSendAlgorithm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a2d7fffc1ea7fa20013cb39fd3a88f966" prot="public" static="no">
        <type>struct <ref refid="structOrtpRtcpFbConfiguration" kindref="compound">OrtpRtcpFbConfiguration</ref></type>
        <definition>typedef struct OrtpRtcpFbConfiguration  OrtpRtcpFbConfiguration</definition>
        <argsstring></argsstring>
        <name>OrtpRtcpFbConfiguration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1ac2b3ce787af33f53214360ca11376615" prot="public" static="no">
        <type>OrtpRtcpXrPlcStatus(*</type>
        <definition>typedef OrtpRtcpXrPlcStatus(* OrtpRtcpXrPlcCallback) (void *userdata)</definition>
        <argsstring>)(void *userdata)</argsstring>
        <name>OrtpRtcpXrPlcCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="223" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1acd36b18c32e0b8cb1e0cb5a82f92ddba" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* OrtpRtcpXrSignalLevelCallback) (void *userdata)</definition>
        <argsstring>)(void *userdata)</argsstring>
        <name>OrtpRtcpXrSignalLevelCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="224" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a11cfa15d5b3bac4f681f3a2ba413f40e" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* OrtpRtcpXrNoiseLevelCallback) (void *userdata)</definition>
        <argsstring>)(void *userdata)</argsstring>
        <name>OrtpRtcpXrNoiseLevelCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="225" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a0cc2fb4837f42a3bcca55d98b084b6a7" prot="public" static="no">
        <type>float(*</type>
        <definition>typedef float(* OrtpRtcpXrAverageQualityIndicatorCallback) (void *userdata)</definition>
        <argsstring>)(void *userdata)</argsstring>
        <name>OrtpRtcpXrAverageQualityIndicatorCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="226" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1ab6aa6a888bd003195ec57a109349953f" prot="public" static="no">
        <type>struct <ref refid="structOrtpRtcpXrMediaCallbacks" kindref="compound">OrtpRtcpXrMediaCallbacks</ref></type>
        <definition>typedef struct OrtpRtcpXrMediaCallbacks  OrtpRtcpXrMediaCallbacks</definition>
        <argsstring></argsstring>
        <name>OrtpRtcpXrMediaCallbacks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1ae5cb7917c60ae450a91df9c41a82c702" prot="public" static="no">
        <type>struct <ref refid="structOrtpRtcpXrConfiguration" kindref="compound">OrtpRtcpXrConfiguration</ref></type>
        <definition>typedef struct OrtpRtcpXrConfiguration  OrtpRtcpXrConfiguration</definition>
        <argsstring></argsstring>
        <name>OrtpRtcpXrConfiguration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a7be2ed141af095006d31738d2182ccd0" prot="public" static="no">
        <type>struct <ref refid="structOrtpRtcpXrStats" kindref="compound">OrtpRtcpXrStats</ref></type>
        <definition>typedef struct OrtpRtcpXrStats  OrtpRtcpXrStats</definition>
        <argsstring></argsstring>
        <name>OrtpRtcpXrStats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="284" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a7493e9e4a931bc01b2d0ac06d7bfa7eb" prot="public" static="no">
        <type>struct <ref refid="structOrtpRtcpTmmbrInfo" kindref="compound">OrtpRtcpTmmbrInfo</ref></type>
        <definition>typedef struct OrtpRtcpTmmbrInfo  OrtpRtcpTmmbrInfo</definition>
        <argsstring></argsstring>
        <name>OrtpRtcpTmmbrInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="289" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a7be819afd9ffa890ce08444d5de021d6" prot="public" static="no">
        <type>struct <ref refid="struct__OrtpAddress" kindref="compound">_OrtpAddress</ref></type>
        <definition>typedef struct _OrtpAddress OrtpAddress</definition>
        <argsstring></argsstring>
        <name>OrtpAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="294" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1aff2383acf84601ad4aa3c56408297884" prot="public" static="no">
        <type>struct <ref refid="struct__OrtpStream" kindref="compound">_OrtpStream</ref></type>
        <definition>typedef struct _OrtpStream  OrtpStream</definition>
        <argsstring></argsstring>
        <name>OrtpStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="316" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a25eecf17321ed86bb56493637aba3ca6" prot="public" static="no">
        <type>struct <ref refid="struct__RtpStream" kindref="compound">_RtpStream</ref></type>
        <definition>typedef struct _RtpStream RtpStream</definition>
        <argsstring></argsstring>
        <name>RtpStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a38544b17566b8a97abd18f12e1060af4" prot="public" static="no">
        <type>struct <ref refid="struct__RtcpStream" kindref="compound">_RtcpStream</ref></type>
        <definition>typedef struct _RtcpStream  RtcpStream</definition>
        <argsstring></argsstring>
        <name>RtcpStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="369" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a904e0759e2d9ec2f67f6c63dfd0dbb66" prot="public" static="no">
        <type>struct <ref refid="struct__RtpSession" kindref="compound">_RtpSession</ref></type>
        <definition>typedef struct _RtpSession RtpSession</definition>
        <argsstring></argsstring>
        <name>RtpSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="226" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtpsession_8h_1a490c543c4d74dd460cff143820eceffd" prot="public" static="no">
        <type>struct <ref refid="struct__OrtpVideoBandwidthEstimatorParams" kindref="compound">_OrtpVideoBandwidthEstimatorParams</ref></type>
        <definition>typedef struct _OrtpVideoBandwidthEstimatorParams  OrtpVideoBandwidthEstimatorParams</definition>
        <argsstring></argsstring>
        <name>OrtpVideoBandwidthEstimatorParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Structure describing the video bandwidth estimator parameters </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="460" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="rtpsession_8h_1a95e0f8dec110a47af7ba63efd5bee51a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ortp_network_simulator_mode_to_string</definition>
        <argsstring>(OrtpNetworkSimulatorMode mode)</argsstring>
        <name>ortp_network_simulator_mode_to_string</name>
        <param>
          <type>OrtpNetworkSimulatorMode</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="470" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/netsim.c" bodystart="125" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a740cbd01c5d0cfa2c1f353183ab95c14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OrtpNetworkSimulatorMode</type>
        <definition>OrtpNetworkSimulatorMode ortp_network_simulator_mode_from_string</definition>
        <argsstring>(const char *str)</argsstring>
        <name>ortp_network_simulator_mode_from_string</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="471" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/netsim.c" bodystart="139" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a0fa068a78f69d25603baf8801cd352b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
        <definition>RtpSession* rtp_session_new</definition>
        <argsstring>(int mode)</argsstring>
        <name>rtp_session_new</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new rtp session. If the session is able to send data (RTP_SESSION_SENDONLY or RTP_SESSION_SENDRECV), then a random SSRC number is choosed for the outgoing stream. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the RtpSessionMode flags.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created rtp session. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="475" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="368" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a431c5b6dd2834bef90fef43bd643eb80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_scheduling_mode</definition>
        <argsstring>(RtpSession *session, int yesno)</argsstring>
        <name>rtp_session_set_scheduling_mode</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yesno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the scheduling mode of the rtp session. If <emphasis>yesno</emphasis> is TRUE, the rtp session is in the scheduled mode, that means that you can use <ref refid="sessionset_8h_1af199d48aa2a51ff81a772aef2c477e2e" kindref="member">session_set_select()</ref> to block until it&apos;s time to receive or send on this session according to the timestamp passed to the respective functions. You can also use blocking mode (see <ref refid="rtpsession_8h_1a3160cbe78f10ac689845ed967b7cd974" kindref="member">rtp_session_set_blocking_mode()</ref> ), to simply block within the receive and send functions. If <emphasis>yesno</emphasis> is FALSE, the ortp scheduler will not manage those sessions, meaning that blocking mode and the use of <ref refid="sessionset_8h_1af199d48aa2a51ff81a772aef2c477e2e" kindref="member">session_set_select()</ref> for this session are disabled. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yesno</parametername>
</parameternamelist>
<parameterdescription>
<para>a boolean to indicate the scheduling mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="476" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="395" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a3160cbe78f10ac689845ed967b7cd974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_blocking_mode</definition>
        <argsstring>(RtpSession *session, int yesno)</argsstring>
        <name>rtp_session_set_blocking_mode</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yesno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function implicitely enables the scheduling mode if yesno is TRUE. <ref refid="rtpsession_8h_1a3160cbe78f10ac689845ed967b7cd974" kindref="member">rtp_session_set_blocking_mode()</ref> defines the behaviour of the <ref refid="rtpsession_8h_1a2e325c908712601c051a7eedc59ca935" kindref="member">rtp_session_recv_with_ts()</ref> and <ref refid="rtpsession_8h_1a3ed3f377bf06840f0e32c9b9a76bad10" kindref="member">rtp_session_send_with_ts()</ref> functions. If <emphasis>yesno</emphasis> is TRUE, <ref refid="rtpsession_8h_1a2e325c908712601c051a7eedc59ca935" kindref="member">rtp_session_recv_with_ts()</ref> will block until it is time for the packet to be received, according to the timestamp passed to the function. After this time, the function returns. For <ref refid="rtpsession_8h_1a3ed3f377bf06840f0e32c9b9a76bad10" kindref="member">rtp_session_send_with_ts()</ref>, it will block until it is time for the packet to be sent. If <emphasis>yesno</emphasis> is FALSE, then the two functions will return immediately.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yesno</parametername>
</parameternamelist>
<parameterdescription>
<para>a boolean </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="477" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="430" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a7f0a24e2969eb0b2abac2f1ad5a31002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_profile</definition>
        <argsstring>(RtpSession *session, RtpProfile *profile)</argsstring>
        <name>rtp_session_set_profile</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref> *</type>
          <declname>profile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the RTP profile to be used for the session. By default, all session are created by <ref refid="rtpsession_8h_1a0fa068a78f69d25603baf8801cd352b7" kindref="member">rtp_session_new()</ref> are initialized with the AV profile, as defined in RFC 3551. The application can set any other profile instead using that function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profile</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp profile </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="478" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="449" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1aad82e403491b4e4696c1ebb1efe71f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_send_profile</definition>
        <argsstring>(RtpSession *session, RtpProfile *profile)</argsstring>
        <name>rtp_session_set_send_profile</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref> *</type>
          <declname>profile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the RTP profile to be used for the sending by this session. By default, all session are created by <ref refid="rtpsession_8h_1a0fa068a78f69d25603baf8801cd352b7" kindref="member">rtp_session_new()</ref> are initialized with the AV profile, as defined in RFC 3551. The application can set any other profile instead using that function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profile</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp profile </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="479" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="498" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1aff8d780e4e02d24ce7fd22a22b1b1448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_recv_profile</definition>
        <argsstring>(RtpSession *session, RtpProfile *profile)</argsstring>
        <name>rtp_session_set_recv_profile</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref> *</type>
          <declname>profile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the RTP profile to be used for the receiveing by this session. By default, all session are created by <ref refid="rtpsession_8h_1a0fa068a78f69d25603baf8801cd352b7" kindref="member">rtp_session_new()</ref> are initialized with the AV profile, as defined in RFC 3551. The application can set any other profile instead using that function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profile</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp profile </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="480" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="516" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a6189df28500f7b32d5f5e278c89dcce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref> *</type>
        <definition>RtpProfile* rtp_session_get_profile</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_profile</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session <verbatim>    DEPRECATED! Returns current send profile.
    Use rtp_session_get_send_profile() or rtp_session_get_recv_profile()</verbatim> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="481" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="529" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1afe768707f24ac69099de4f4f6b983ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref> *</type>
        <definition>RtpProfile* rtp_session_get_send_profile</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_send_profile</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session <verbatim>    Returns current send profile.</verbatim> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="482" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="540" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ab0a11cd312984518930c9f970a56ab75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref> *</type>
        <definition>RtpProfile* rtp_session_get_recv_profile</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_recv_profile</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session <verbatim>    Returns current receive profile.</verbatim> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="483" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="550" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1aa9f9421d7e744aa680d6fd327db29026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_signal_connect</definition>
        <argsstring>(RtpSession *session, const char *signal_name, RtpCallback cb, void *user_data)</argsstring>
        <name>rtp_session_signal_connect</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>signal_name</declname>
        </param>
        <param>
          <type>RtpCallback</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function provides the way for an application to be informed of various events that may occur during a rtp session. <emphasis>signal_name</emphasis> is a string identifying the event, and <emphasis>cb</emphasis> is a user supplied function in charge of processing it. The application can register several callbacks for the same signal, in the limit of <emphasis>RTP_CALLBACK_TABLE_MAX_ENTRIES</emphasis>. Here are name and meaning of supported signals types:</para><para>&quot;ssrc_changed&quot;: the SSRC of the incoming stream has changed.</para><para>&quot;payload_type_changed&quot;: the payload type of the incoming stream has changed.</para><para>&quot;telephone-event_packet&quot;: a telephone-event rtp packet (RFC2833) is received.</para><para>&quot;telephone-event&quot;: a telephone event has occurred. This is a high-level shortcut for &quot;telephone-event_packet&quot;.</para><para>&quot;network_error&quot;: a network error happened on a socket. Arguments of the callback functions are a const char * explaining the error, an int errno error code and the user_data as usual.</para><para>&quot;timestamp_jump&quot;: we have received a packet with timestamp in far future compared to last timestamp received. The farness of far future is set by rtp_sesssion_set_time_jump_limit() &quot;rtcp_bye&quot;: we have received a RTCP bye packet. Arguments of the callback functions are a const char * containing the leaving reason and the user_data. &quot;congestion_state_changed&quot;: congestion detector object changed its internal state. Arguments of the callback function are previous and new states. Returns: 0 on success, -EOPNOTSUPP if the signal does not exists, -1 if no more callbacks can be assigned to the signal type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signal_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of a signal </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>a RtpCallback </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to any data to be passed when invoking the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="484" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="627" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a3d02b773f1747f566c22a1f47eab96a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_signal_disconnect_by_callback</definition>
        <argsstring>(RtpSession *session, const char *signal_name, RtpCallback cb)</argsstring>
        <name>rtp_session_signal_disconnect_by_callback</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>signal_name</declname>
        </param>
        <param>
          <type>RtpCallback</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes callback function <emphasis>cb</emphasis> to the list of callbacks for signal <emphasis>signal</emphasis>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signal_name</parametername>
</parameternamelist>
<parameterdescription>
<para>a signal name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>a callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: 0 on success, a negative value if the callback was not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="485" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="651" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a3062539b7c2f064487511f6f0d8e216c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_ssrc</definition>
        <argsstring>(RtpSession *session, uint32_t ssrc)</argsstring>
        <name>rtp_session_set_ssrc</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ssrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the SSRC for the outgoing stream. If not done, a random ssrc is used.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ssrc</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned 32bit integer representing the synchronisation source identifier (SSRC). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="486" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="711" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a6c1d392f73d408de69304543c1c7444a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rtp_session_get_send_ssrc</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_send_ssrc</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the SSRC for the outgoing stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="487" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="722" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ae260f30eb162a0e4686502e3cfb532ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rtp_session_get_recv_ssrc</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_recv_ssrc</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the SSRC for the incoming stream.</para><para>If no packets have been received yet, 0 is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="488" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="732" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ac42dcb27e5976493da0d90de9bec5539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_seq_number</definition>
        <argsstring>(RtpSession *session, uint16_t seq)</argsstring>
        <name>rtp_session_set_seq_number</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>seq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the initial sequence number for outgoing stream.. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session freshly created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seq</parametername>
</parameternamelist>
<parameterdescription>
<para>a 16 bit unsigned number. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="489" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="672" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a9623b86923bace9f34956f3e0fd475b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t rtp_session_get_seq_number</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_seq_number</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current sequence number for outgoing stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="490" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="685" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a94cff96b50ea0758118dbd6f6d995afc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rtp_session_get_rcv_ext_seq_number</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_rcv_ext_seq_number</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the highest extended sequence number received. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="491" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="692" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a8a7a1274f07648191be9937148b92c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_get_cum_loss</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_cum_loss</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the latest cumulative loss value computed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="492" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="699" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a5137f504acf4536dfcd0f1e0e52f2abb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_duplication_ratio</definition>
        <argsstring>(RtpSession *session, float ratio)</argsstring>
        <name>rtp_session_set_duplication_ratio</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="493" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="676" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a53f1d5afe6db2314411155f1d677ab22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_enable_jitter_buffer</definition>
        <argsstring>(RtpSession *session, bool_t enabled)</argsstring>
        <name>rtp_session_enable_jitter_buffer</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="495" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a737717d728c4375643257bbe2aee3f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t rtp_session_jitter_buffer_enabled</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_jitter_buffer_enabled</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="496" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ac14fd747e1168852e98aa99f028157c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_jitter_buffer_params</definition>
        <argsstring>(RtpSession *session, const JBParameters *par)</argsstring>
        <name>rtp_session_set_jitter_buffer_params</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="rtpsession_8h_1a045ce176ebe9323b1e7574e35c5fc777" kindref="member">JBParameters</ref> *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="497" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a9841bac05956a611de77d3cf051e54fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_get_jitter_buffer_params</definition>
        <argsstring>(RtpSession *session, JBParameters *par)</argsstring>
        <name>rtp_session_get_jitter_buffer_params</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="rtpsession_8h_1a045ce176ebe9323b1e7574e35c5fc777" kindref="member">JBParameters</ref> *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="498" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a3ba183096727b72225908e68ac4ed8c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_send_ts_offset</definition>
        <argsstring>(RtpSession *s, uint32_t offset)</argsstring>
        <name>rtp_session_set_send_ts_offset</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set an additional timestamps offset for outgoing stream.. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session freshly created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>a timestamp offset value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="506" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="554" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a15b80ab2a68ca8f8f5a034d3553c3c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rtp_session_get_send_ts_offset</definition>
        <argsstring>(RtpSession *s)</argsstring>
        <name>rtp_session_get_send_ts_offset</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="507" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="558" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a3504171811ed93af8630749aa4a1b881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_jitter_compensation</definition>
        <argsstring>(RtpSession *session, int milisec)</argsstring>
        <name>rtp_session_set_jitter_compensation</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>milisec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a RtpSession </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>milisec</parametername>
</parameternamelist>
<parameterdescription>
<para>the time interval in milisec to be jitter compensed.</para></parameterdescription>
</parameteritem>
</parameterlist>
Sets the time interval for which packet are buffered instead of being delivered to the application. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="511" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="131" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a0eee0ea3d4a44e68d1aef90b4b9a35be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_enable_adaptive_jitter_compensation</definition>
        <argsstring>(RtpSession *session, bool_t val)</argsstring>
        <name>rtp_session_enable_adaptive_jitter_compensation</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="512" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ad27be6013ce94656180a58963800230c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t rtp_session_adaptive_jitter_compensation_enabled</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_adaptive_jitter_compensation_enabled</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="513" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ae2d0b23dd9d14fdfe6ee4f4377b1a2f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_time_jump_limit</definition>
        <argsstring>(RtpSession *session, int miliseconds)</argsstring>
        <name>rtp_session_set_time_jump_limit</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>miliseconds</declname>
          <defname>milisecs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>oRTP has the possibility to inform the application through a callback registered with rtp_session_signal_connect about crazy incoming RTP stream that jumps from a timestamp N to N+some_crazy_value. This lets the opportunity for the application to reset the session in order to resynchronize, or any other action like stopping the call and reporting an error. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>the rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>milisecs</parametername>
</parameternamelist>
<parameterdescription>
<para>a time interval in miliseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="515" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1472" bodyend="1478"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a51e6229104f299f0f56cbae29c13d4c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_join_multicast_group</definition>
        <argsstring>(RtpSession *session, const char *ip)</argsstring>
        <name>rtp_session_join_multicast_group</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="516" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="412" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a21370581ee33d3519cdb578b153f782c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_set_local_addr</definition>
        <argsstring>(RtpSession *session, const char *addr, int rtp_port, int rtcp_port)</argsstring>
        <name>rtp_session_set_local_addr</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rtp_port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rtcp_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rtp_session_set_local_addr: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session freshly created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>a local IP address in the xxx.xxx.xxx.xxx form. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtp_port</parametername>
</parameternamelist>
<parameterdescription>
<para>a local port or -1 to let oRTP choose the port randomly </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtcp_port</parametername>
</parameternamelist>
<parameterdescription>
<para>a local port or -1 to let oRTP choose the port randomly <verbatim>    Specify the local addr to be use to listen for rtp packets or to send rtp packet from.
    In case where the rtp session is send-only, then it is not required to call this function:
    when calling rtp_session_set_remote_addr(), if no local address has been set, then the
    default INADRR_ANY (0.0.0.0) IP address with a random port will be used. Calling
    rtp_session_set_local_addr() is mandatory when the session is recv-only or duplex.

    Returns: 0 on success.</verbatim> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="517" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="347" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a2f93a8a2ea1f132b412bf8b9e66886ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_get_local_port</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_get_local_port</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rtp_session_get_local_port: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session for which <ref refid="rtpsession_8h_1a21370581ee33d3519cdb578b153f782c" kindref="member">rtp_session_set_local_addr()</ref> or <ref refid="rtpsession_8h_1a5668f5b4f85e7188c9ede364beb610cd" kindref="member">rtp_session_set_remote_addr()</ref> has been called <verbatim>    This function can be useful to retrieve the local port that was randomly choosen by
    rtp_session_set_remote_addr() when rtp_session_set_local_addr() was not called.

    Returns: the local port used to listen for rtp packets, -1 if not set.</verbatim> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="518" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="751" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a44bc2c89317400018d2c3a5e70e556f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_get_local_rtcp_port</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_get_local_rtcp_port</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="519" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="755" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a2e567fa3141c55c14eea2d85f075db8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_set_remote_addr_full</definition>
        <argsstring>(RtpSession *session, const char *rtp_addr, int rtp_port, const char *rtcp_addr, int rtcp_port)</argsstring>
        <name>rtp_session_set_remote_addr_full</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rtp_addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rtp_port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rtcp_addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rtcp_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rtp_session_set_remote_addr_full: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session freshly created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtp_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>a remote IP address in the xxx.xxx.xxx.xxx form. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtp_port</parametername>
</parameternamelist>
<parameterdescription>
<para>a remote rtp port. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtcp_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>a remote IP address in the xxx.xxx.xxx.xxx form. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtcp_port</parametername>
</parameternamelist>
<parameterdescription>
<para>a remote rtcp port. <verbatim>    Sets the remote address of the rtp session, ie the destination address where rtp packet
    are sent. If the session is recv-only or duplex, it also sets the origin of incoming RTP
    packets. Rtp packets that don&apos;t come from addr:port are discarded.

    Returns: 0 on success.</verbatim> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="522" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="792" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a223175cddd49111f4fb0bb7a01f8c67f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_set_remote_addr_and_port</definition>
        <argsstring>(RtpSession *session, const char *addr, int rtp_port, int rtcp_port)</argsstring>
        <name>rtp_session_set_remote_addr_and_port</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rtp_port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rtcp_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="524" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="920" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a5668f5b4f85e7188c9ede364beb610cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_set_remote_addr</definition>
        <argsstring>(RtpSession *session, const char *addr, int port)</argsstring>
        <name>rtp_session_set_remote_addr</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rtp_session_set_remote_addr: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session freshly created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>a remote IP address in the xxx.xxx.xxx.xxx form. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>a remote port. <verbatim>    Sets the remote address of the rtp session, ie the destination address where rtp packet
    are sent. If the session is recv-only or duplex, it also sets the origin of incoming RTP
    packets. Rtp packets that don&apos;t come from addr:port are discarded.

    Returns: 0 on success.</verbatim> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="525" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="772" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a99fd2d76a065db4293ba8d1d7e5db720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_add_aux_remote_addr_full</definition>
        <argsstring>(RtpSession *session, const char *rtp_addr, int rtp_port, const char *rtcp_addr, int rtcp_port)</argsstring>
        <name>rtp_session_add_aux_remote_addr_full</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rtp_addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rtp_port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rtcp_addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rtcp_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rtp_session_add_remote_aux_addr_full: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session freshly created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtp_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>a local IP address in the xxx.xxx.xxx.xxx form. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtp_port</parametername>
</parameternamelist>
<parameterdescription>
<para>a local rtp port. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtcp_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>a local IP address in the xxx.xxx.xxx.xxx form. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtcp_port</parametername>
</parameternamelist>
<parameterdescription>
<para>a local rtcp port. <verbatim>    Add an auxiliary remote address for the rtp session, ie a destination address where rtp packet
    are sent.

    Returns: 0 on success.</verbatim> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="526" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="939" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1aea909385f7283407515f41739dc1104d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_clear_aux_remote_addr</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_clear_aux_remote_addr</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="527" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="943" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a719903156295f7132a5288430a04f1a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_sockets</definition>
        <argsstring>(RtpSession *session, int rtpfd, int rtcpfd)</argsstring>
        <name>rtp_session_set_sockets</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rtpfd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rtcpfd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="530" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="948" bodyend="956"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a38408c00b1fd3139562c402cb14996a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_get_transports</definition>
        <argsstring>(const RtpSession *session, RtpTransport **rtptr, RtpTransport **rtcptr)</argsstring>
        <name>rtp_session_get_transports</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref> **</type>
          <declname>rtptr</declname>
        </param>
        <param>
          <type><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref> **</type>
          <declname>rtcptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="532" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="972" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a892108d17986f589039510e01eb6d3c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ortp_socket_t</type>
        <definition>ortp_socket_t rtp_session_get_rtp_socket</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_get_rtp_socket</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="534" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1517" bodyend="1519"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ab7eb2d4933b2b390504d9d0e0bed8728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ortp_socket_t</type>
        <definition>ortp_socket_t rtp_session_get_rtcp_socket</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_get_rtcp_socket</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="535" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1521" bodyend="1523"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a56ce46e45420450b94a4d209c9030249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_refresh_sockets</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_refresh_sockets</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Requests the session to re-create and bind its RTP and RTCP sockets same as they are currently. This is used when a change in the routing rules of the host or process was made, in order to have this routing rules change taking effect on the RTP/RTCP packets sent by the session. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="536" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="406" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a6154b4d52a7b013413d81947f0891b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_set_dscp</definition>
        <argsstring>(RtpSession *session, int dscp)</argsstring>
        <name>rtp_session_set_dscp</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dscp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rtp_session_set_dscp: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dscp</parametername>
</parameternamelist>
<parameterdescription>
<para>desired DSCP PHB value</para></parameterdescription>
</parameteritem>
</parameterlist>
Sets the DSCP (Differentiated Services Code Point) for outgoing RTP packets.</para><para>Returns: 0 on success. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="540" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="637" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a6c2a87c9f363671f19529909b0d023c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_get_dscp</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_get_dscp</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rtp_session_get_dscp: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session</para></parameterdescription>
</parameteritem>
</parameterlist>
Returns the DSCP (Differentiated Services Code Point) for outgoing RTP packets. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="541" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="735" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a470b64302a541ddfd78d1e60e72de161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_set_pktinfo</definition>
        <argsstring>(RtpSession *session, int activate)</argsstring>
        <name>rtp_session_set_pktinfo</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>activate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rtp_session_set_pktinfo: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>activate</parametername>
</parameternamelist>
<parameterdescription>
<para>activation flag (0 to deactivate, other value to activate)</para></parameterdescription>
</parameteritem>
</parameterlist>
(De)activates packet info for incoming and outgoing packets.</para><para>Returns: 0 on success. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="545" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="433" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1af7428b8772540474aa792897885c7af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_set_multicast_ttl</definition>
        <argsstring>(RtpSession *session, int ttl)</argsstring>
        <name>rtp_session_set_multicast_ttl</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ttl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rtp_session_set_multicast_ttl: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ttl</parametername>
</parameternamelist>
<parameterdescription>
<para>desired Multicast Time-To-Live</para></parameterdescription>
</parameteritem>
</parameterlist>
Sets the TTL (Time-To-Live) for outgoing multicast packets.</para><para>Returns: 0 on success. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="548" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="500" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a530f51392ebb4811f402371833bd117a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_get_multicast_ttl</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_multicast_ttl</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rtp_session_get_multicast_ttl: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session</para></parameterdescription>
</parameteritem>
</parameterlist>
Returns the TTL (Time-To-Live) for outgoing multicast packets. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="549" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="551" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a3ffa7ec566db9ed4f77263f47fafb005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_set_multicast_loopback</definition>
        <argsstring>(RtpSession *session, int yesno)</argsstring>
        <name>rtp_session_set_multicast_loopback</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yesno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yesno</parametername>
</parameternamelist>
<parameterdescription>
<para>enable multicast loopback</para></parameterdescription>
</parameteritem>
</parameterlist>
Enable multicast loopback.</para><para>Returns: 0 on success. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="551" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="566" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1af409cc95767678af59767224912e9bd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_get_multicast_loopback</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_multicast_loopback</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rtp_session_get_multicast_loopback: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session</para></parameterdescription>
</parameteritem>
</parameterlist>
Returns the multicast loopback state of rtp session (true or false). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="552" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="622" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ae894a47b51d8570930ebfae48e42fe1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_set_send_payload_type</definition>
        <argsstring>(RtpSession *session, int paytype)</argsstring>
        <name>rtp_session_set_send_payload_type</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>paytype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the payload type of the rtp session. It decides of the payload types written in the of the rtp header for the outgoing stream, if the session is SENDRECV or SENDONLY. For payload type in incoming packets, the application can be informed by registering for the &quot;payload_type_changed&quot; signal, so that it can make the necessary changes on the downstream decoder that deals with the payload of the packets.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paytype</parametername>
</parameternamelist>
<parameterdescription>
<para>the payload type number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 if the payload is not defined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="556" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="762" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a2eaa2be31af31a67e4bcfdbbcdba3732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_get_send_payload_type</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_get_send_payload_type</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the payload type currently used in outgoing rtp packets </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="557" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="773" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a740572361056922a8f6c1c916aad1461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_get_recv_payload_type</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_get_recv_payload_type</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the payload type currently used in incoming rtp packets </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="559" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="820" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a2cce98b970a30aa2c0b1b0714fb7ca6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_set_recv_payload_type</definition>
        <argsstring>(RtpSession *session, int pt)</argsstring>
        <name>rtp_session_set_recv_payload_type</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pt</declname>
          <defname>paytype</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the expected payload type for incoming packets. If the actual payload type in incoming packets is different that this expected payload type, thus the &quot;payload_type_changed&quot; signal is emitted.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paytype</parametername>
</parameternamelist>
<parameterdescription>
<para>the payload type number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 if the payload is not defined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="560" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="803" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ad65db84a0d2bb28bbdbec30f9c12b2a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_set_send_telephone_event_payload_type</definition>
        <argsstring>(RtpSession *session, int paytype)</argsstring>
        <name>rtp_session_set_send_telephone_event_payload_type</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>paytype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign the payload type number for sending telephone-event. It is required that a &quot;telephone-event&quot; PayloadType is assigned in the RtpProfile set for the RtpSession. This function is in most of cases useless, unless there is an ambiguity where several PayloadType for &quot;telephone-event&quot; are present in the RtpProfile. This might happen during SIP offeranswer scenarios. This function allows to remove any ambiguity by letting the application choose the one to be used. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>the RtpSession </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paytype</parametername>
</parameternamelist>
<parameterdescription>
<para>the payload type number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0, -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="562" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="786" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a7056cfba3539095c6e4237b82c8bda94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_set_payload_type</definition>
        <argsstring>(RtpSession *session, int pt)</argsstring>
        <name>rtp_session_set_payload_type</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the expected payload type for incoming packets and payload type to be used for outgoing packets. If the actual payload type in incoming packets is different that this expected payload type, thus the &quot;payload_type_changed&quot; signal is emitted.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>the payload type number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 if the payload is not defined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="564" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="833" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ab8988e3fe0655201ac244523a8245c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_symmetric_rtp</definition>
        <argsstring>(RtpSession *session, bool_t yesno)</argsstring>
        <name>rtp_session_set_symmetric_rtp</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>yesno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable or disable the &quot;rtp symmetric&quot; hack which consists of the following: after the first packet is received, the source address of the packet is set to be the destination address for all next packets. This is useful to pass-through firewalls. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yesno</parametername>
</parameternamelist>
<parameterdescription>
<para>a boolean to enable or disable the feature </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="566" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1788" bodyend="1791"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a153192c45a6b2b2c476aed703f70b916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t rtp_session_get_symmetric_rtp</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_get_symmetric_rtp</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="568" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2453" bodyend="2455"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a7c32a9801c46b793baca459b6ec713a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_enable_rtcp_mux</definition>
        <argsstring>(RtpSession *session, bool_t yesno)</argsstring>
        <name>rtp_session_enable_rtcp_mux</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>yesno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="570" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1793" bodyend="1795"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1aabaa7b49bdfdf9ee99cff8a6cd7db086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t rtp_session_rtcp_mux_enabled</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_rtcp_mux_enabled</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="572" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1797" bodyend="1799"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1af339d62b7aaa27764c549957da80a1d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_connected_mode</definition>
        <argsstring>(RtpSession *session, bool_t yesno)</argsstring>
        <name>rtp_session_set_connected_mode</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>yesno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If yesno is TRUE, thus a connect() syscall is done on the socket to the destination address set by <ref refid="rtpsession_8h_1a5668f5b4f85e7188c9ede364beb610cd" kindref="member">rtp_session_set_remote_addr()</ref>, or if the session does symmetric rtp (see <ref refid="rtpsession_8h_1ab8988e3fe0655201ac244523a8245c9f" kindref="member">rtp_session_set_symmetric_rtp()</ref>) a the connect() is done to the source address of the first packet received. Connecting a socket has effect of rejecting all incoming packets that don&apos;t come from the address specified in connect(). It also makes ICMP errors (such as connection refused) available to the application. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yesno</parametername>
</parameternamelist>
<parameterdescription>
<para>a boolean to enable or disable the feature </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="574" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1814" bodyend="1816"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a89f9b413210262726be7674b7742ad44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_enable_rtcp</definition>
        <argsstring>(RtpSession *session, bool_t yesno)</argsstring>
        <name>rtp_session_enable_rtcp</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>yesno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>By default oRTP automatically sends RTCP SR or RR packets. If yesno is set to FALSE, the RTCP sending of packet is disabled. This functionality might be needed for some equipments that do not support RTCP, leading to a traffic of ICMP errors on the network. It can also be used to save bandwidth despite the RTCP bandwidth is actually and usually very very low. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="576" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="464" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a16c478d6e3d4f513e456bccd69a1082f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t rtp_session_rtcp_enabled</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_rtcp_enabled</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="581" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="468" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a9e6631e023727b61a6ceb78ab4a5918d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_rtcp_report_interval</definition>
        <argsstring>(RtpSession *session, int value_ms)</argsstring>
        <name>rtp_session_set_rtcp_report_interval</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the default interval in milliseconds for RTCP reports emitted by the session </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="583" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="476" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a4c291f9d3c9ab47108a126b8e277cb24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_target_upload_bandwidth</definition>
        <argsstring>(RtpSession *session, int target_bandwidth)</argsstring>
        <name>rtp_session_set_target_upload_bandwidth</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>target_bandwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define the bandwidth available for RTCP streams based on the upload bandwidth targeted by the application (in bits/s). RTCP streams would not take more than a few percents of the limit bandwidth (around 5%).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_bandwidth</parametername>
</parameternamelist>
<parameterdescription>
<para>bandwidth limit in bits/s </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="593" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="481" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1adf9262378f77b77421c4b4c4ae75f9f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_get_target_upload_bandwidth</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_target_upload_bandwidth</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="594" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="484" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a93f044c3d2d5f7dca22f3ebe769c600f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_configure_rtcp_xr</definition>
        <argsstring>(RtpSession *session, const OrtpRtcpXrConfiguration *config)</argsstring>
        <name>rtp_session_configure_rtcp_xr</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structOrtpRtcpXrConfiguration" kindref="compound">OrtpRtcpXrConfiguration</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="596" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_xr.c" bodystart="293" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1affd27cdbfa418adb79d0b88b1a9ec836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_rtcp_xr_media_callbacks</definition>
        <argsstring>(RtpSession *session, const OrtpRtcpXrMediaCallbacks *cbs)</argsstring>
        <name>rtp_session_set_rtcp_xr_media_callbacks</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structOrtpRtcpXrMediaCallbacks" kindref="compound">OrtpRtcpXrMediaCallbacks</ref> *</type>
          <declname>cbs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="597" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_xr.c" bodystart="299" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a7e47523eeb130c48d79942a801e93f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_ssrc_changed_threshold</definition>
        <argsstring>(RtpSession *session, int numpackets)</argsstring>
        <name>rtp_session_set_ssrc_changed_threshold</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numpackets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the number of packets containing a new SSRC that will trigger the &quot;ssrc_changed&quot; callback. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="599" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1633" bodyend="1635"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a7df1261d3eeaf10d283ba4ac34e2388d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* rtp_session_recvm_with_ts</definition>
        <argsstring>(RtpSession *session, uint32_t user_ts)</argsstring>
        <name>rtp_session_recvm_with_ts</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>user_ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Try to get a rtp packet presented as a mblk_t structure from the rtp session. The <emphasis>user_ts</emphasis> parameter is relative to the first timestamp of the incoming stream. In other words, the application does not have to know the first timestamp of the stream, it can simply call for the first time this function with <emphasis>user_ts=0</emphasis>, and then incrementing it as it want. The RtpSession takes care of synchronisation between the stream timestamp and the user timestamp given here.</para><para>This function returns the entire packet (with header).</para><para>The behaviour of this function has changed since version 0.15.0. Previously the payload data could be accessed using mblk_t::b_cont::b_rptr field of the returned mblk_t. This is no more the case. The convenient way of accessing the payload data is to use rtp_get_payload() : <programlisting><codeline><highlight class="normal">unsigned<sp/>char<sp/>*payload;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>payload_size;</highlight></codeline>
<codeline><highlight class="normal">payload_size=rtp_get_payload(mp,&amp;payload);</highlight></codeline>
</programlisting> OR simply skip the header this way, the data is then comprised between mp-&gt;b_rptr and mp-&gt;b_wptr: <programlisting><codeline><highlight class="normal">rtp_get_payload(mp,&amp;mp-&gt;b_rptr);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>a timestamp.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a rtp packet presented as a mblk_t. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="602" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1183" bodyend="1329"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1abcdc6f7a3f81323b4f89e6a072b65477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* rtp_session_create_packet</definition>
        <argsstring>(RtpSession *session, size_t header_size, const uint8_t *payload, size_t payload_size)</argsstring>
        <name>rtp_session_create_packet</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>header_size</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>payload_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new rtp packet. In the header, ssrc and payload_type according to the session&apos;s context. Timestamp is not set, it will be set when the packet is going to be sent with <ref refid="rtpsession_8h_1afda0872c335c06a86a45ca4591a8b7ee" kindref="member">rtp_session_sendm_with_ts()</ref>. Sequence number is initalized to previous sequence number sent + 1 If payload_size is zero, thus an empty packet (just a RTP header) is returned.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>header_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the rtp header size. For standart size (without extensions), it is RTP_FIXED_HEADER_SIZE </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>data to be copied into the rtp packet. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of data carried by the rtp packet. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a rtp packet in a mblk_t (message block) structure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="603" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="865" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a684815dccddf66e6f544e4283f0c134e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* rtp_session_create_packet_raw</definition>
        <argsstring>(const uint8_t *packet, size_t packet_size)</argsstring>
        <name>rtp_session_create_packet_raw</name>
        <param>
          <type>const uint8_t *</type>
          <declname>packet</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>packet_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a packet already including headers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="604" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="887" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a4ac174ce6991e2864fe7faa771c01199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* rtp_session_create_packet_with_data</definition>
        <argsstring>(RtpSession *session, uint8_t *payload, size_t payload_size, void(*freefn)(void *))</argsstring>
        <name>rtp_session_create_packet_with_data</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>payload_size</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>freefn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new rtp packet using the given payload buffer (no copy). The header will be allocated separetely. In the header, ssrc and payload_type according to the session&apos;s context. Timestamp and seq number are not set, there will be set when the packet is going to be sent with <ref refid="rtpsession_8h_1afda0872c335c06a86a45ca4591a8b7ee" kindref="member">rtp_session_sendm_with_ts()</ref>. oRTP will send this packet using libc&apos;s sendmsg() (if this function is availlable!) so that there will be no packet concatenation involving copies to be done in user-space. <emphasis>freefn</emphasis> can be NULL, in that case payload will be kept untouched.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to be sent with this packet </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>freefn</parametername>
</parameternamelist>
<parameterdescription>
<para>a function that will be called when the payload buffer is no more needed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: a rtp packet in a mblk_t (message block) structure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="605" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="914" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1aac85c2ae4bbed6e8ce6d5cdb9a086810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* rtp_session_create_packet_in_place</definition>
        <argsstring>(RtpSession *session, uint8_t *buffer, size_t size, void(*freefn)(void *))</argsstring>
        <name>rtp_session_create_packet_in_place</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>freefn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new rtp packet using the buffer given in arguments (no copy). In the header, ssrc and payload_type according to the session&apos;s context. Timestamp and seq number are not set, there will be set when the packet is going to be sent with <ref refid="rtpsession_8h_1afda0872c335c06a86a45ca4591a8b7ee" kindref="member">rtp_session_sendm_with_ts()</ref>. <emphasis>freefn</emphasis> can be NULL, in that case payload will be kept untouched.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer that contains first just enough place to write a RTP header, then the data to send. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>freefn</parametername>
</parameternamelist>
<parameterdescription>
<para>a function that will be called once the buffer is no more needed (the data has been sent). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a rtp packet in a mblk_t (message block) structure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="606" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="946" bodyend="956"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1afda0872c335c06a86a45ca4591a8b7ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_sendm_with_ts</definition>
        <argsstring>(RtpSession *session, mblk_t *mp, uint32_t userts)</argsstring>
        <name>rtp_session_sendm_with_ts</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>mp</declname>
          <defname>packet</defname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>userts</declname>
          <defname>timestamp</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send the rtp datagram <emphasis>packet</emphasis> to the destination set by <ref refid="rtpsession_8h_1a5668f5b4f85e7188c9ede364beb610cd" kindref="member">rtp_session_set_remote_addr()</ref> with timestamp <emphasis>timestamp</emphasis>. For audio data, the timestamp is the number of the first sample resulting of the data transmitted. See rfc1889 for details. The packet (<emphasis>packet</emphasis>) is freed once it is sent.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packet</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp packet presented as a mblk_t. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>the timestamp of the data to be sent. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes sent over the network. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="607" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1065" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a113b53a11073f3a359e0457af62f8359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_sendto</definition>
        <argsstring>(RtpSession *session, bool_t is_rtp, mblk_t *m, int flags, const struct sockaddr *destaddr, socklen_t destlen)</argsstring>
        <name>rtp_session_sendto</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>is_rtp</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const struct sockaddr *</type>
          <declname>destaddr</declname>
        </param>
        <param>
          <type>socklen_t</type>
          <declname>destlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="608" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="1038" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a6b88f6e1667e04f101b68ed894fe709e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_recvfrom</definition>
        <argsstring>(RtpSession *session, bool_t is_rtp, mblk_t *m, int flags, struct sockaddr *from, socklen_t *fromlen)</argsstring>
        <name>rtp_session_recvfrom</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>is_rtp</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>struct sockaddr *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>socklen_t *</type>
          <declname>fromlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="609" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="1115" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a2e325c908712601c051a7eedc59ca935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_recv_with_ts</definition>
        <argsstring>(RtpSession *session, uint8_t *buffer, int len, uint32_t ts, int *have_more)</argsstring>
        <name>rtp_session_recv_with_ts</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ts</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>have_more</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NOTE: use of this function is discouraged when sending payloads other than pcm/pcmu/pcma/adpcm types. <ref refid="rtpsession_8h_1a7df1261d3eeaf10d283ba4ac34e2388d" kindref="member">rtp_session_recvm_with_ts()</ref> does better job.</para><para>Tries to read the bytes of the incoming rtp stream related to timestamp ts. In case where the user supplied buffer <emphasis>buffer</emphasis> is not large enough to get all the data related to timestamp ts, then *( have_more) is set to 1 to indicate that the application should recall the function with the same timestamp to get more data.</para><para>When the rtp session is scheduled (see <ref refid="rtpsession_8h_1a431c5b6dd2834bef90fef43bd643eb80" kindref="member">rtp_session_set_scheduling_mode()</ref> ), and the blocking mode is on (see <ref refid="rtpsession_8h_1a3160cbe78f10ac689845ed967b7cd974" kindref="member">rtp_session_set_blocking_mode()</ref> ), then the calling thread is suspended until the timestamp given as argument expires, whatever a received packet fits the query or not.</para><para>Important note: it is clear that the application cannot know the timestamp of the first packet of the incoming stream, because it can be random. The <emphasis>ts</emphasis> timestamp given to the function is used relatively to first timestamp of the stream. In simple words, 0 is a good value to start calling this function.</para><para>This function internally calls <ref refid="rtpsession_8h_1a7df1261d3eeaf10d283ba4ac34e2388d" kindref="member">rtp_session_recvm_with_ts()</ref> to get a rtp packet. The content of this packet is then copied into the user supplied buffer in an intelligent manner: the function takes care of the size of the supplied buffer and the timestamp given in argument. Using this function it is possible to read continous audio data (e.g. pcma,pcmu...) with for example a standart buffer of size of 160 with timestamp incrementing by 160 while the incoming stream has a different packet size.</para><para>Returns: if a packet was availlable with the corresponding timestamp supplied in argument then the number of bytes written in the user supplied buffer is returned. If no packets are availlable, either because the sender has not started to send the stream, or either because silence packet are not transmitted, or either because the packet was lost during network transport, then the function returns zero. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>a user supplied buffer to write the data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length in bytes of the user supplied buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ts</parametername>
</parameternamelist>
<parameterdescription>
<para>the timestamp wanted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>have_more</parametername>
</parameternamelist>
<parameterdescription>
<para>the address of an integer to indicate if more data is availlable for the given timestamp. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="611" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1371" bodyend="1406"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a3ed3f377bf06840f0e32c9b9a76bad10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_send_with_ts</definition>
        <argsstring>(RtpSession *session, const uint8_t *buffer, int len, uint32_t userts)</argsstring>
        <name>rtp_session_send_with_ts</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>userts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a rtp datagram to the destination set by <ref refid="rtpsession_8h_1a5668f5b4f85e7188c9ede364beb610cd" kindref="member">rtp_session_set_remote_addr()</ref> containing the data from <emphasis>buffer</emphasis> with timestamp <emphasis>userts</emphasis>. This is a high level function that uses <ref refid="rtpsession_8h_1abcdc6f7a3f81323b4f89e6a072b65477" kindref="member">rtp_session_create_packet()</ref> and <ref refid="rtpsession_8h_1afda0872c335c06a86a45ca4591a8b7ee" kindref="member">rtp_session_sendm_with_ts()</ref> to send the data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer containing the data to be sent in a rtp packet. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the data buffer, in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userts</parametername>
</parameternamelist>
<parameterdescription>
<para>the timestamp of the data to be sent. Refer to the rfc to know what it is. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes sent over the network. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="612" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1084" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a9d31ac30cac9a6367d958de31d8df288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_register_event_queue</definition>
        <argsstring>(RtpSession *session, OrtpEvQueue *q)</argsstring>
        <name>rtp_session_register_event_queue</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="structOrtpEvQueue" kindref="compound">OrtpEvQueue</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register an event queue. An application can use an event queue to get informed about various RTP events. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="615" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1529" bodyend="1531"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ae0674378982feb12052698246c33975a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_unregister_event_queue</definition>
        <argsstring>(RtpSession *session, OrtpEvQueue *q)</argsstring>
        <name>rtp_session_unregister_event_queue</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="structOrtpEvQueue" kindref="compound">OrtpEvQueue</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="616" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1533" bodyend="1535"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a7a528d80218d9f631ad7d4c9e09ad0f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float rtp_session_compute_send_bandwidth</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_compute_send_bandwidth</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="620" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1857" bodyend="1864"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ac3be64e8e8612650cd6aa743b3a7c7de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float rtp_session_compute_recv_bandwidth</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_compute_recv_bandwidth</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="621" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1848" bodyend="1855"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a13ea8d1aee0c9ecc90d7c2429203d165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float rtp_session_get_send_bandwidth</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_send_bandwidth</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get last computed send bandwidth. Computation must have been done with rtp_session_compute_send_bandwidth() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="622" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1883" bodyend="1885"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a5ecb1657fcd72967d5ece7ae298ecc38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float rtp_session_get_recv_bandwidth</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_recv_bandwidth</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get last computed recv bandwidth. Computation must have been done with rtp_session_compute_recv_bandwidth() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="623" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1870" bodyend="1873"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a0c771668afc88e079dee0c7818650152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float rtp_session_get_rtp_send_bandwidth</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_rtp_send_bandwidth</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="624" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1896" bodyend="1898"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ac163964b7bd839693e73468652fa57ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float rtp_session_get_rtp_recv_bandwidth</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_rtp_recv_bandwidth</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="625" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1891" bodyend="1894"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a4efb6e795497a6a04140430c6dcd5119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float rtp_session_get_rtcp_send_bandwidth</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_rtcp_send_bandwidth</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="626" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1905" bodyend="1907"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a5264e0802fd408b75ec6be2b3621b7c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float rtp_session_get_rtcp_recv_bandwidth</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_rtcp_recv_bandwidth</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="627" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1900" bodyend="1903"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a2a25c075beba28f0cd6288723ddc23a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float rtp_session_get_send_bandwidth_smooth</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_send_bandwidth_smooth</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="629" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1887" bodyend="1889"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a119c7c184b4a57f84e893a031c8ef7db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float rtp_session_get_recv_bandwidth_smooth</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_recv_bandwidth_smooth</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="630" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1875" bodyend="1877"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ad144ccb870f8cc6e71ce79c0af449360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_send_rtcp_APP</definition>
        <argsstring>(RtpSession *session, uint8_t subtype, const char *name, const uint8_t *data, int datalen)</argsstring>
        <name>rtp_session_send_rtcp_APP</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>subtype</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>datalen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="632" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp.c" bodystart="623" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a9e09a51b0c29dba92d96dddb63b8a7c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_rtcp_sendm_raw</definition>
        <argsstring>(RtpSession *session, mblk_t *m)</argsstring>
        <name>rtp_session_rtcp_sendm_raw</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send the rtcp datagram <emphasis>packet</emphasis> to the destination set by <ref refid="rtpsession_8h_1a5668f5b4f85e7188c9ede364beb610cd" kindref="member">rtp_session_set_remote_addr()</ref> The packet (<emphasis>packet</emphasis>) is freed once it is sent.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtcp packet presented as a mblk_t. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes sent over the network. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="642" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="1253" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a85014c21ef1be0f1c5faf32fcce8deea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rtp_session_get_current_send_ts</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_current_send_ts</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When the rtp session is scheduled and has started to send packets, this function computes the timestamp that matches to the present time. Using this function can be usefull when sending discontinuous streams. Some time can be elapsed between the end of a stream burst and the begin of a new stream burst, and the application may be not not aware of this elapsed time. In order to get a valid (current) timestamp to pass to <ref refid="rtpsession_8h_1a3ed3f377bf06840f0e32c9b9a76bad10" kindref="member">rtp_session_send_with_ts()</ref> or <ref refid="rtpsession_8h_1afda0872c335c06a86a45ca4591a8b7ee" kindref="member">rtp_session_sendm_with_ts()</ref>, the application may use <ref refid="rtpsession_8h_1a85014c21ef1be0f1c5faf32fcce8deea" kindref="member">rtp_session_get_current_send_ts()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the current send timestamp for the rtp session. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="645" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1419" bodyend="1435"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a52ba91bc2d1a8bbccf8a4f0e1888e9e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rtp_session_get_current_recv_ts</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_current_recv_ts</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same thing as <ref refid="rtpsession_8h_1a85014c21ef1be0f1c5faf32fcce8deea" kindref="member">rtp_session_get_current_send_ts()</ref> except that it&apos;s for an incoming stream. Works only on scheduled mode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the theoritical that would have to be receive now. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="646" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1445" bodyend="1460"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a5acb23b3409eac50fbfa6bf74f12a388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_flush_sockets</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_flush_sockets</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rtp_session_flush_sockets: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session</para></parameterdescription>
</parameteritem>
</parameterlist>
Flushes the sockets for all pending incoming packets. This can be usefull if you did not listen to the stream for a while and wishes to start to receive again. During the time no receive is made packets get bufferised into the internal kernel socket structure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="647" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession_inet.c" bodystart="988" bodyend="992"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a6e0cb1ebe665e66eb8696f5b0de64c2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_release_sockets</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_release_sockets</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Closes the rtp and rtcp sockets, and associated RtpTransport. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="648" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1513" bodyend="1515"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1addfadb13d0fbeefb59d1641b878c4c64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_resync</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_resync</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resynchronize to the incoming RTP streams. This can be useful to handle discontinuous timestamps. For example, call this function from the timestamp_jump signal handler. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>the rtp session </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="649" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1643" bodyend="1658"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a87c96ff6a38bd0683165040af5ec1418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_reset</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_reset</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the session: local and remote addresses are kept. It resets timestamp, sequence number, and calls <ref refid="rtpsession_8h_1addfadb13d0fbeefb59d1641b878c4c64" kindref="member">rtp_session_resync()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="650" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1666" bodyend="1690"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a7efc76b8a4814d771634243707c2420b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_destroy</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_destroy</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys a rtp session. All memory allocated for the RtpSession is freed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="651" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1946" bodyend="1950"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a8afa511af8abfa37b705dd964ad5e251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structrtp__stats" kindref="compound">rtp_stats_t</ref> *</type>
        <definition>const rtp_stats_t* rtp_session_get_stats</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_get_stats</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the session&apos;s statistics. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="653" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1695" bodyend="1697"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1af8d5bfef2fe5c0f9a61e34fe335a16d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structjitter__stats" kindref="compound">jitter_stats_t</ref> *</type>
        <definition>const jitter_stats_t* rtp_session_get_jitter_stats</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_get_jitter_stats</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the session&apos;s jitter specific statistics. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="654" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1702" bodyend="1704"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ad56607a94e7e1cd9de0c27887da2d4ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_reset_stats</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_reset_stats</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="655" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1756" bodyend="1758"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a96e580dd37e34bb360c869dff75fdd51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_data</definition>
        <argsstring>(RtpSession *session, void *data)</argsstring>
        <name>rtp_session_set_data</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stores some application specific data into the session, so that it is easy to retrieve it from the signal callbacks using <ref refid="rtpsession_8h_1ad411cc6b736570c7f962ff8f8b4d9909" kindref="member">rtp_session_get_data()</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>an opaque pointer to be stored in the session </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="657" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1766" bodyend="1768"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ad411cc6b736570c7f962ff8f8b4d9909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* rtp_session_get_data</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_get_data</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the void pointer previously set using <ref refid="rtpsession_8h_1a96e580dd37e34bb360c869dff75fdd51" kindref="member">rtp_session_set_data()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="658" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1774" bodyend="1776"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1abf31386f3c893f7846341dfd2524368e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_recv_buf_size</definition>
        <argsstring>(RtpSession *session, int bufsize)</argsstring>
        <name>rtp_session_set_recv_buf_size</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The default value is UDP_MAX_SIZE bytes, a value which is working for mostly everyone. However if your application can make assumption on the sizes of received packet, it can be interesting to set it to a lower value in order to save memory.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>max size in bytes for receiving packets </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="660" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="570" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ae4a6c82c153319a4b390dde2a788da9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_rtp_socket_send_buffer_size</definition>
        <argsstring>(RtpSession *session, unsigned int size)</argsstring>
        <name>rtp_session_set_rtp_socket_send_buffer_size</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set kernel send maximum buffer size for the rtp socket. A value of zero defaults to the operating system default. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="661" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="578" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a16d501a0be9f3748fff6e30c1f93e0aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_rtp_socket_recv_buffer_size</definition>
        <argsstring>(RtpSession *session, unsigned int size)</argsstring>
        <name>rtp_session_set_rtp_socket_recv_buffer_size</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set kernel recv maximum buffer size for the rtp socket. A value of zero defaults to the operating system default. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="662" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="587" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a14d67f51640dc5b1b2dc9f8190ba6be8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rtp_session_ts_to_time</definition>
        <argsstring>(RtpSession *session, uint32_t timestamp)</argsstring>
        <name>rtp_session_ts_to_time</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="665" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2064" bodyend="2080"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a779ac93b168d91c5ff1bd34e4b2d14fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rtp_session_time_to_ts</definition>
        <argsstring>(RtpSession *session, int millisecs)</argsstring>
        <name>rtp_session_time_to_ts</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>millisecs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="666" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2048" bodyend="2061"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1afa6eff1d91ef62095d72ee5ae1e94b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_make_time_distorsion</definition>
        <argsstring>(RtpSession *session, int milisec)</argsstring>
        <name>rtp_session_make_time_distorsion</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>milisec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="670" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1952" bodyend="1955"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a05f1112dd80c82d3687f03529ca6550d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_source_description</definition>
        <argsstring>(RtpSession *session, const char *cname, const char *name, const char *email, const char *phone, const char *loc, const char *tool, const char *note)</argsstring>
        <name>rtp_session_set_source_description</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>email</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>phone</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tool</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>note</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set session&apos;s SDES item for automatic sending of RTCP compound packets. If some items are not specified, use NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="673" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp.c" bodystart="128" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a47f106dc11924d1fc450ef3d4e779dc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_add_contributing_source</definition>
        <argsstring>(RtpSession *session, uint32_t csrc, const char *cname, const char *name, const char *email, const char *phone, const char *loc, const char *tool, const char *note)</argsstring>
        <name>rtp_session_add_contributing_source</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>csrc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>email</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>phone</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tool</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>note</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="676" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp.c" bodystart="156" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ae39cb832b2e6f1de0a1de798c0ee8c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_remove_contributing_source</definition>
        <argsstring>(RtpSession *session, uint32_t csrc)</argsstring>
        <name>rtp_session_remove_contributing_source</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>csrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="681" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp.c" bodystart="164" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a4ccc0590bf95c5462684b4f4966f3d1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* rtp_session_create_rtcp_sdes_packet</definition>
        <argsstring>(RtpSession *session, bool_t full)</argsstring>
        <name>rtp_session_create_rtcp_sdes_packet</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>full</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="682" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp.c" bodystart="186" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1afb1c0953e5c8dbfb0f464b8c967b7778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_get_last_recv_time</definition>
        <argsstring>(RtpSession *session, struct timeval *tv)</argsstring>
        <name>rtp_session_get_last_recv_time</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>struct timeval *</type>
          <declname>tv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets last time a valid RTP or RTCP packet was received. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>RtpSession to get last receive time from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to struct timeval to fill. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="684" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2037" bodyend="2044"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ab765af066dcadb624d76b1c9ede2643a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_bye</definition>
        <argsstring>(RtpSession *session, const char *reason)</argsstring>
        <name>rtp_session_bye</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends a RTCP bye packet. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>RtpSession </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reason</parametername>
</parameternamelist>
<parameterdescription>
<para>the reason phrase. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="685" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp.c" bodystart="638" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1aabf8d1d279c4d49f4f1c2e1f88be9fb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_get_last_send_error_code</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_last_send_error_code</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="687" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1909" bodyend="1911"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1abf9e8f33f854c809de4e1da6fbc5b136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_clear_send_error_code</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_clear_send_error_code</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="688" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1913" bodyend="1915"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ab83505924d68ce43c4009c14a9d0c895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_get_last_recv_error_code</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_last_recv_error_code</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="689" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1917" bodyend="1919"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a87cdf99c14f0062e2c990d593ce1f724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_clear_recv_error_code</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_clear_recv_error_code</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="690" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1921" bodyend="1923"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a3d716085a1e32064943a8ec6ed455089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float rtp_session_get_round_trip_propagation</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_round_trip_propagation</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the last known round trip propagation delay.</para><para>This value is known after successful RTCP SR or RR exchanged between a sender and a receiver. oRTP automatically takes care of sending SR or RR packets. You might want to call this function when you receive an RTCP event (see <ref refid="rtpsession_8h_1a9d31ac30cac9a6367d958de31d8df288" kindref="member">rtp_session_register_event_queue()</ref> ). This value might not be known: at the beginning when no RTCP packets have been exchanged yet, or simply because the rtcp channel is broken due to firewall problematics, or because the remote implementation does not support RTCP.</para><para><simplesect kind="return"><para>the round trip propagation time in seconds if known, -1 if unknown. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="693" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1936" bodyend="1938"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ac5e55fab989567c9eca1d6b17b8af573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_enable_network_simulation</definition>
        <argsstring>(RtpSession *session, const OrtpNetworkSimulatorParams *params)</argsstring>
        <name>rtp_session_enable_network_simulation</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="rtpsession_8h_1a7c436ea11700f00fc5f1ad8e70b2eb5b" kindref="member">OrtpNetworkSimulatorParams</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="696" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/netsim.c" bodystart="146" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a0e3495afa7299c06b2a1ccc5c6cb79b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_enable_congestion_detection</definition>
        <argsstring>(RtpSession *session, bool_t enabled)</argsstring>
        <name>rtp_session_enable_congestion_detection</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="697" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="315" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a64886f5589fd45ea9fb8abeb0f30a183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_enable_video_bandwidth_estimator</definition>
        <argsstring>(RtpSession *session, const OrtpVideoBandwidthEstimatorParams *params)</argsstring>
        <name>rtp_session_enable_video_bandwidth_estimator</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="rtpsession_8h_1a490c543c4d74dd460cff143820eceffd" kindref="member">OrtpVideoBandwidthEstimatorParams</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="698" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="330" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a63a140410917d2afef8b62eb2f09ca3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_rtcp_set_lost_packet_value</definition>
        <argsstring>(RtpSession *session, const int value)</argsstring>
        <name>rtp_session_rtcp_set_lost_packet_value</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
          <defname>s</defname>
        </param>
        <param>
          <type>const int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>For <bold>test purpose only</bold>, sets a constant lost packet value within <bold>all</bold> RTCP output packets.<linebreak/>
. </para>        </briefdescription>
        <detaileddescription>
<para>The SR or RR RTCP packet contain a lost packet field. After this procedure is called, the lost packet field will be set to a constant value in all output SR or RR packets. This parameter will overridden the actual number of lost packets in the input RTP stream that the RTCP stack had previously processed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>: the rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>: the lost packets test vector value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="700" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1713" bodyend="1716"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a163ae2018115d15813e3bfc8d2e32160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_rtcp_set_jitter_value</definition>
        <argsstring>(RtpSession *session, const unsigned int value)</argsstring>
        <name>rtp_session_rtcp_set_jitter_value</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
          <defname>s</defname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>For <bold>test purpose only</bold>, sets a constant interarrival_jitter value within <bold>all</bold> RTCP output packets.<linebreak/>
. </para>        </briefdescription>
        <detaileddescription>
<para>The SR or RR RTCP packet contain an interarrival jitter field. After this procedure is called, the interarrival jitter field will be set to a constant value in all output SR or RR packets. This parameter will overridden the actual interarrival jitter value that was processed by the RTCP stack. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>: the rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>: the interarrival jitter test vector value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="701" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1725" bodyend="1728"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a0535400b3204ee190a2be6dcd983aa67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_rtcp_set_delay_value</definition>
        <argsstring>(RtpSession *session, const unsigned int value)</argsstring>
        <name>rtp_session_rtcp_set_delay_value</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
          <defname>s</defname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>For <bold>test purpose only</bold>, simulates a constant RTT (Round Trip Time) value by setting the LSR field within <bold>all</bold> returned RTCP output packets.<linebreak/>
. </para>        </briefdescription>
        <detaileddescription>
<para>The RTT processing involves two RTCP packets exchanged between two different devices.<linebreak/>
In a <bold>normal</bold> operation the device 1 issues a SR packets at time T0, hence this packet has a timestamp field set to T0. The LSR and DLSR fiels of that packet are not considered here. This packet is received by the Device 2 at T1. In response, the Device 2 issues another SR or RR packets at T2 with the following fields;<itemizedlist>
<listitem><para>a timestamp set to T2.</para></listitem><listitem><para>a LSR (Last SR packet timestamp) field set to T0 ( this value has been extracted from the first packet).</para></listitem><listitem><para>a DLSR (Delay since Last SR packet) field set to (T2 - T1).</para></listitem></itemizedlist>
This packet is received by The Device 1 at T3. So the Device 1 is now able to process the RTT using the formula : RTT = T3 - LSR - DLSR = (T1 - T0) - (T3 - T2).<linebreak/>
This way of processing is described in par. 6.4 of the RFC3550 standard.</para><para>In the <bold>test</bold> mode that is enabled by this procedure, the RTCP stack is considered as beeing part of the device 2. For setting the RTT to a constant RTT0 value, the Device 2 artificially sets the LSR field of the second packet to (T1 - RTT0), instead of T0 in normal mode. The two other fields (timestamp and DLSR) are set as in the normal mode. So the Device 1 will process : RTT = T3 - LSR - DLSR = RTT0 + (T3 - T2) that is near to RTT0 is T3 - T2 is small enough. <simplesect kind="note"><para>It is impossible to actually make the mesured RTT strictly equal to RTT0, as the packet trip time (T3 - T2) is unknown when this packet is issued by the Device 2. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>: the rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>: The desired RTT test vector value (RTT0). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="702" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1751" bodyend="1754"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ab65a3a4fe6defea5e409db6f4313c33b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* rtp_session_pick_with_cseq</definition>
        <argsstring>(RtpSession *session, const uint16_t sequence_number)</argsstring>
        <name>rtp_session_pick_with_cseq</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>sequence_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Try to get an rtp packet presented as a mblk_t structure from the rtp session at a given sequence number. This function is very usefull for codec with Forward error correction capabilities</para><para>This function returns the entire packet (with header).</para><para><itemizedlist>
<listitem><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a rtp session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sequence_number</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence number.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a rtp packet presented as a mblk_t, or NULL if not found. </para></simplesect>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="703" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1120" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ae80e2d3768c47fd68022beb5fcf0e758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_send_rtcp_xr_rcvr_rtt</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_send_rtcp_xr_rcvr_rtt</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="706" column="1"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a8d8a180b35c71202eea370fc0894a4a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_send_rtcp_xr_dlrr</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_send_rtcp_xr_dlrr</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="707" column="1"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ac3e9e0a90f5ffc58b0378356426b1b2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_send_rtcp_xr_stat_summary</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_send_rtcp_xr_stat_summary</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="708" column="1"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1adf1be34ad7a558afeff52d207be33321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_send_rtcp_xr_voip_metrics</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_send_rtcp_xr_voip_metrics</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="709" column="1"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a1a37b09e4fb57bd66432d312e9fc7fc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t rtp_session_avpf_enabled</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_avpf_enabled</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="712" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="385" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a9c948cdb486950e76294612e7cc22d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t rtp_session_avpf_payload_type_feature_enabled</definition>
        <argsstring>(RtpSession *session, unsigned char feature)</argsstring>
        <name>rtp_session_avpf_payload_type_feature_enabled</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>feature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="713" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="393" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a816c887d5cafaf07a46cba23b7c780f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t rtp_session_avpf_feature_enabled</definition>
        <argsstring>(RtpSession *session, unsigned char feature)</argsstring>
        <name>rtp_session_avpf_feature_enabled</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>feature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="714" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="402" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ae7401f0cfb41963bfa67437643775494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_enable_avpf_feature</definition>
        <argsstring>(RtpSession *session, unsigned char feature, bool_t enable)</argsstring>
        <name>rtp_session_enable_avpf_feature</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>feature</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="715" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="407" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1afd044ec49998fa5ae8589cc2f34a5c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t rtp_session_get_avpf_rr_interval</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_get_avpf_rr_interval</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="716" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="415" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a4ea9f57bdf47b2a234a9a1f06c33f918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t rtp_session_rtcp_psfb_scheduled</definition>
        <argsstring>(RtpSession *session, rtcp_psfb_type_t type)</argsstring>
        <name>rtp_session_rtcp_psfb_scheduled</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>rtcp_psfb_type_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="717" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="274" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1aacd2a7bba3d2c9775693f5333c2141a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t rtp_session_rtcp_rtpfb_scheduled</definition>
        <argsstring>(RtpSession *session, rtcp_rtpfb_type_t type)</argsstring>
        <name>rtp_session_rtcp_rtpfb_scheduled</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>rtcp_rtpfb_type_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="718" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="285" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a11e2e32147fe1f0f788ab8c1f8d9339b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_send_rtcp_fb_generic_nack</definition>
        <argsstring>(RtpSession *session, uint16_t pid, uint16_t blp)</argsstring>
        <name>rtp_session_send_rtcp_fb_generic_nack</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>blp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="719" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="296" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1aaa5740d8884395e37fe96dbd56e6dbf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_send_rtcp_fb_pli</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_send_rtcp_fb_pli</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="720" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="305" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ac0b7130e33ef7a77b00d8b2088512f54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_send_rtcp_fb_fir</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_send_rtcp_fb_fir</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="721" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="318" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a6296778e09913382365c93922dce5b59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_send_rtcp_fb_sli</definition>
        <argsstring>(RtpSession *session, uint16_t first, uint16_t number, uint8_t picture_id)</argsstring>
        <name>rtp_session_send_rtcp_fb_sli</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>first</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>picture_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="722" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="331" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1aba87a630bf7cf2582b79dc05892859e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_send_rtcp_fb_rpsi</definition>
        <argsstring>(RtpSession *session, uint8_t *bit_string, uint16_t bit_string_len)</argsstring>
        <name>rtp_session_send_rtcp_fb_rpsi</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bit_string</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bit_string_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="723" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="349" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a5ed3381c51b2379d63abefbf040a8c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_send_rtcp_fb_tmmbr</definition>
        <argsstring>(RtpSession *session, uint64_t mxtbr)</argsstring>
        <name>rtp_session_send_rtcp_fb_tmmbr</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>mxtbr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="724" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="360" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a3a5bb368582ad7f9e6a0deeb38cbea93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_send_rtcp_fb_tmmbn</definition>
        <argsstring>(RtpSession *session, uint32_t ssrc)</argsstring>
        <name>rtp_session_send_rtcp_fb_tmmbn</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ssrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="725" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtcp_fb.c" bodystart="373" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ab5c640264c748ac30f7f3f8bcb272996" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_init</definition>
        <argsstring>(RtpSession *session, int mode)</argsstring>
        <name>rtp_session_init</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="729" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="227" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a7020a16cd720d19e83f3888272bb4446" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_uninit</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_uninit</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="732" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1560" bodyend="1627"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a3fe42694f10c7a7eb90c49861f1bfe36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_dispatch_event</definition>
        <argsstring>(RtpSession *session, OrtpEvent *ev)</argsstring>
        <name>rtp_session_dispatch_event</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">OrtpEvent</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="733" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="1537" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a8ea7b139a9508c429b02060743bc15fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_reuseaddr</definition>
        <argsstring>(RtpSession *session, bool_t yes)</argsstring>
        <name>rtp_session_set_reuseaddr</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>yes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="736" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2101" bodyend="2103"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a43dc94c576c74a6f6b31cd85ced843a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int meta_rtp_transport_modifier_inject_packet_to_send</definition>
        <argsstring>(RtpTransport *t, RtpTransportModifier *tpm, mblk_t *msg, int flags)</argsstring>
        <name>meta_rtp_transport_modifier_inject_packet_to_send</name>
        <param>
          <type><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="struct__RtpTransportModifier" kindref="compound">RtpTransportModifier</ref> *</type>
          <declname>tpm</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>allow a modifier to inject a packet which will be treated by successive modifiers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="738" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2188" bodyend="2206"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ad533ea463933174626a46ce880410157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int meta_rtp_transport_modifier_inject_packet_to_send_to</definition>
        <argsstring>(RtpTransport *t, RtpTransportModifier *tpm, mblk_t *msg, int flags, const struct sockaddr *to, socklen_t tolen)</argsstring>
        <name>meta_rtp_transport_modifier_inject_packet_to_send_to</name>
        <param>
          <type><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="struct__RtpTransportModifier" kindref="compound">RtpTransportModifier</ref> *</type>
          <declname>tpm</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const struct sockaddr *</type>
          <declname>to</declname>
        </param>
        <param>
          <type>socklen_t</type>
          <declname>tolen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>allow a modifier to inject a packet which will be treated by successive modifiers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="739" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2211" bodyend="2250"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a6224b506a1bd399d1018e6fd70770f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int meta_rtp_transport_modifier_inject_packet_to_recv</definition>
        <argsstring>(RtpTransport *t, RtpTransportModifier *tpm, mblk_t *msg, int flags)</argsstring>
        <name>meta_rtp_transport_modifier_inject_packet_to_recv</name>
        <param>
          <type><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="struct__RtpTransportModifier" kindref="compound">RtpTransportModifier</ref> *</type>
          <declname>tpm</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>allow a modifier to inject a packet which will be treated by successive modifiers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="740" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2290" bodyend="2295"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1affa99429db7b4961bc4e20d719174bb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref> *</type>
        <definition>RtpTransport* meta_rtp_transport_get_endpoint</definition>
        <argsstring>(const RtpTransport *transport)</argsstring>
        <name>meta_rtp_transport_get_endpoint</name>
        <param>
          <type>const <ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref> *</type>
          <declname>transport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get endpoint if any <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transport</parametername>
</parameternamelist>
<parameterdescription>
<para>RtpTransport object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct__RtpTransport" kindref="compound">_RtpTransport</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="748" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2415" bodyend="2417"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1abe440d6ab13b45268749ae7ed62771f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void meta_rtp_transport_set_endpoint</definition>
        <argsstring>(RtpTransport *transport, RtpTransport *endpoint)</argsstring>
        <name>meta_rtp_transport_set_endpoint</name>
        <param>
          <type><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref> *</type>
          <declname>transport</declname>
        </param>
        <param>
          <type><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref> *</type>
          <declname>endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set endpoint <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transport</parametername>
</parameternamelist>
<parameterdescription>
<para>RtpTransport object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">endpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>RtpEndpoint. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="755" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2419" bodyend="2424"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1ac78d3bb065429050e0f04cb1c0dd6fc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void meta_rtp_transport_destroy</definition>
        <argsstring>(RtpTransport *tp)</argsstring>
        <name>meta_rtp_transport_destroy</name>
        <param>
          <type><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="757" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2426" bodyend="2443"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a7738f1505b0bbdb00ff5ded08fbfa109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void meta_rtp_transport_append_modifier</definition>
        <argsstring>(RtpTransport *tp, RtpTransportModifier *tpm)</argsstring>
        <name>meta_rtp_transport_append_modifier</name>
        <param>
          <type><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref> *</type>
          <declname>tp</declname>
        </param>
        <param>
          <type><ref refid="struct__RtpTransportModifier" kindref="compound">RtpTransportModifier</ref> *</type>
          <declname>tpm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="758" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2445" bodyend="2452"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1aa0ec5a17ee6547c1ebb186fd85f48d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_splice</definition>
        <argsstring>(RtpSession *session, RtpSession *to_session)</argsstring>
        <name>rtp_session_splice</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>to_session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="760" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2457" bodyend="2466"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1a2efc065b04c9a7bc4d546a5f3dfb3fe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rtp_session_unsplice</definition>
        <argsstring>(RtpSession *session, RtpSession *to_session)</argsstring>
        <name>rtp_session_unsplice</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>to_session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="761" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2468" bodyend="2477"/>
      </memberdef>
      <memberdef kind="function" id="rtpsession_8h_1af058ea32d1a7f9fd292807bc14ecc9d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t ortp_stream_is_ipv6</definition>
        <argsstring>(OrtpStream *os)</argsstring>
        <name>ortp_stream_is_ipv6</name>
        <param>
          <type><ref refid="struct__OrtpStream" kindref="compound">OrtpStream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h" line="763" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/rtpsession.c" bodystart="2490" bodyend="2496"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The RtpSession api. </para>    </briefdescription>
    <detaileddescription>
<para>The RtpSession objects represent a RTP session: once it is configured with local and remote network addresses and a payload type is given, it let you send and recv a media stream. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>oRTP<sp/>library<sp/>is<sp/>an<sp/>RTP<sp/>(Realtime<sp/>Transport<sp/>Protocol<sp/>-<sp/>rfc3550)<sp/>implementation<sp/>with<sp/>additional<sp/>features.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2017<sp/>Belledonne<sp/>Communications<sp/>SARL</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor">#ifndef<sp/>RTPSESSION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RTPSESSION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bctoolbox/list.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ortp/port.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ortp/rtp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="payloadtype_8h" kindref="compound">ortp/payloadtype.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="rtpprofile_8h" kindref="compound">ortp/rtpprofile.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sessionset_8h" kindref="compound">ortp/sessionset.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ortp/rtcp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ortp/str_utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ortp/utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ortp/rtpsignaltable.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ortp/event.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ORTP_AVPF_FEATURE_NONE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ORTP_AVPF_FEATURE_TMMBR<sp/>(1<sp/>&lt;&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ORTP_AVPF_FEATURE_GENERIC_NACK<sp/>(1<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RTP_SESSION_RECVONLY,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RTP_SESSION_SENDONLY,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RTP_SESSION_SENDRECV</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/>RtpSessionMode;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_OrtpJitterBufferAlgorithm<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpJitterBufferBasic,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpJitterBufferRecursiveLeastSquare,</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}<sp/>OrtpJitterBufferAlgorithm;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="struct__JBParameters" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__JBParameters" kindref="compound">_JBParameters</ref>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_size;<sp/></highlight><highlight class="comment">/*(adaptive=TRUE<sp/>only)<sp/>maximum<sp/>dynamic<sp/>delay<sp/>to<sp/>be<sp/>added<sp/>to<sp/>incoming<sp/>packets<sp/>(ms)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nom_size;<sp/></highlight><highlight class="comment">/*(adaptive=TRUE<sp/>only)<sp/>initial<sp/>dynamic<sp/>delay<sp/>to<sp/>be<sp/>added<sp/>to<sp/>incoming<sp/>packets<sp/>(ms)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size;<sp/></highlight><highlight class="comment">/*(adaptive=TRUE<sp/>only)<sp/>minimum<sp/>dynamic<sp/>delay<sp/>to<sp/>be<sp/>added<sp/>to<sp/>incoming<sp/>packets<sp/>(ms)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>adaptive;<sp/></highlight><highlight class="comment">/*either<sp/>a<sp/>dynamic<sp/>buffer<sp/>should<sp/>be<sp/>used<sp/>or<sp/>not<sp/>to<sp/>compensate<sp/>bursts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>enabled;<sp/></highlight><highlight class="comment">/*whether<sp/>jitter<sp/>buffer<sp/>is<sp/>enabled*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>pad[2];<sp/></highlight><highlight class="comment">/*(dev<sp/>only)<sp/>alignment<sp/>pad:<sp/>insert<sp/>your<sp/>bool_t<sp/>here*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_packets;<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpJitterBufferAlgorithm<sp/><ref refid="struct__JBParameters_1ad4bf57ea281593ed5cbce2621e08333e" kindref="member">buffer_algorithm</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refresh_ms;<sp/></highlight><highlight class="comment">/*<sp/>(adaptive=TRUE<sp/>only)<sp/>dynamic<sp/>buffer<sp/>size<sp/>update<sp/>frequency<sp/>(ms)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ramp_threshold;<sp/></highlight><highlight class="comment">/*(adaptive=TRUE,<sp/>algo=RLS<sp/>only)<sp/>Percentage<sp/>in<sp/>[0;100]<sp/>threshold<sp/>between<sp/>current<sp/>jitter<sp/>and<sp/>previous<sp/>jitter<sp/>to<sp/>enable<sp/>smooth<sp/>ramp*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ramp_step_ms;<sp/></highlight><highlight class="comment">/*(adaptive=TRUE,<sp/>algo=RLS<sp/>only)<sp/>In<sp/>smooth<sp/>ramp,<sp/>how<sp/>much<sp/>we<sp/>should<sp/>reduce<sp/>jitter<sp/>size<sp/>on<sp/>each<sp/>step*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ramp_refresh_ms;<sp/></highlight><highlight class="comment">/*(adaptive=TRUE,<sp/>algo=RLS<sp/>only)<sp/>In<sp/>smooth<sp/>ramp,<sp/>frequency<sp/>of<sp/>step*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/><ref refid="rtpsession_8h_1a045ce176ebe9323b1e7574e35c5fc777" kindref="member">JBParameters</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="struct__JitterControl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__JitterControl" kindref="compound">_JitterControl</ref></highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__JBParameters" kindref="compound">JBParameters</ref><sp/>params;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>packets<sp/>handled<sp/>in<sp/>jitter_control_new_packet.<sp/>Used<sp/>internally<sp/>only.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jitt_comp_ts;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>nominal<sp/>jitter<sp/>buffer<sp/>size<sp/>converted<sp/>in<sp/>rtp<sp/>time<sp/>(same<sp/>unit<sp/>as<sp/>timestamp)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adapt_jitt_comp_ts;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>clock_offset_ts;<sp/></highlight><highlight class="comment">/*offset<sp/>difference<sp/>between<sp/>local<sp/>and<sp/>distant<sp/>clock,<sp/>in<sp/>timestamp<sp/>units*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>prev_clock_offset_ts;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>olddiff;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jitter;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inter_jitter;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>interarrival<sp/>jitter<sp/>as<sp/>defined<sp/>in<sp/>the<sp/>RFC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jitter_buffer_mean_size;<sp/></highlight><highlight class="comment">/*effective<sp/>size<sp/>(fullness)<sp/>of<sp/>jitter<sp/>buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>corrective_step;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>corrective_slide;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>cum_jitter_buffer_size;<sp/></highlight><highlight class="comment">/*in<sp/>timestamp<sp/>units*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cum_jitter_buffer_count;<sp/></highlight><highlight class="comment">/*used<sp/>for<sp/>computation<sp/>of<sp/>jitter<sp/>buffer<sp/>size*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clock_rate;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>adapt_refresh_prev_ts;<sp/></highlight><highlight class="comment">/*last<sp/>time<sp/>we<sp/>refreshed<sp/>the<sp/>buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref><sp/>max_ts_deviation;<sp/></highlight><highlight class="comment">/*maximum<sp/>difference<sp/>between<sp/>packet<sp/>and<sp/>expected<sp/>timestamps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpKalmanRLS" kindref="compound">OrtpKalmanRLS</ref><sp/>kalman_rls;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>capped_clock_ratio;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>last_log_ts;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>local_ts_start;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>remote_ts_start;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="struct__WaitPoint" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__WaitPoint" kindref="compound">_WaitPoint</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_mutex_t<sp/>lock;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_cond_t<sp/><sp/>cond;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>time;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>wakeup;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}<sp/><ref refid="struct__WaitPoint" kindref="compound">WaitPoint</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="struct__RtpTransportModifier" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransportModifier" kindref="compound">_RtpTransportModifier</ref></highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpSession" kindref="compound">_RtpSession</ref><sp/>*session;</highlight><highlight class="comment">//&lt;back<sp/>pointer<sp/>to<sp/>the<sp/>owning<sp/>session,<sp/>set<sp/>by<sp/>oRTP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransport" kindref="compound">_RtpTransport</ref><sp/>*transport;</highlight><highlight class="comment">//&lt;back<sp/>point<sp/>to<sp/>the<sp/>owning<sp/>transport,<sp/>set<sp/>by<sp/>oRTP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/>(*t_process_on_send)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransportModifier" kindref="compound">_RtpTransportModifier</ref><sp/>*t,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*msg);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/>(*t_process_on_receive)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransportModifier" kindref="compound">_RtpTransportModifier</ref><sp/>*t,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*msg);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/><sp/>(*t_process_on_schedule)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransportModifier" kindref="compound">_RtpTransportModifier</ref><sp/>*t);<sp/></highlight><highlight class="comment">/*invoked<sp/>each<sp/>time<sp/>rtp_session_recvm<sp/>is<sp/>called<sp/>even<sp/>is<sp/>no<sp/>message<sp/>are<sp/>available*/</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/><sp/>(*<ref refid="struct__RtpTransportModifier_1af32da70d72fa74e8d7cfb7244061a5f1" kindref="member">t_destroy</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransportModifier" kindref="compound">_RtpTransportModifier</ref><sp/>*transport);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<sp/><ref refid="struct__RtpTransportModifier" kindref="compound">RtpTransportModifier</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="struct__RtpTransport" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransport" kindref="compound">_RtpTransport</ref></highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpSession" kindref="compound">_RtpSession</ref><sp/>*session;</highlight><highlight class="comment">//&lt;back<sp/>pointer<sp/>to<sp/>the<sp/>owning<sp/>session,<sp/>set<sp/>by<sp/>oRTP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_socket_t<sp/>(*t_getsocket)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransport" kindref="compound">_RtpTransport</ref><sp/>*t);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/>(*t_sendto)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransport" kindref="compound">_RtpTransport</ref><sp/>*t,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*msg<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr<sp/>*to,<sp/>socklen_t<sp/>tolen);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/>(*t_recvfrom)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransport" kindref="compound">_RtpTransport</ref><sp/>*t,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr<sp/>*from,<sp/>socklen_t<sp/>*fromlen);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/><sp/>(*t_close)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransport" kindref="compound">_RtpTransport</ref><sp/>*transport);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/><sp/>(*<ref refid="struct__RtpTransport_1ab6fe16fad12f5b0cf258cc24839cb4d9" kindref="member">t_destroy</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransport" kindref="compound">_RtpTransport</ref><sp/>*transport);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/><sp/><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a0caa396950b0b4e735801e37f6e740df" kindref="member">_OrtpNetworkSimulatorMode</ref>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpNetworkSimulatorInvalid=-1,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rtpsession_8h_1a0caa396950b0b4e735801e37f6e740dfa10cfd43bab32e947b1ea8705e5eff04c" kindref="member">OrtpNetworkSimulatorInbound</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rtpsession_8h_1a0caa396950b0b4e735801e37f6e740dfa5d6240d40c29de7bd17d7944d6cb5a02" kindref="member">OrtpNetworkSimulatorOutbound</ref>,<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rtpsession_8h_1a0caa396950b0b4e735801e37f6e740dfaba58c2b92f32b0d2bd064c255e5678fe" kindref="member">OrtpNetworkSimulatorOutboundControlled</ref><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal">}OrtpNetworkSimulatorMode;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="struct__OrtpNetworkSimulatorParams" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__OrtpNetworkSimulatorParams" kindref="compound">_OrtpNetworkSimulatorParams</ref>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enabled;<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_bandwidth;<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_buffer_size;<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>loss_rate;<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>latency;<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>consecutive_loss_probability;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jitter_burst_density;<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jitter_strength;<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>rtp_only;<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>pad[3];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpNetworkSimulatorMode<sp/>mode;<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}<ref refid="rtpsession_8h_1a7c436ea11700f00fc5f1ad8e70b2eb5b" kindref="member">OrtpNetworkSimulatorParams</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="struct__OrtpNetworkSimulatorCtx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__OrtpNetworkSimulatorCtx" kindref="compound">_OrtpNetworkSimulatorCtx</ref>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpNetworkSimulatorParams" kindref="compound">OrtpNetworkSimulatorParams</ref><sp/>params;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_budget;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qsize;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>q;</highlight><highlight class="comment">/*queue<sp/>used<sp/>for<sp/>simulating<sp/>bandwidth<sp/>limit*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>latency_q;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>send_q;<sp/></highlight><highlight class="comment">/*used<sp/>only<sp/>for<sp/>OrtpNetworkSimulatorOutbound<sp/>direction*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>last_check;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>last_jitter_event;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>consecutive_drops;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>drops_to_ignore;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>drop_by_congestion;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>drop_by_loss;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_count;<sp/></highlight><highlight class="comment">/*total<sp/>number<sp/>of<sp/>packets<sp/>gone<sp/>through<sp/>the<sp/>simulator*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_mutex_t<sp/>mutex;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_thread_t<sp/>thread;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>in_jitter_event;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>thread_started;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}<ref refid="struct__OrtpNetworkSimulatorCtx" kindref="compound">OrtpNetworkSimulatorCtx</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="structOrtpRtcpSendAlgorithm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structOrtpRtcpSendAlgorithm" kindref="compound">OrtpRtcpSendAlgorithm</ref><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>tn;<sp/></highlight><highlight class="comment">/*<sp/>Time<sp/>of<sp/>the<sp/>next<sp/>scheduled<sp/>RTCP<sp/>RR<sp/>transmission<sp/>in<sp/>milliseconds.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>tp;<sp/></highlight><highlight class="comment">/*<sp/>Time<sp/>of<sp/>the<sp/>last<sp/>scheduled<sp/>RTCP<sp/>RR<sp/>transmission<sp/>in<sp/>milliseconds.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>t_rr_last;<sp/></highlight><highlight class="comment">/*<sp/>Time<sp/>of<sp/>the<sp/>last<sp/>regular<sp/>RTCP<sp/>packet<sp/>sent<sp/>in<sp/>milliseconds.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>T_rr;<sp/></highlight><highlight class="comment">/*<sp/>Interval<sp/>for<sp/>the<sp/>scheduling<sp/>of<sp/>the<sp/>next<sp/>regular<sp/>RTCP<sp/>packet.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>T_max_fb_delay;<sp/></highlight><highlight class="comment">/*<sp/>Interval<sp/>within<sp/>which<sp/>a<sp/>feeback<sp/>message<sp/>is<sp/>considered<sp/>to<sp/>be<sp/>useful<sp/>to<sp/>the<sp/>sender.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>T_rr_interval;<sp/></highlight><highlight class="comment">/*<sp/>Minimal<sp/>interval<sp/>to<sp/>be<sp/>used<sp/>between<sp/>regular<sp/>RTCP<sp/>packets.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>T_rr_current_interval;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>Tmin;<sp/></highlight><highlight class="comment">/*<sp/>Minimal<sp/>interval<sp/>between<sp/>RTCP<sp/>packets.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>avg_rtcp_size;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*fb_packets;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>initialized;<sp/></highlight><highlight class="comment">/*<sp/>Whether<sp/>the<sp/>RTCP<sp/>send<sp/>algorithm<sp/>is<sp/>fully<sp/>initialized.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>initial;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>allow_early;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>tmmbr_scheduled;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>tmmbn_scheduled;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}<sp/><ref refid="structOrtpRtcpSendAlgorithm" kindref="compound">OrtpRtcpSendAlgorithm</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="structOrtpRtcpFbConfiguration" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structOrtpRtcpFbConfiguration" kindref="compound">OrtpRtcpFbConfiguration</ref><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>generic_nack_enabled;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>tmmbr_enabled;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}<sp/><ref refid="structOrtpRtcpFbConfiguration" kindref="compound">OrtpRtcpFbConfiguration</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ORTP_RTCP_XR_UNAVAILABLE_PARAMETER<sp/>127</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrNoPlc,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrSilencePlc,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrEnhancedPlc</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}<sp/>OrtpRtcpXrPlcStatus;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>OrtpRtcpXrPlcStatus<sp/>(*OrtpRtcpXrPlcCallback)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*OrtpRtcpXrSignalLevelCallback)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*OrtpRtcpXrNoiseLevelCallback)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>float<sp/>(*OrtpRtcpXrAverageQualityIndicatorCallback)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="structOrtpRtcpXrMediaCallbacks" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structOrtpRtcpXrMediaCallbacks" kindref="compound">OrtpRtcpXrMediaCallbacks</ref><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrPlcCallback<sp/>plc;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrSignalLevelCallback<sp/>signal_level;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrNoiseLevelCallback<sp/>noise_level;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrAverageQualityIndicatorCallback<sp/>average_qi;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrAverageQualityIndicatorCallback<sp/>average_lq_qi;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}<sp/><ref refid="structOrtpRtcpXrMediaCallbacks" kindref="compound">OrtpRtcpXrMediaCallbacks</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrRcvrRttNone,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrRcvrRttAll,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrRcvrRttSender</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}<sp/>OrtpRtcpXrRcvrRttMode;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrStatSummaryLoss<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>7),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrStatSummaryDup<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>6),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrStatSummaryJitt<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>5),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrStatSummaryTTL<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>3),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrStatSummaryHL<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>4)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}<sp/>OrtpRtcpXrStatSummaryFlag;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="structOrtpRtcpXrConfiguration" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structOrtpRtcpXrConfiguration" kindref="compound">OrtpRtcpXrConfiguration</ref><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>enabled;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>stat_summary_enabled;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>voip_metrics_enabled;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>pad;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrRcvrRttMode<sp/>rcvr_rtt_mode;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rcvr_rtt_max_size;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrtpRtcpXrStatSummaryFlag<sp/>stat_summary_flags;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}<sp/><ref refid="structOrtpRtcpXrConfiguration" kindref="compound">OrtpRtcpXrConfiguration</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="structOrtpRtcpXrStats" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structOrtpRtcpXrStats" kindref="compound">OrtpRtcpXrStats</ref><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>last_rcvr_rtt_ts;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NTP<sp/>timestamp<sp/>(middle<sp/>32<sp/>bits)<sp/>of<sp/>last<sp/>received<sp/>XR<sp/>rcvr-rtt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>last_rcvr_rtt_time;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Time<sp/>at<sp/>which<sp/>last<sp/>XR<sp/>rcvr-rtt<sp/>was<sp/>received<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>rcv_seq_at_last_stat_summary;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Received<sp/>sequence<sp/>number<sp/>at<sp/>last<sp/>XR<sp/>stat-summary<sp/>sent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rcv_since_last_stat_summary;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>of<sp/>packets<sp/>received<sp/>since<sp/>last<sp/>XR<sp/>stat-summary<sp/>was<sp/>sent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>dup_since_last_stat_summary;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>of<sp/>duplicate<sp/>packets<sp/>received<sp/>since<sp/>last<sp/>XR<sp/>stat-summary<sp/>was<sp/>sent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>min_jitter_since_last_stat_summary;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>minimum<sp/>value<sp/>of<sp/>jitter<sp/>since<sp/>last<sp/>XR<sp/>stat-summary<sp/>was<sp/>sent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>max_jitter_since_last_stat_summary;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>maximum<sp/>value<sp/>of<sp/>jitter<sp/>since<sp/>last<sp/>XR<sp/>stat-summary<sp/>was<sp/>sent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>olds_jitter_since_last_stat_summary;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oldm_jitter_since_last_stat_summary;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>news_jitter_since_last_stat_summary;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newm_jitter_since_last_stat_summary;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>last_jitter_diff_since_last_stat_summary;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>olds_ttl_or_hl_since_last_stat_summary;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oldm_ttl_or_hl_since_last_stat_summary;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>news_ttl_or_hl_since_last_stat_summary;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newm_ttl_or_hl_since_last_stat_summary;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>min_ttl_or_hl_since_last_stat_summary;<sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>minimum<sp/>value<sp/>of<sp/>TTL/HL<sp/>since<sp/>last<sp/>XR<sp/>stat-summary<sp/>was<sp/>sent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>max_ttl_or_hl_since_last_stat_summary;<sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>maximum<sp/>value<sp/>of<sp/>TTL/HL<sp/>since<sp/>last<sp/>XR<sp/>stat-summary<sp/>was<sp/>sent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>first_rcv_seq;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>last_rcv_seq;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rcv_count;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>discarded_count;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}<sp/><ref refid="structOrtpRtcpXrStats" kindref="compound">OrtpRtcpXrStats</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="structOrtpRtcpTmmbrInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structOrtpRtcpTmmbrInfo" kindref="compound">OrtpRtcpTmmbrInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*sent;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*received;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}<sp/><ref refid="structOrtpRtcpTmmbrInfo" kindref="compound">OrtpRtcpTmmbrInfo</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="struct__OrtpAddress" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__OrtpAddress" kindref="compound">_OrtpAddress</ref>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_storage<sp/>addr;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>len;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}<ref refid="struct__OrtpAddress" kindref="compound">OrtpAddress</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="struct__OrtpStream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__OrtpStream" kindref="compound">_OrtpStream</ref><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_socket_t<sp/>socket;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfamily;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc_port;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>rem_addrlen;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_storage<sp/>rem_addr;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>loc_addrlen;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_storage<sp/>loc_addr;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpTransport" kindref="compound">_RtpTransport</ref><sp/>*tr;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpBwEstimator" kindref="compound">OrtpBwEstimator</ref><sp/>recv_bw_estimator;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>send_bw_start;<sp/></highlight><highlight class="comment">/*<sp/>used<sp/>for<sp/>bandwidth<sp/>estimation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>recv_bw_start;<sp/></highlight><highlight class="comment">/*<sp/>used<sp/>for<sp/>bandwidth<sp/>estimation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sent_bytes;<sp/></highlight><highlight class="comment">/*<sp/>used<sp/>for<sp/>bandwidth<sp/>estimation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_bytes;<sp/></highlight><highlight class="comment">/*<sp/>used<sp/>for<sp/>bandwidth<sp/>estimation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>upload_bw;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>download_bw;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>average_upload_bw;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>average_download_bw;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bctbx_list_t<sp/>*aux_destinations;<sp/></highlight><highlight class="comment">/*list<sp/>of<sp/>OrtpAddress<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__msgb__allocator" kindref="compound">msgb_allocator_t</ref><sp/>allocator;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}<sp/><ref refid="struct__OrtpStream" kindref="compound">OrtpStream</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="struct__RtpStream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpStream" kindref="compound">_RtpStream</ref></highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpStream" kindref="compound">OrtpStream</ref><sp/>gs;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_jump;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ts_jump;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>rq;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>tev_rq;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*QoSHandle;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>QoSFlowID;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>jittctl;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>snd_time_offset;</highlight><highlight class="comment">/*the<sp/>scheduler<sp/>time<sp/>when<sp/>the<sp/>application<sp/>send<sp/>its<sp/>first<sp/>timestamp*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>snd_ts_offset;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>first<sp/>application<sp/>timestamp<sp/>sent<sp/>by<sp/>the<sp/>application<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>snd_rand_offset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>random<sp/>number<sp/>added<sp/>to<sp/>the<sp/>user<sp/>offset<sp/>to<sp/>make<sp/>the<sp/>stream<sp/>timestamp*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>snd_last_ts;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>last<sp/>stream<sp/>timestamp<sp/>sended<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rcv_time_offset;<sp/></highlight><highlight class="comment">/*the<sp/>scheduler<sp/>time<sp/>when<sp/>the<sp/>application<sp/>ask<sp/>for<sp/>its<sp/>first<sp/>timestamp*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rcv_ts_offset;<sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>first<sp/>stream<sp/>timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rcv_query_ts_offset;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>first<sp/>user<sp/>timestamp<sp/>asked<sp/>by<sp/>the<sp/>application<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rcv_last_ts;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>last<sp/>stream<sp/>timestamp<sp/>got<sp/>by<sp/>the<sp/>application<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>rcv_last_seq;<sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>last<sp/>stream<sp/>sequence<sp/>number<sp/>got<sp/>by<sp/>the<sp/>application*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>pad;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rcv_last_app_ts;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>last<sp/>application<sp/>timestamp<sp/>asked<sp/>by<sp/>the<sp/>application<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rcv_last_ret_ts;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>timestamp<sp/>of<sp/>the<sp/>last<sp/>sample<sp/>returned<sp/>(only<sp/>for<sp/>continuous<sp/>audio)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>hwrcv_extseq;<sp/></highlight><highlight class="comment">/*<sp/>last<sp/>received<sp/>on<sp/>socket<sp/>extended<sp/>sequence<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>hwrcv_seq_at_last_SR;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>hwrcv_since_last_SR;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>last_rcv_SR_ts;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NTP<sp/>timestamp<sp/>(middle<sp/>32<sp/>bits)<sp/>of<sp/>last<sp/>received<sp/>SR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>last_rcv_SR_time;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>time<sp/>at<sp/>which<sp/>last<sp/>SR<sp/>was<sp/>received<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>snd_seq;<sp/></highlight><highlight class="comment">/*<sp/>send<sp/>sequence<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>last_rtcp_packet_count;<sp/></highlight><highlight class="comment">/*the<sp/>sender&apos;s<sp/>octet<sp/>count<sp/>in<sp/>the<sp/>last<sp/>sent<sp/>RTCP<sp/>SR*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sent_payload_bytes;<sp/></highlight><highlight class="comment">/*used<sp/>for<sp/>RTCP<sp/>sender<sp/>reports*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_errno;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send_errno;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>snd_socket_size;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rcv_socket_size;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ssrc_changed_thres;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjitter__stats" kindref="compound">jitter_stats_t</ref><sp/><ref refid="structjitter__stats" kindref="compound">jitter_stats</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__OrtpCongestionDetector" kindref="compound">_OrtpCongestionDetector</ref><sp/>*congdetect;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">_OrtpVideoBandwidthEstimator</ref><sp/>*video_bw_estimator;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}<ref refid="struct__RtpStream" kindref="compound">RtpStream</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="struct__RtcpStream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtcpStream" kindref="compound">_RtcpStream</ref></highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpStream" kindref="compound">OrtpStream</ref><sp/>gs;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structOrtpRtcpSendAlgorithm" kindref="compound">OrtpRtcpSendAlgorithm</ref><sp/>send_algo;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structOrtpRtcpXrConfiguration" kindref="compound">OrtpRtcpXrConfiguration</ref><sp/>xr_conf;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structOrtpRtcpXrMediaCallbacks" kindref="compound">OrtpRtcpXrMediaCallbacks</ref><sp/>xr_media_callbacks;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structOrtpRtcpTmmbrInfo" kindref="compound">OrtpRtcpTmmbrInfo</ref><sp/>tmmbr_info;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>enabled;<sp/></highlight><highlight class="comment">/*tells<sp/>whether<sp/>we<sp/>can<sp/>send<sp/>RTCP<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>rtcp_xr_dlrr_to_send;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>rtcp_fb_fir_seq_nr;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>FIR<sp/>command<sp/>sequence<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>last_rtcp_fb_pli_snt;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}<sp/><ref refid="struct__RtcpStream" kindref="compound">RtcpStream</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpSession" kindref="compound">_RtpSession</ref><sp/>RtpSession;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="struct__RtpSession" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpSession" kindref="compound">_RtpSession</ref></highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RtpSession<sp/>*next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>RtpSession,<sp/>when<sp/>the<sp/>session<sp/>are<sp/>enqueued<sp/>by<sp/>the<sp/>scheduler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask_pos;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>position<sp/>in<sp/>the<sp/>scheduler<sp/>mask<sp/>of<sp/>RtpSession<sp/>:<sp/>do<sp/>not<sp/>move<sp/>this<sp/>field:<sp/>it<sp/>is<sp/>part<sp/>of<sp/>the<sp/>ABI<sp/>since<sp/>the<sp/>session_set<sp/>macros<sp/>use<sp/>it*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref><sp/>*profile;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pt;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ssrc;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__WaitPoint" kindref="compound">WaitPoint</ref><sp/>wp;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>snd,rcv;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inc_ssrc_candidate;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inc_same_ssrc_count;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hw_recv_pt;<sp/></highlight><highlight class="comment">/*<sp/>recv<sp/>payload<sp/>type<sp/>before<sp/>jitter<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_buf_size;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_upload_bandwidth;<sp/></highlight><highlight class="comment">/*<sp/>Target<sp/>upload<sp/>bandwidth<sp/>at<sp/>network<sp/>layer<sp/>(with<sp/>IP<sp/>and<sp/>UDP<sp/>headers)<sp/>in<sp/>bits/s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__RtpSignalTable" kindref="compound">RtpSignalTable</ref><sp/>on_ssrc_changed;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__RtpSignalTable" kindref="compound">RtpSignalTable</ref><sp/>on_payload_type_changed;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__RtpSignalTable" kindref="compound">RtpSignalTable</ref><sp/>on_telephone_event_packet;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__RtpSignalTable" kindref="compound">RtpSignalTable</ref><sp/>on_telephone_event;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__RtpSignalTable" kindref="compound">RtpSignalTable</ref><sp/>on_timestamp_jump;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__RtpSignalTable" kindref="compound">RtpSignalTable</ref><sp/>on_network_error;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__RtpSignalTable" kindref="compound">RtpSignalTable</ref><sp/>on_rtcp_bye;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bctbx_list_t<sp/>*signal_tables;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bctbx_list_t<sp/>*eventqs;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__RtpStream" kindref="compound">RtpStream</ref><sp/>rtp;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__RtcpStream" kindref="compound">RtcpStream</ref><sp/>rtcp;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structOrtpRtcpXrStats" kindref="compound">OrtpRtcpXrStats</ref><sp/>rtcp_xr_stats;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RtpSessionMode<sp/>mode;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__RtpScheduler" kindref="compound">_RtpScheduler</ref><sp/>*sched;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>flags;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dscp;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multicast_ttl;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multicast_loopback;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>duplication_ratio;<sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>times<sp/>a<sp/>packet<sp/>should<sp/>be<sp/>duplicated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>duplication_left<sp/>;<sp/></highlight><highlight class="comment">/*<sp/>Remainder<sp/>of<sp/>the<sp/>duplication<sp/>ratio,<sp/>internal<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>user_data;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Should<sp/>be<sp/>a<sp/>table<sp/>for<sp/>all<sp/>session<sp/>participants.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>last_recv_time;<sp/></highlight><highlight class="comment">/*<sp/>Time<sp/>of<sp/>receiving<sp/>the<sp/>RTP/RTCP<sp/>packet.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*pending;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>telephony<sp/>events<sp/>extension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tev_send_pt;<sp/></highlight><highlight class="comment">/*telephone<sp/>event<sp/>to<sp/>be<sp/>used<sp/>for<sp/>sending*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*current_tev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>pending<sp/>telephony<sp/>events<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*minimal_sdes;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*full_sdes;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>contributing_sources;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lost_packets_test_vector;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interarrival_jitter_test_vector;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delay_test_vector;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtt;</highlight><highlight class="comment">/*last<sp/>round<sp/>trip<sp/>delay<sp/>calculated*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cum_loss;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpNetworkSimulatorCtx" kindref="compound">OrtpNetworkSimulatorCtx</ref><sp/>*net_sim_ctx;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RtpSession<sp/>*spliced_session;<sp/></highlight><highlight class="comment">/*a<sp/>RtpSession<sp/>that<sp/>will<sp/>retransmit<sp/>everything<sp/>received<sp/>on<sp/>this<sp/>session*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrtp__stats" kindref="compound">rtp_stats_t</ref><sp/>stats;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bctbx_list_t<sp/>*recv_addr_map;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>send_ts_offset;<sp/></highlight><highlight class="comment">/*additional<sp/>offset<sp/>to<sp/>add<sp/>when<sp/>sending<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>symmetric_rtp;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>permissive;<sp/></highlight><highlight class="comment">/*use<sp/>the<sp/>permissive<sp/>algorithm*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>use_connect;<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>connect()<sp/>on<sp/>the<sp/>socket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>ssrc_set;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>reuseaddr;<sp/></highlight><highlight class="comment">/*setsockopt<sp/>SO_REUSEADDR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>rtcp_mux;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>avpf_features;<sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>use_pktinfo;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>is_spliced;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>congestion_detector_enabled;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>video_bandwidth_estimator_enabled;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">};</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="struct__OrtpVideoBandwidthEstimatorParams" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__OrtpVideoBandwidthEstimatorParams" kindref="compound">_OrtpVideoBandwidthEstimatorParams</ref><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enabled;<sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packet_count_min;<sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packets_size_max;<sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trust_percentage;<sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal">}<sp/><ref refid="rtpsession_8h_1a490c543c4d74dd460cff143820eceffd" kindref="member">OrtpVideoBandwidthEstimatorParams</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ortp_network_simulator_mode_to_string(OrtpNetworkSimulatorMode<sp/>mode);</highlight></codeline>
<codeline lineno="471"><highlight class="normal">ORTP_PUBLIC<sp/>OrtpNetworkSimulatorMode<sp/>ortp_network_simulator_mode_from_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>public<sp/>API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">ORTP_PUBLIC<sp/>RtpSession<sp/>*<ref refid="rtpsession_8h_1a0fa068a78f69d25603baf8801cd352b7" kindref="member">rtp_session_new</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="476"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a431c5b6dd2834bef90fef43bd643eb80" kindref="member">rtp_session_set_scheduling_mode</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yesno);</highlight></codeline>
<codeline lineno="477"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a3160cbe78f10ac689845ed967b7cd974" kindref="member">rtp_session_set_blocking_mode</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yesno);</highlight></codeline>
<codeline lineno="478"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a7f0a24e2969eb0b2abac2f1ad5a31002" kindref="member">rtp_session_set_profile</ref>(RtpSession<sp/>*session,<sp/><ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref><sp/>*profile);</highlight></codeline>
<codeline lineno="479"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1aad82e403491b4e4696c1ebb1efe71f53" kindref="member">rtp_session_set_send_profile</ref>(RtpSession<sp/>*session,<ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref><sp/>*profile);</highlight></codeline>
<codeline lineno="480"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1aff8d780e4e02d24ce7fd22a22b1b1448" kindref="member">rtp_session_set_recv_profile</ref>(RtpSession<sp/>*session,<ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref><sp/>*profile);</highlight></codeline>
<codeline lineno="481"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref><sp/>*<ref refid="rtpsession_8h_1a6189df28500f7b32d5f5e278c89dcce3" kindref="member">rtp_session_get_profile</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="482"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref><sp/>*<ref refid="rtpsession_8h_1afe768707f24ac69099de4f4f6b983ea6" kindref="member">rtp_session_get_send_profile</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="483"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="struct__RtpProfile" kindref="compound">RtpProfile</ref><sp/>*<ref refid="rtpsession_8h_1ab0a11cd312984518930c9f970a56ab75" kindref="member">rtp_session_get_recv_profile</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="484"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1aa9f9421d7e744aa680d6fd327db29026" kindref="member">rtp_session_signal_connect</ref>(RtpSession<sp/>*session,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*signal_name,<sp/>RtpCallback<sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="485"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a3d02b773f1747f566c22a1f47eab96a1" kindref="member">rtp_session_signal_disconnect_by_callback</ref>(RtpSession<sp/>*session,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*signal_name,<sp/>RtpCallback<sp/>cb);</highlight></codeline>
<codeline lineno="486"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a3062539b7c2f064487511f6f0d8e216c" kindref="member">rtp_session_set_ssrc</ref>(RtpSession<sp/>*session,<sp/>uint32_t<sp/>ssrc);</highlight></codeline>
<codeline lineno="487"><highlight class="normal">ORTP_PUBLIC<sp/>uint32_t<sp/><ref refid="rtpsession_8h_1a6c1d392f73d408de69304543c1c7444a" kindref="member">rtp_session_get_send_ssrc</ref>(RtpSession*<sp/>session);</highlight></codeline>
<codeline lineno="488"><highlight class="normal">ORTP_PUBLIC<sp/>uint32_t<sp/><ref refid="rtpsession_8h_1ae260f30eb162a0e4686502e3cfb532ef" kindref="member">rtp_session_get_recv_ssrc</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="489"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1ac42dcb27e5976493da0d90de9bec5539" kindref="member">rtp_session_set_seq_number</ref>(RtpSession<sp/>*session,<sp/>uint16_t<sp/>seq);</highlight></codeline>
<codeline lineno="490"><highlight class="normal">ORTP_PUBLIC<sp/>uint16_t<sp/><ref refid="rtpsession_8h_1a9623b86923bace9f34956f3e0fd475b3" kindref="member">rtp_session_get_seq_number</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="491"><highlight class="normal">ORTP_PUBLIC<sp/>uint32_t<sp/><ref refid="rtpsession_8h_1a94cff96b50ea0758118dbd6f6d995afc" kindref="member">rtp_session_get_rcv_ext_seq_number</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="492"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a8a7a1274f07648191be9937148b92c0a" kindref="member">rtp_session_get_cum_loss</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="493"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_set_duplication_ratio(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ratio);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_enable_jitter_buffer(RtpSession<sp/>*session<sp/>,<sp/>bool_t<sp/>enabled);</highlight></codeline>
<codeline lineno="496"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>rtp_session_jitter_buffer_enabled(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="497"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_set_jitter_buffer_params(RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__JBParameters" kindref="compound">JBParameters</ref><sp/>*par);</highlight></codeline>
<codeline lineno="498"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_get_jitter_buffer_params(RtpSession<sp/>*session,<sp/><ref refid="struct__JBParameters" kindref="compound">JBParameters</ref><sp/>*par);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a3ba183096727b72225908e68ac4ed8c8" kindref="member">rtp_session_set_send_ts_offset</ref>(RtpSession<sp/>*s,<sp/>uint32_t<sp/>offset);</highlight></codeline>
<codeline lineno="507"><highlight class="normal">ORTP_PUBLIC<sp/>uint32_t<sp/>rtp_session_get_send_ts_offset(RtpSession<sp/>*s);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">/*deprecated<sp/>jitter<sp/>control<sp/>functions*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a3504171811ed93af8630749aa4a1b881" kindref="member">rtp_session_set_jitter_compensation</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milisec);</highlight></codeline>
<codeline lineno="512"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_enable_adaptive_jitter_compensation(RtpSession<sp/>*session,<sp/>bool_t<sp/>val);</highlight></codeline>
<codeline lineno="513"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>rtp_session_adaptive_jitter_compensation_enabled(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1ae2d0b23dd9d14fdfe6ee4f4377b1a2f2" kindref="member">rtp_session_set_time_jump_limit</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>miliseconds);</highlight></codeline>
<codeline lineno="516"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_session_join_multicast_group(RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ip);</highlight></codeline>
<codeline lineno="517"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a21370581ee33d3519cdb578b153f782c" kindref="member">rtp_session_set_local_addr</ref>(RtpSession<sp/>*session,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*addr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_port,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtcp_port);</highlight></codeline>
<codeline lineno="518"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a2f93a8a2ea1f132b412bf8b9e66886ac" kindref="member">rtp_session_get_local_port</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="519"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_session_get_local_rtcp_port(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><ref refid="rtpsession_8h_1a2e567fa3141c55c14eea2d85f075db8d" kindref="member">rtp_session_set_remote_addr_full</ref><sp/>(RtpSession<sp/>*<sp/>session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>rtp_addr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_port,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>rtcp_addr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtcp_port);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">/*same<sp/>as<sp/>previous<sp/>function,<sp/>old<sp/>name:*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_session_set_remote_addr_and_port<sp/>(RtpSession<sp/>*<sp/>session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>addr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_port,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtcp_port);</highlight></codeline>
<codeline lineno="525"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a5668f5b4f85e7188c9ede364beb610cd" kindref="member">rtp_session_set_remote_addr</ref>(RtpSession<sp/>*session,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*addr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port);</highlight></codeline>
<codeline lineno="526"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a99fd2d76a065db4293ba8d1d7e5db720" kindref="member">rtp_session_add_aux_remote_addr_full</ref>(RtpSession<sp/>*<sp/>session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>rtp_addr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_port,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>rtcp_addr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtcp_port);</highlight></codeline>
<codeline lineno="527"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_clear_aux_remote_addr(RtpSession<sp/>*<sp/>session);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>alternatively<sp/>to<sp/>the<sp/>set_remote_addr()<sp/>and<sp/>set_local_addr(),<sp/>an<sp/>application<sp/>can<sp/>give</highlight></codeline>
<codeline lineno="529"><highlight class="comment">a<sp/>valid<sp/>socket<sp/>(potentially<sp/>connect()ed<sp/>)to<sp/>be<sp/>used<sp/>by<sp/>the<sp/>RtpSession<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_set_sockets(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtpfd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtcpfd);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_get_transports(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session,<sp/><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref><sp/>**rtptr,<sp/><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref><sp/>**rtcptr);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">/*those<sp/>methods<sp/>are<sp/>provided<sp/>for<sp/>people<sp/>who<sp/>wants<sp/>to<sp/>send<sp/>non-RTP<sp/>messages<sp/>using<sp/>the<sp/>RTP/RTCP<sp/>sockets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal">ORTP_PUBLIC<sp/>ortp_socket_t<sp/>rtp_session_get_rtp_socket(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="535"><highlight class="normal">ORTP_PUBLIC<sp/>ortp_socket_t<sp/>rtp_session_get_rtcp_socket(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="536"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a56ce46e45420450b94a4d209c9030249" kindref="member">rtp_session_refresh_sockets</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>QOS<sp/>/<sp/>DSCP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a6154b4d52a7b013413d81947f0891b17" kindref="member">rtp_session_set_dscp</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dscp);</highlight></codeline>
<codeline lineno="541"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a6c2a87c9f363671f19529909b0d023c1" kindref="member">rtp_session_get_dscp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Packet<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a470b64302a541ddfd78d1e60e72de161" kindref="member">rtp_session_set_pktinfo</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>activate);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Multicast<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1af7428b8772540474aa792897885c7af8" kindref="member">rtp_session_set_multicast_ttl</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ttl);</highlight></codeline>
<codeline lineno="549"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a530f51392ebb4811f402371833bd117a" kindref="member">rtp_session_get_multicast_ttl</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a3ffa7ec566db9ed4f77263f47fafb005" kindref="member">rtp_session_set_multicast_loopback</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yesno);</highlight></codeline>
<codeline lineno="552"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1af409cc95767678af59767224912e9bd9" kindref="member">rtp_session_get_multicast_loopback</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1ae894a47b51d8570930ebfae48e42fe1e" kindref="member">rtp_session_set_send_payload_type</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paytype);</highlight></codeline>
<codeline lineno="557"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a2eaa2be31af31a67e4bcfdbbcdba3732" kindref="member">rtp_session_get_send_payload_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a740572361056922a8f6c1c916aad1461" kindref="member">rtp_session_get_recv_payload_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="560"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a2cce98b970a30aa2c0b1b0714fb7ca6e" kindref="member">rtp_session_set_recv_payload_type</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pt);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1ad65db84a0d2bb28bbdbec30f9c12b2a3" kindref="member">rtp_session_set_send_telephone_event_payload_type</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paytype);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a7056cfba3539095c6e4237b82c8bda94" kindref="member">rtp_session_set_payload_type</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pt);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1ab8988e3fe0655201ac244523a8245c9f" kindref="member">rtp_session_set_symmetric_rtp</ref><sp/>(RtpSession<sp/>*<sp/>session,<sp/>bool_t<sp/>yesno);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>rtp_session_get_symmetric_rtp<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*<sp/>session);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_enable_rtcp_mux(RtpSession<sp/>*session,<sp/>bool_t<sp/>yesno);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>rtp_session_rtcp_mux_enabled(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1af339d62b7aaa27764c549957da80a1d4" kindref="member">rtp_session_set_connected_mode</ref>(RtpSession<sp/>*session,<sp/>bool_t<sp/>yesno);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a89f9b413210262726be7674b7742ad44" kindref="member">rtp_session_enable_rtcp</ref>(RtpSession<sp/>*session,<sp/>bool_t<sp/>yesno);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*<sp/>rtcp<sp/>status</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*<sp/>@return<sp/>TRUE<sp/>if<sp/>rtcp<sp/>is<sp/>enabled<sp/>for<sp/>this<sp/>session</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>rtp_session_rtcp_enabled(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a9e6631e023727b61a6ceb78ab4a5918d" kindref="member">rtp_session_set_rtcp_report_interval</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_ms);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a4c291f9d3c9ab47108a126b8e277cb24" kindref="member">rtp_session_set_target_upload_bandwidth</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_bandwidth);</highlight></codeline>
<codeline lineno="594"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_session_get_target_upload_bandwidth(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_configure_rtcp_xr(RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structOrtpRtcpXrConfiguration" kindref="compound">OrtpRtcpXrConfiguration</ref><sp/>*config);</highlight></codeline>
<codeline lineno="597"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_set_rtcp_xr_media_callbacks(RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structOrtpRtcpXrMediaCallbacks" kindref="compound">OrtpRtcpXrMediaCallbacks</ref><sp/>*cbs);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a7e47523eeb130c48d79942a801e93f49" kindref="member">rtp_session_set_ssrc_changed_threshold</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numpackets);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment">/*low<sp/>level<sp/>recv<sp/>and<sp/>send<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*<sp/><ref refid="rtpsession_8h_1a7df1261d3eeaf10d283ba4ac34e2388d" kindref="member">rtp_session_recvm_with_ts</ref><sp/>(RtpSession<sp/>*<sp/>session,<sp/>uint32_t<sp/>user_ts);</highlight></codeline>
<codeline lineno="603"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*<sp/><ref refid="rtpsession_8h_1abcdc6f7a3f81323b4f89e6a072b65477" kindref="member">rtp_session_create_packet</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>header_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*payload,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>payload_size);</highlight></codeline>
<codeline lineno="604"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*<sp/><ref refid="rtpsession_8h_1a684815dccddf66e6f544e4283f0c134e" kindref="member">rtp_session_create_packet_raw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*packet,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>packet_size);</highlight></codeline>
<codeline lineno="605"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*<sp/><ref refid="rtpsession_8h_1a4ac174ce6991e2864fe7faa771c01199" kindref="member">rtp_session_create_packet_with_data</ref>(RtpSession<sp/>*session,<sp/>uint8_t<sp/>*payload,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>payload_size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*freefn)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="606"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*<sp/><ref refid="rtpsession_8h_1aac85c2ae4bbed6e8ce6d5cdb9a086810" kindref="member">rtp_session_create_packet_in_place</ref>(RtpSession<sp/>*session,uint8_t<sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*freefn)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1afda0872c335c06a86a45ca4591a8b7ee" kindref="member">rtp_session_sendm_with_ts</ref><sp/>(RtpSession<sp/>*<sp/>session,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*mp,<sp/>uint32_t<sp/>userts);</highlight></codeline>
<codeline lineno="608"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_session_sendto(RtpSession<sp/>*session,<sp/>bool_t<sp/>is_rtp,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*destaddr,<sp/>socklen_t<sp/>destlen);</highlight></codeline>
<codeline lineno="609"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_session_recvfrom(RtpSession<sp/>*session,<sp/>bool_t<sp/>is_rtp,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*from,<sp/>socklen_t<sp/>*fromlen);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>high<sp/>level<sp/>recv<sp/>and<sp/>send<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a2e325c908712601c051a7eedc59ca935" kindref="member">rtp_session_recv_with_ts</ref>(RtpSession<sp/>*session,<sp/>uint8_t<sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>uint32_t<sp/>ts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*have_more);</highlight></codeline>
<codeline lineno="612"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a3ed3f377bf06840f0e32c9b9a76bad10" kindref="member">rtp_session_send_with_ts</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>uint32_t<sp/>userts);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>event<sp/>API*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a9d31ac30cac9a6367d958de31d8df288" kindref="member">rtp_session_register_event_queue</ref>(RtpSession<sp/>*session,<sp/><ref refid="structOrtpEvQueue" kindref="compound">OrtpEvQueue</ref><sp/>*q);</highlight></codeline>
<codeline lineno="616"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_unregister_event_queue(RtpSession<sp/>*session,<sp/><ref refid="structOrtpEvQueue" kindref="compound">OrtpEvQueue</ref><sp/>*q);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IP<sp/>bandwidth<sp/>usage<sp/>estimation<sp/>functions,<sp/>returning<sp/>bits/s*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtp_session_compute_send_bandwidth(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="621"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtp_session_compute_recv_bandwidth(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="622"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a13ea8d1aee0c9ecc90d7c2429203d165" kindref="member">rtp_session_get_send_bandwidth</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="623"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a5ecb1657fcd72967d5ece7ae298ecc38" kindref="member">rtp_session_get_recv_bandwidth</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="624"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtp_session_get_rtp_send_bandwidth(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="625"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtp_session_get_rtp_recv_bandwidth(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="626"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtp_session_get_rtcp_send_bandwidth(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="627"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtp_session_get_rtcp_recv_bandwidth(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtp_session_get_send_bandwidth_smooth(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="630"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtp_session_get_recv_bandwidth_smooth(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_send_rtcp_APP(RtpSession<sp/>*session,<sp/>uint8_t<sp/>subtype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>datalen);</highlight></codeline>
<codeline lineno="642"><highlight class="normal">ORTP_PUBLIC<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a9e09a51b0c29dba92d96dddb63b8a7c7" kindref="member">rtp_session_rtcp_sendm_raw</ref>(RtpSession<sp/>*<sp/>session,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*<sp/>m);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal">ORTP_PUBLIC<sp/>uint32_t<sp/><ref refid="rtpsession_8h_1a85014c21ef1be0f1c5faf32fcce8deea" kindref="member">rtp_session_get_current_send_ts</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="646"><highlight class="normal">ORTP_PUBLIC<sp/>uint32_t<sp/><ref refid="rtpsession_8h_1a52ba91bc2d1a8bbccf8a4f0e1888e9e7" kindref="member">rtp_session_get_current_recv_ts</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="647"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a5acb23b3409eac50fbfa6bf74f12a388" kindref="member">rtp_session_flush_sockets</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="648"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a6e0cb1ebe665e66eb8696f5b0de64c2c" kindref="member">rtp_session_release_sockets</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="649"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1addfadb13d0fbeefb59d1641b878c4c64" kindref="member">rtp_session_resync</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="650"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a87c96ff6a38bd0683165040af5ec1418" kindref="member">rtp_session_reset</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="651"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a7efc76b8a4814d771634243707c2420b" kindref="member">rtp_session_destroy</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrtp__stats" kindref="compound">rtp_stats_t</ref><sp/>*<sp/><ref refid="rtpsession_8h_1a8afa511af8abfa37b705dd964ad5e251" kindref="member">rtp_session_get_stats</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="654"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structjitter__stats" kindref="compound">jitter_stats_t</ref><sp/>*<sp/><ref refid="rtpsession_8h_1af8d5bfef2fe5c0f9a61e34fe335a16d6" kindref="member">rtp_session_get_jitter_stats</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session<sp/>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_reset_stats(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a96e580dd37e34bb360c869dff75fdd51" kindref="member">rtp_session_set_data</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="658"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="rtpsession_8h_1ad411cc6b736570c7f962ff8f8b4d9909" kindref="member">rtp_session_get_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1abf31386f3c893f7846341dfd2524368e" kindref="member">rtp_session_set_recv_buf_size</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufsize);</highlight></codeline>
<codeline lineno="661"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1ae4a6c82c153319a4b390dde2a788da9e" kindref="member">rtp_session_set_rtp_socket_send_buffer_size</ref>(RtpSession<sp/>*<sp/>session,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="662"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a16d501a0be9f3748fff6e30c1f93e0aa" kindref="member">rtp_session_set_rtp_socket_recv_buffer_size</ref>(RtpSession<sp/>*<sp/>session,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>in<sp/>use<sp/>with<sp/>the<sp/>scheduler<sp/>to<sp/>convert<sp/>a<sp/>timestamp<sp/>in<sp/>scheduler<sp/>time<sp/>unit<sp/>(ms)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal">ORTP_PUBLIC<sp/>uint32_t<sp/>rtp_session_ts_to_time(RtpSession<sp/>*session,uint32_t<sp/>timestamp);</highlight></codeline>
<codeline lineno="666"><highlight class="normal">ORTP_PUBLIC<sp/>uint32_t<sp/>rtp_session_time_to_ts(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>millisecs);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>function<sp/>aims<sp/>at<sp/>simulating<sp/>senders<sp/>with<sp/>&quot;imprecise&quot;<sp/>clocks,<sp/>resulting<sp/>in</highlight></codeline>
<codeline lineno="668"><highlight class="comment">rtp<sp/>packets<sp/>sent<sp/>with<sp/>timestamp<sp/>uncorrelated<sp/>with<sp/>the<sp/>system<sp/>clock<sp/>.</highlight></codeline>
<codeline lineno="669"><highlight class="comment">This<sp/>is<sp/>only<sp/>availlable<sp/>to<sp/>sessions<sp/>working<sp/>with<sp/>the<sp/>oRTP<sp/>scheduler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_make_time_distorsion(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milisec);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment">/*RTCP<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a05f1112dd80c82d3687f03529ca6550d" kindref="member">rtp_session_set_source_description</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cname,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*email,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*phone,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*loc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*note);</highlight></codeline>
<codeline lineno="676"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_add_contributing_source(RtpSession<sp/>*session,<sp/>uint32_t<sp/>csrc,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*email,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*phone,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*loc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*note);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DEPRECATED:<sp/>Use<sp/>rtp_session_remove_contributing_source<sp/>instead<sp/>of<sp/>rtp_session_remove_contributing_sources<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rtp_session_remove_contributing_sources<sp/>rtp_session_remove_contributing_source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_remove_contributing_source(RtpSession<sp/>*session,<sp/>uint32_t<sp/>csrc);</highlight></codeline>
<codeline lineno="682"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref>*<sp/>rtp_session_create_rtcp_sdes_packet(RtpSession<sp/>*session,<sp/>bool_t<sp/>full);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1afb1c0953e5c8dbfb0f464b8c967b7778" kindref="member">rtp_session_get_last_recv_time</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*tv);</highlight></codeline>
<codeline lineno="685"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1ab765af066dcadb624d76b1c9ede2643a" kindref="member">rtp_session_bye</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*reason);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_session_get_last_send_error_code(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="688"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_clear_send_error_code(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="689"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_session_get_last_recv_error_code(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="690"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_clear_recv_error_code(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a3d716085a1e32064943a8ec6ed455089" kindref="member">rtp_session_get_round_trip_propagation</ref>(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_enable_network_simulation(RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__OrtpNetworkSimulatorParams" kindref="compound">OrtpNetworkSimulatorParams</ref><sp/>*params);</highlight></codeline>
<codeline lineno="697"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_enable_congestion_detection(RtpSession<sp/>*session,<sp/>bool_t<sp/>enabled);</highlight></codeline>
<codeline lineno="698"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_enable_video_bandwidth_estimator(RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__OrtpVideoBandwidthEstimatorParams" kindref="compound">OrtpVideoBandwidthEstimatorParams</ref><sp/>*params);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a63a140410917d2afef8b62eb2f09ca3b" kindref="member">rtp_session_rtcp_set_lost_packet_value</ref>(<sp/>RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a163ae2018115d15813e3bfc8d2e32160" kindref="member">rtp_session_rtcp_set_jitter_value</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a0535400b3204ee190a2be6dcd983aa67" kindref="member">rtp_session_rtcp_set_delay_value</ref>(RtpSession<sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>);</highlight></codeline>
<codeline lineno="703"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*<sp/><ref refid="rtpsession_8h_1ab65a3a4fe6defea5e409db6f4313c33b" kindref="member">rtp_session_pick_with_cseq</ref><sp/>(RtpSession<sp/>*<sp/>session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>sequence_number);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_send_rtcp_xr_rcvr_rtt(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="707"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_send_rtcp_xr_dlrr(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="708"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_send_rtcp_xr_stat_summary(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="709"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_send_rtcp_xr_voip_metrics(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>rtp_session_avpf_enabled(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="713"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>rtp_session_avpf_payload_type_feature_enabled(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>feature);</highlight></codeline>
<codeline lineno="714"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>rtp_session_avpf_feature_enabled(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>feature);</highlight></codeline>
<codeline lineno="715"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_enable_avpf_feature(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>feature,<sp/>bool_t<sp/>enable);</highlight></codeline>
<codeline lineno="716"><highlight class="normal">ORTP_PUBLIC<sp/>uint16_t<sp/>rtp_session_get_avpf_rr_interval(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="717"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>rtp_session_rtcp_psfb_scheduled(RtpSession<sp/>*session,<sp/>rtcp_psfb_type_t<sp/>type);</highlight></codeline>
<codeline lineno="718"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>rtp_session_rtcp_rtpfb_scheduled(RtpSession<sp/>*session,<sp/>rtcp_rtpfb_type_t<sp/>type);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_send_rtcp_fb_generic_nack(RtpSession<sp/>*session,<sp/>uint16_t<sp/>pid,<sp/>uint16_t<sp/>blp);</highlight></codeline>
<codeline lineno="720"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_send_rtcp_fb_pli(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="721"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_send_rtcp_fb_fir(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="722"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_send_rtcp_fb_sli(RtpSession<sp/>*session,<sp/>uint16_t<sp/>first,<sp/>uint16_t<sp/>number,<sp/>uint8_t<sp/>picture_id);</highlight></codeline>
<codeline lineno="723"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_send_rtcp_fb_rpsi(RtpSession<sp/>*session,<sp/>uint8_t<sp/>*bit_string,<sp/>uint16_t<sp/>bit_string_len);</highlight></codeline>
<codeline lineno="724"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_send_rtcp_fb_tmmbr(RtpSession<sp/>*session,<sp/>uint64_t<sp/>mxtbr);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_send_rtcp_fb_tmmbn(RtpSession<sp/>*session,<sp/>uint32_t<sp/>ssrc);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="comment">/*private<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_init(RtpSession<sp/>*session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rtp_session_set_flag(session,flag)<sp/>(session)-&gt;flags|=(flag)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rtp_session_unset_flag(session,flag)<sp/>(session)-&gt;flags&amp;=~(flag)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_uninit(RtpSession<sp/>*session);</highlight></codeline>
<codeline lineno="733"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_dispatch_event(RtpSession<sp/>*session,<sp/><ref refid="structmsgb" kindref="compound">OrtpEvent</ref><sp/>*ev);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_set_reuseaddr(RtpSession<sp/>*session,<sp/>bool_t<sp/>yes);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a43dc94c576c74a6f6b31cd85ced843a4" kindref="member">meta_rtp_transport_modifier_inject_packet_to_send</ref>(<ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref><sp/>*t,<sp/><ref refid="struct__RtpTransportModifier" kindref="compound">RtpTransportModifier</ref><sp/>*tpm,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="739"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1ad533ea463933174626a46ce880410157" kindref="member">meta_rtp_transport_modifier_inject_packet_to_send_to</ref>(<ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref><sp/>*t,<sp/><ref refid="struct__RtpTransportModifier" kindref="compound">RtpTransportModifier</ref><sp/>*tpm,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*to,<sp/>socklen_t<sp/>tolen);</highlight></codeline>
<codeline lineno="740"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1a6224b506a1bd399d1018e6fd70770f83" kindref="member">meta_rtp_transport_modifier_inject_packet_to_recv</ref>(<ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref><sp/>*t,<sp/><ref refid="struct__RtpTransportModifier" kindref="compound">RtpTransportModifier</ref><sp/>*tpm,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref>*<sp/><ref refid="rtpsession_8h_1affa99429db7b4961bc4e20d719174bb8" kindref="member">meta_rtp_transport_get_endpoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref><sp/>*transport);</highlight></codeline>
<codeline lineno="755"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rtpsession_8h_1abe440d6ab13b45268749ae7ed62771f1" kindref="member">meta_rtp_transport_set_endpoint</ref>(<ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref><sp/>*transport,<ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref><sp/>*endpoint);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meta_rtp_transport_destroy(<ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref><sp/>*tp);</highlight></codeline>
<codeline lineno="758"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meta_rtp_transport_append_modifier(<ref refid="struct__RtpTransport" kindref="compound">RtpTransport</ref><sp/>*tp,<ref refid="struct__RtpTransportModifier" kindref="compound">RtpTransportModifier</ref><sp/>*tpm);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_session_splice(RtpSession<sp/>*session,<sp/>RtpSession<sp/>*to_session);</highlight></codeline>
<codeline lineno="761"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtp_session_unsplice(RtpSession<sp/>*session,<sp/>RtpSession<sp/>*to_session);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>ortp_stream_is_ipv6(<ref refid="struct__OrtpStream" kindref="compound">OrtpStream</ref><sp/>*os);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/rtpsession.h"/>
  </compounddef>
</doxygen>
