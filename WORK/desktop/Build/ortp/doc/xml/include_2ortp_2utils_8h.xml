<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="include_2ortp_2utils_8h" kind="file" language="C++">
    <compoundname>include/ortp/utils.h</compoundname>
    <includes refid="port_8h" local="yes">ortp/port.h</includes>
    <includedby refid="congestiondetector_8h" local="no">congestiondetector.h</includedby>
    <includedby refid="extremum_8c" local="yes">extremum.c</includedby>
    <includedby refid="kalmanrls_8c" local="yes">kalmanrls.c</includedby>
    <includedby refid="videobandwidthestimator_8h" local="no">videobandwidthestimator.h</includedby>
    <includedby refid="rtpsession_8h" local="no">rtpsession.h</includedby>
    <invincdepgraph>
      <node id="464">
        <label>telephonyevents.h</label>
        <link refid="telephonyevents_8h"/>
      </node>
      <node id="462">
        <label>ortp.h</label>
        <link refid="ortp_8h"/>
      </node>
      <node id="461">
        <label>rtpsession.h</label>
        <link refid="rtpsession_8h"/>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
      </node>
      <node id="463">
        <label>sessionset.h</label>
        <link refid="sessionset_8h"/>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
      </node>
      <node id="460">
        <label>utils.h</label>
        <link refid="include_2ortp_2utils_8h"/>
        <childnode refid="461" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct__OrtpExtremum" prot="public">_OrtpExtremum</innerclass>
    <innerclass refid="struct__OrtpKalmanRLS" prot="public">_OrtpKalmanRLS</innerclass>
    <innerclass refid="struct__OrtpBwEstimator" prot="public">_OrtpBwEstimator</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="include_2ortp_2utils_8h_1af0841eb87d24d5a8182c98b816eb15a9" prot="public" static="no">
        <type>struct <ref refid="struct__OrtpExtremum" kindref="compound">_OrtpExtremum</ref></type>
        <definition>typedef struct _OrtpExtremum OrtpExtremum</definition>
        <argsstring></argsstring>
        <name>OrtpExtremum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utility object to determine a maximum or minimum (but not both at the same time), of a signal during a sliding period of time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="include_2ortp_2utils_8h_1a44c41d56093eb11d641817431c6e9100" prot="public" static="no">
        <type>struct <ref refid="struct__OrtpKalmanRLS" kindref="compound">_OrtpKalmanRLS</ref></type>
        <definition>typedef struct _OrtpKalmanRLS OrtpKalmanRLS</definition>
        <argsstring></argsstring>
        <name>OrtpKalmanRLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utility object to interpolate linear model based on captures with 0-mean noise. Based on the model (x, y) where y evolves depending on x with relation y = m*x+b, it will estimate unknown values b, m using given noisy measures xmes and ymes, eg real system is evolving with: y = m * x + b + noise. Note: If noise is NOT white, the residue will be absorbed by one of the estimators. It is an implementation of recursive least square algorithm, based on Kalman filter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="include_2ortp_2utils_8h_1a1e762e1486aef28d38dc3c09dc5b1cc2" prot="public" static="no">
        <type>struct <ref refid="struct__OrtpBwEstimator" kindref="compound">_OrtpBwEstimator</ref></type>
        <definition>typedef struct _OrtpBwEstimator OrtpBwEstimator</definition>
        <argsstring></argsstring>
        <name>OrtpBwEstimator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="80" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="include_2ortp_2utils_8h_1ab74da937e8c1a989816a77bf3ba8f0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_extremum_reset</definition>
        <argsstring>(OrtpExtremum *obj)</argsstring>
        <name>ortp_extremum_reset</name>
        <param>
          <type><ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="39" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/extremum.c" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="include_2ortp_2utils_8h_1a9c4de2ac13511bedfdab3ccabadeae51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_extremum_init</definition>
        <argsstring>(OrtpExtremum *obj, int period)</argsstring>
        <name>ortp_extremum_init</name>
        <param>
          <type><ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>period</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="40" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/extremum.c" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="include_2ortp_2utils_8h_1a6029822f3952f4b0c04db4be7ab2b9ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t ortp_extremum_record_min</definition>
        <argsstring>(OrtpExtremum *obj, uint64_t curtime, float value)</argsstring>
        <name>ortp_extremum_record_min</name>
        <param>
          <type><ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>curtime</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Record a new value for minimal. <simplesect kind="return"><para>TRUE if extremum has changed or false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="45" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/extremum.c" bodystart="53" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="include_2ortp_2utils_8h_1a0c4c7bd4d8112948cf6f195f546b749b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t ortp_extremum_record_max</definition>
        <argsstring>(OrtpExtremum *obj, uint64_t curtime, float value)</argsstring>
        <name>ortp_extremum_record_max</name>
        <param>
          <type><ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>curtime</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="46" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/extremum.c" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="include_2ortp_2utils_8h_1a11ff88a753c5c5e2e4456dcaa7ec0d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ortp_extremum_get_current</definition>
        <argsstring>(OrtpExtremum *obj)</argsstring>
        <name>ortp_extremum_get_current</name>
        <param>
          <type><ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="47" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/extremum.c" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="include_2ortp_2utils_8h_1a75a01b3f188e77699fcadcad70daac3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ortp_extremum_get_previous</definition>
        <argsstring>(OrtpExtremum *obj)</argsstring>
        <name>ortp_extremum_get_previous</name>
        <param>
          <type><ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unlike ortp_extremum_get_current() which can be very fluctuating, ortp_extremum_get_previous() returns the extremum found for the previous period. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="51" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/extremum.c" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="include_2ortp_2utils_8h_1a6ec41913afcf5be753ec0e6a7b1c9774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_kalman_rls_init</definition>
        <argsstring>(OrtpKalmanRLS *obj, double m0, double b0)</argsstring>
        <name>ortp_kalman_rls_init</name>
        <param>
          <type><ref refid="struct__OrtpKalmanRLS" kindref="compound">OrtpKalmanRLS</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="70" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/kalmanrls.c" bodystart="23" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="include_2ortp_2utils_8h_1aa3d6e3039b3dc2405be462240456719a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_kalman_rls_record</definition>
        <argsstring>(OrtpKalmanRLS *obj, double xmes, double ymes)</argsstring>
        <name>ortp_kalman_rls_record</name>
        <param>
          <type><ref refid="struct__OrtpKalmanRLS" kindref="compound">OrtpKalmanRLS</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xmes</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ymes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This is delta between the measure and our prediction based on previous model values: the more accurate the system, the smaller this value.</para>        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="71" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/kalmanrls.c" bodystart="32" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="include_2ortp_2utils_8h_1ae43e234296d68a765316652d43179564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_bw_estimator_init</definition>
        <argsstring>(OrtpBwEstimator *obj, float alpha, float step)</argsstring>
        <name>ortp_bw_estimator_init</name>
        <param>
          <type><ref refid="struct__OrtpBwEstimator" kindref="compound">OrtpBwEstimator</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utility object to compute a sliding exponential mean bitrate. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>the estimator structure to initialize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the weight of previous estimation (between 0 and 1) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step</parametername>
</parameternamelist>
<parameterdescription>
<para>a time constant in seconds representing the sampling period </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="88" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/utils.c" bodystart="35" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="include_2ortp_2utils_8h_1a371cb4d0ed002736f5ae8b343ebe0e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_bw_estimator_packet_received</definition>
        <argsstring>(OrtpBwEstimator *obj, size_t bytes, const struct timeval *recv_time)</argsstring>
        <name>ortp_bw_estimator_packet_received</name>
        <param>
          <type><ref refid="struct__OrtpBwEstimator" kindref="compound">OrtpBwEstimator</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>const struct timeval *</type>
          <declname>recv_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="90" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/utils.c" bodystart="44" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="include_2ortp_2utils_8h_1a1064a40a027ffa8fc908271ce3fed54d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ortp_bw_estimator_get_value</definition>
        <argsstring>(OrtpBwEstimator *obj)</argsstring>
        <name>ortp_bw_estimator_get_value</name>
        <param>
          <type><ref refid="struct__OrtpBwEstimator" kindref="compound">OrtpBwEstimator</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h" line="92" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/utils.c" bodystart="57" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>oRTP<sp/>library<sp/>is<sp/>an<sp/>RTP<sp/>(Realtime<sp/>Transport<sp/>Protocol<sp/>-<sp/>rfc3550)<sp/>implementation<sp/>with<sp/>additional<sp/>features.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2017<sp/>Belledonne<sp/>Communications<sp/>SARL</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ORTP_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ORTP_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ortp/port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="struct__OrtpExtremum" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__OrtpExtremum" kindref="compound">_OrtpExtremum</ref>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>current_extremum;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>last_stable;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>extremum_time;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>period;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_extremum_reset(<ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_extremum_init(<ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>period);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>ortp_extremum_record_min(<ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref><sp/>*obj,<sp/>uint64_t<sp/>curtime,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">ORTP_PUBLIC<sp/>bool_t<sp/>ortp_extremum_record_max(<ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref><sp/>*obj,<sp/>uint64_t<sp/>curtime,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ortp_extremum_get_current(<ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ortp_extremum_get_previous(<ref refid="struct__OrtpExtremum" kindref="compound">OrtpExtremum</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="struct__OrtpKalmanRLS" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__OrtpKalmanRLS" kindref="compound">_OrtpKalmanRLS</ref>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unknown<sp/>parameters<sp/>to<sp/>estimate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m,<sp/>b;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gain<sp/>matrix,<sp/>must<sp/>not<sp/>be<sp/>modified<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P[2][2];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}<ref refid="struct__OrtpKalmanRLS" kindref="compound">OrtpKalmanRLS</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_kalman_rls_init(<ref refid="struct__OrtpKalmanRLS" kindref="compound">OrtpKalmanRLS</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_kalman_rls_record(<ref refid="struct__OrtpKalmanRLS" kindref="compound">OrtpKalmanRLS</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xmes,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ymes);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="struct__OrtpBwEstimator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__OrtpBwEstimator" kindref="compound">_OrtpBwEstimator</ref>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>one_minus_alpha;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inv_step;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>exp_constant;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>last_packet_recv;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<ref refid="struct__OrtpBwEstimator" kindref="compound">OrtpBwEstimator</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_bw_estimator_init(<ref refid="struct__OrtpBwEstimator" kindref="compound">OrtpBwEstimator</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_bw_estimator_packet_received<sp/>(<ref refid="struct__OrtpBwEstimator" kindref="compound">OrtpBwEstimator</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*recv_time);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ortp_bw_estimator_get_value(<ref refid="struct__OrtpBwEstimator" kindref="compound">OrtpBwEstimator</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/utils.h"/>
  </compounddef>
</doxygen>
