<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="str__utils_8h" kind="file" language="C++">
    <compoundname>str_utils.h</compoundname>
    <includes refid="port_8h" local="no">ortp/port.h</includes>
    <includedby refid="payloadtype_8c" local="yes">payloadtype.c</includedby>
    <includedby refid="port_8c" local="yes">port.c</includedby>
    <includedby refid="str__utils_8c" local="yes">str_utils.c</includedby>
    <includedby refid="event_8h" local="yes">event.h</includedby>
    <includedby refid="rtp_8h" local="no">rtp.h</includedby>
    <includedby refid="rtpsession_8h" local="no">rtpsession.h</includedby>
    <invincdepgraph>
      <node id="420">
        <label>telephonyevents.h</label>
        <link refid="telephonyevents_8h"/>
      </node>
      <node id="416">
        <label>str_utils.h</label>
        <link refid="str__utils_8h"/>
        <childnode refid="417" relation="include">
        </childnode>
      </node>
      <node id="418">
        <label>ortp.h</label>
        <link refid="ortp_8h"/>
      </node>
      <node id="417">
        <label>rtpsession.h</label>
        <link refid="rtpsession_8h"/>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
      </node>
      <node id="419">
        <label>sessionset.h</label>
        <link refid="sessionset_8h"/>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structortp__recv__addr" prot="public">ortp_recv_addr</innerclass>
    <innerclass refid="structortp__recv__addr__map" prot="public">ortp_recv_addr_map</innerclass>
    <innerclass refid="structmsgb" prot="public">msgb</innerclass>
    <innerclass refid="struct__queue" prot="public">_queue</innerclass>
    <innerclass refid="struct__msgb__allocator" prot="public">_msgb_allocator</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="str__utils_8h_1a3acffbd305ee72dcd4593c0d8af64a4f" prot="public" static="no">
        <name>MIN</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((a)&gt;(b)) ? (b) : (a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="31" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="str__utils_8h_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" prot="public" static="no">
        <name>MAX</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((a)&gt;(b)) ? (a) : (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="34" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="str__utils_8h_1a1530016aae3242bfa1e30cc6ed082de0" prot="public" static="no">
        <name>return_if_fail</name>
        <param><defname>expr</defname></param>
        <initializer>if (!(expr)) {printf(&quot;%s:%i- assertion&quot;#expr &quot;failed\n&quot;,__FILE__,__LINE__); return;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="37" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="str__utils_8h_1aa956afd182c3ea7cbd644e952f17fefd" prot="public" static="no">
        <name>return_val_if_fail</name>
        <param><defname>expr</defname></param>
        <param><defname>ret</defname></param>
        <initializer>if (!(expr)) {printf(&quot;%s:%i- assertion&quot; #expr &quot;failed\n&quot;,__FILE__,__LINE__); return (ret);}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="38" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="str__utils_8h_1a582d1a4ce3eae7bd2c4fb9dd4847b56d" prot="public" static="no">
        <name>FLUSHALL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="106" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="str__utils_8h_1a8ef0c655c2802ceca0ca98930ffadc47" prot="public" static="no">
        <name>BPRI_MED</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="115" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="str__utils_8h_1a66f32f97e878bade5649d17a4a0184da" prot="public" static="no">
        <name>qempty</name>
        <param><defname>q</defname></param>
        <initializer>(&amp;(q)-&gt;_q_stopper==(q)-&gt;_q_stopper.b_next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="150" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="str__utils_8h_1a680bd1f189ff22da0f0374e32021dec0" prot="public" static="no">
        <name>qfirst</name>
        <param><defname>q</defname></param>
        <initializer>((q)-&gt;_q_stopper.b_next!=&amp;(q)-&gt;_q_stopper ? (q)-&gt;_q_stopper.b_next : NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="151" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="str__utils_8h_1ab1e6ab4fc864c4e42d0a79e777f96f0a" prot="public" static="no">
        <name>qbegin</name>
        <param><defname>q</defname></param>
        <initializer>((q)-&gt;_q_stopper.b_next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="152" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="str__utils_8h_1ac09bb52dae5646551f74e9c4716b4ccc" prot="public" static="no">
        <name>qlast</name>
        <param><defname>q</defname></param>
        <initializer>((q)-&gt;_q_stopper.b_prev!=&amp;(q)-&gt;_q_stopper ? (q)-&gt;_q_stopper.b_prev : NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="153" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="str__utils_8h_1a458bb698dd991f1f1c0e7f02d3473c54" prot="public" static="no">
        <name>qend</name>
        <param><defname>q</defname></param>
        <param><defname>mp</defname></param>
        <initializer>((mp)==&amp;(q)-&gt;_q_stopper)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="154" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="str__utils_8h_1a4cb4d5cae665bb1bd497d10fbfe70917" prot="public" static="no">
        <name>qnext</name>
        <param><defname>q</defname></param>
        <param><defname>mp</defname></param>
        <initializer>((mp)-&gt;b_next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="155" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="str__utils_8h_1ac0fcff999a3227ed072ca12498540283" prot="public" static="no">
        <type>struct <ref refid="structortp__recv__addr" kindref="compound">ortp_recv_addr</ref></type>
        <definition>typedef struct ortp_recv_addr  ortp_recv_addr_t</definition>
        <argsstring></argsstring>
        <name>ortp_recv_addr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="str__utils_8h_1a5dfe3ed5a5f00caf115892523ca7af5e" prot="public" static="no">
        <type>struct <ref refid="structortp__recv__addr__map" kindref="compound">ortp_recv_addr_map</ref></type>
        <definition>typedef struct ortp_recv_addr_map  ortp_recv_addr_map_t</definition>
        <argsstring></argsstring>
        <name>ortp_recv_addr_map_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="str__utils_8h_1a22a9d654c8e59f19bd549c7d048b532f" prot="public" static="no">
        <type>struct <ref refid="structmsgb" kindref="compound">msgb</ref></type>
        <definition>typedef struct msgb  mblk_t</definition>
        <argsstring></argsstring>
        <name>mblk_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="str__utils_8h_1a85c42b9a80ac9f3057bc57335d9f92bc" prot="public" static="no">
        <type>struct <ref refid="structdatab" kindref="compound">datab</ref></type>
        <definition>typedef struct datab dblk_t</definition>
        <argsstring></argsstring>
        <name>dblk_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="90" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="str__utils_8h_1a0bf3b767d0bcefc315acf2d0777d2350" prot="public" static="no">
        <type>struct <ref refid="struct__queue" kindref="compound">_queue</ref></type>
        <definition>typedef struct _queue  queue_t</definition>
        <argsstring></argsstring>
        <name>queue_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="str__utils_8h_1a019d08d69f9b88e8e52130459be7ff90" prot="public" static="no">
        <type>struct <ref refid="struct__msgb__allocator" kindref="compound">_msgb_allocator</ref></type>
        <definition>typedef struct _msgb_allocator msgb_allocator_t</definition>
        <argsstring></argsstring>
        <name>msgb_allocator_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="159" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="str__utils_8h_1a19ae91ff5d78c69e2ef72bd6e814e27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dblk_ref</definition>
        <argsstring>(dblk_t *d)</argsstring>
        <name>dblk_ref</name>
        <param>
          <type><ref refid="structdatab" kindref="compound">dblk_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="87" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a90fda12ce0568b93dd38af01dde328a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dblk_unref</definition>
        <argsstring>(dblk_t *d)</argsstring>
        <name>dblk_unref</name>
        <param>
          <type><ref refid="structdatab" kindref="compound">dblk_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="88" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="70" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a670aeda8f805bd50d58388da44c49032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* dblk_base</definition>
        <argsstring>(dblk_t *db)</argsstring>
        <name>dblk_base</name>
        <param>
          <type><ref refid="structdatab" kindref="compound">dblk_t</ref> *</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="89" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1aeb099807c98c5c7280ca059b302f7c1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* dblk_lim</definition>
        <argsstring>(dblk_t *db)</argsstring>
        <name>dblk_lim</name>
        <param>
          <type><ref refid="structdatab" kindref="compound">dblk_t</ref> *</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="90" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1aec969a0db821f354ef3c363781e216a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dblk_ref_value</definition>
        <argsstring>(dblk_t *db)</argsstring>
        <name>dblk_ref_value</name>
        <param>
          <type><ref refid="structdatab" kindref="compound">dblk_t</ref> *</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="91" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1ac8e34a922a5352c02d2d4699936755bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qinit</definition>
        <argsstring>(queue_t *q)</argsstring>
        <name>qinit</name>
        <param>
          <type><ref refid="struct__queue" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="93" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1ae370371e73e982f54fdabcb54904072a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void putq</definition>
        <argsstring>(queue_t *q, mblk_t *m)</argsstring>
        <name>putq</name>
        <param>
          <type><ref refid="struct__queue" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="95" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="180" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a0fc879450470014574ca8a8ce4018657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* getq</definition>
        <argsstring>(queue_t *q)</argsstring>
        <name>getq</name>
        <param>
          <type><ref refid="struct__queue" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="97" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="189" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a63a5b131d2669fe357b711d1c32a90fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insq</definition>
        <argsstring>(queue_t *q, mblk_t *emp, mblk_t *mp)</argsstring>
        <name>insq</name>
        <param>
          <type><ref refid="struct__queue" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>emp</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>mp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="99" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="210" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a759f982a373794f8fe8effae6b917e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remq</definition>
        <argsstring>(queue_t *q, mblk_t *mp)</argsstring>
        <name>remq</name>
        <param>
          <type><ref refid="struct__queue" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>mp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="101" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="223" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1ae657d9064de3eff6c3e7bac9b777d56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* peekq</definition>
        <argsstring>(queue_t *q)</argsstring>
        <name>peekq</name>
        <param>
          <type><ref refid="struct__queue" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="103" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="202" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a8fa31f04f9bef1edad1360899e87cc57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void flushq</definition>
        <argsstring>(queue_t *q, int how)</argsstring>
        <name>flushq</name>
        <param>
          <type><ref refid="struct__queue" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>how</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="107" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="232" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a45753b3b81d1a889aff4588a343fc460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mblk_init</definition>
        <argsstring>(mblk_t *mp)</argsstring>
        <name>mblk_init</name>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>mp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="109" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a5b64d22a6bfed4752145850718cdb7cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mblk_meta_copy</definition>
        <argsstring>(const mblk_t *source, mblk_t *dest)</argsstring>
        <name>mblk_meta_copy</name>
        <param>
          <type>const <ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="111" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="40" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a78f427f0827e325660b671bf2b57ac6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* allocb</definition>
        <argsstring>(size_t size, int unused)</argsstring>
        <name>allocb</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="114" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="95" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a4823ab588225806930e05eec69a23103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* esballoc</definition>
        <argsstring>(uint8_t *buf, size_t size, int pri, void(*freefn)(void *))</argsstring>
        <name>esballoc</name>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pri</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>freefn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="118" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="109" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1ae9b4372c136cb09eac6befffc0e8d4a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeb</definition>
        <argsstring>(mblk_t *m)</argsstring>
        <name>freeb</name>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="121" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="129" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a61233be67fbdf56e0afc2faf206a5549" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freemsg</definition>
        <argsstring>(mblk_t *mp)</argsstring>
        <name>freemsg</name>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>mp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="125" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="138" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a5ed5be4a2bf2cbf5a43e48e6f67911a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* dupb</definition>
        <argsstring>(mblk_t *m)</argsstring>
        <name>dupb</name>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="128" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="150" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a39f09874033ae08d05cccda180bc75c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* dupmsg</definition>
        <argsstring>(mblk_t *m)</argsstring>
        <name>dupmsg</name>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="131" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="166" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1ab535e3694a8fb3c391c6f34b4b2c792c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t msgdsize</definition>
        <argsstring>(const mblk_t *mp)</argsstring>
        <name>msgdsize</name>
        <param>
          <type>const <ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>mp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="134" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="242" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a413d7a3e6f1e43c7eb5d3ac2d1afc5c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void msgpullup</definition>
        <argsstring>(mblk_t *mp, size_t len)</argsstring>
        <name>msgpullup</name>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>mp</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="137" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="252" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1aef402fc8a83911d38ac56dd14ab1985c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* copyb</definition>
        <argsstring>(const mblk_t *mp)</argsstring>
        <name>copyb</name>
        <param>
          <type>const <ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>mp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="140" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="284" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a0f18340cf7bac2c42afa33a275c14ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* copymsg</definition>
        <argsstring>(const mblk_t *mp)</argsstring>
        <name>copymsg</name>
        <param>
          <type>const <ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>mp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="143" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="295" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a45248e6a1c38b49b0abbe88a1ddd4172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* appendb</definition>
        <argsstring>(mblk_t *mp, const char *data, size_t size, bool_t pad)</argsstring>
        <name>appendb</name>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>mp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="145" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="308" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a60842cf95b521a7fc769ce15232b06ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void msgappend</definition>
        <argsstring>(mblk_t *mp, const char *data, size_t size, bool_t pad)</argsstring>
        <name>msgappend</name>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>mp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="146" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="329" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1aa2f66ddce21db82e0f63495f5831b70e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* concatb</definition>
        <argsstring>(mblk_t *mp, mblk_t *newm)</argsstring>
        <name>concatb</name>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>mp</declname>
        </param>
        <param>
          <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
          <declname>newm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="148" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="334" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a1e65b14a738632450905ece6b99f46a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void msgb_allocator_init</definition>
        <argsstring>(msgb_allocator_t *pa)</argsstring>
        <name>msgb_allocator_init</name>
        <param>
          <type><ref refid="struct__msgb__allocator" kindref="compound">msgb_allocator_t</ref> *</type>
          <declname>pa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="161" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="341" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a1336b3421e2a5e9cc6daa2c277f03a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmsgb" kindref="compound">mblk_t</ref> *</type>
        <definition>mblk_t* msgb_allocator_alloc</definition>
        <argsstring>(msgb_allocator_t *pa, size_t size)</argsstring>
        <name>msgb_allocator_alloc</name>
        <param>
          <type><ref refid="struct__msgb__allocator" kindref="compound">msgb_allocator_t</ref> *</type>
          <declname>pa</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="162" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="345" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1ae28c3dd581f3a6ebe59bb93b5d8f5d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void msgb_allocator_uninit</definition>
        <argsstring>(msgb_allocator_t *pa)</argsstring>
        <name>msgb_allocator_uninit</name>
        <param>
          <type><ref refid="struct__msgb__allocator" kindref="compound">msgb_allocator_t</ref> *</type>
          <declname>pa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="163" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="363" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="str__utils_8h_1a3c7d499bf91f7aa1dd278e0fe4256a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_recvaddr_to_sockaddr</definition>
        <argsstring>(ortp_recv_addr_t *recvaddr, struct sockaddr *addr, socklen_t *socklen)</argsstring>
        <name>ortp_recvaddr_to_sockaddr</name>
        <param>
          <type><ref refid="structortp__recv__addr" kindref="compound">ortp_recv_addr_t</ref> *</type>
          <declname>recvaddr</declname>
        </param>
        <param>
          <type>struct sockaddr *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>socklen_t *</type>
          <declname>socklen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h" line="165" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/str_utils.c" bodystart="367" bodyend="381"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>oRTP<sp/>library<sp/>is<sp/>an<sp/>RTP<sp/>(Realtime<sp/>Transport<sp/>Protocol<sp/>-<sp/>rfc3550)<sp/>implementation<sp/>with<sp/>additional<sp/>features.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2017<sp/>Belledonne<sp/>Communications<sp/>SARL</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STR_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STR_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ortp/port.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ORTP_TIMESTAMP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN(a,b)<sp/>(((a)&gt;(b))<sp/>?<sp/>(b)<sp/>:<sp/>(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX(a,b)<sp/>(((a)&gt;(b))<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>return_if_fail(expr)<sp/>if<sp/>(!(expr))<sp/>{printf(&quot;%s:%i-<sp/>assertion&quot;#expr<sp/>&quot;failed\n&quot;,__FILE__,__LINE__);<sp/>return;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>return_val_if_fail(expr,ret)<sp/>if<sp/>(!(expr))<sp/>{printf(&quot;%s:%i-<sp/>assertion&quot;<sp/>#expr<sp/>&quot;failed\n&quot;,__FILE__,__LINE__);<sp/>return<sp/>(ret);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structortp__recv__addr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structortp__recv__addr" kindref="compound">ortp_recv_addr</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>family;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">in_addr<sp/>ipi_addr;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">in6_addr<sp/>ipi6_addr;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>addr;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>port;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/><ref refid="structortp__recv__addr" kindref="compound">ortp_recv_addr_t</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structortp__recv__addr__map" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structortp__recv__addr__map" kindref="compound">ortp_recv_addr_map</ref><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_storage<sp/>ss;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structortp__recv__addr" kindref="compound">ortp_recv_addr_t</ref><sp/>recv_addr;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>ts;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}<sp/><ref refid="structortp__recv__addr__map" kindref="compound">ortp_recv_addr_map_t</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structmsgb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmsgb" kindref="compound">msgb</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmsgb" kindref="compound">msgb</ref><sp/>*b_prev;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmsgb" kindref="compound">msgb</ref><sp/>*b_next;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmsgb" kindref="compound">msgb</ref><sp/>*b_cont;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdatab" kindref="compound">datab</ref><sp/>*b_datap;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b_rptr;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b_wptr;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved2;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>timestamp;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structortp__recv__addr" kindref="compound">ortp_recv_addr_t</ref><sp/>recv_addr;<sp/></highlight><highlight class="comment">/*contains<sp/>the<sp/>destination<sp/>address<sp/>of<sp/>incoming<sp/>packets,<sp/>used<sp/>for<sp/>ICE<sp/>processing*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_storage<sp/>net_addr;<sp/></highlight><highlight class="comment">/*source<sp/>address<sp/>of<sp/>incoming<sp/>packet,<sp/>or<sp/>dest<sp/>address<sp/>of<sp/>outgoing<sp/>packet,<sp/>used<sp/>only<sp/>by<sp/>simulator<sp/>and<sp/>modifiers*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>net_addrlen;<sp/></highlight><highlight class="comment">/*source<sp/>(dest)<sp/>address<sp/>of<sp/>incoming<sp/>(outgoing)<sp/>packet<sp/>length<sp/>used<sp/>by<sp/>simulator<sp/>and<sp/>modifiers*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>ttl_or_hl;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdatab" kindref="compound">datab</ref><sp/>dblk_t;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="struct__queue" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__queue" kindref="compound">_queue</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>_q_stopper;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q_mcount;<sp/><sp/><sp/></highlight><highlight class="comment">/*number<sp/>of<sp/>packet<sp/>in<sp/>the<sp/>q<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/><ref refid="struct__queue" kindref="compound">queue_t</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dblk_ref(dblk_t<sp/>*d);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dblk_unref(dblk_t<sp/>*d);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>dblk_base(dblk_t<sp/>*db);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>dblk_lim(dblk_t<sp/>*db);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dblk_ref_value(dblk_t<sp/>*db);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>qinit(<ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>*q);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>putq(<ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>*q,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*m);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*<sp/>getq(<ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>*q);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insq(<ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>*q,<ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*emp,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*mp);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>remq(<ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>*q,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*mp);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*<sp/>peekq(<ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>*q);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>remove<sp/>and<sp/>free<sp/>all<sp/>messages<sp/>in<sp/>the<sp/>q<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLUSHALL<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>flushq(<ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>*q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mblk_init(<ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*mp);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mblk_meta_copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*source,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*dest);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>allocates<sp/>a<sp/>mblk_t,<sp/>that<sp/>points<sp/>to<sp/>a<sp/>datab_t,<sp/>that<sp/>points<sp/>to<sp/>a<sp/>buffer<sp/>of<sp/>size<sp/>size.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*allocb(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unused);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BPRI_MED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>allocates<sp/>a<sp/>mblk_t,<sp/>that<sp/>points<sp/>to<sp/>a<sp/>datab_t,<sp/>that<sp/>points<sp/>to<sp/>buf;<sp/>buf<sp/>will<sp/>be<sp/>freed<sp/>using<sp/>freefn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*esballoc(uint8_t<sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pri,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*freefn)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>frees<sp/>a<sp/>mblk_t,<sp/>and<sp/>if<sp/>the<sp/>datab<sp/>ref_count<sp/>is<sp/>0,<sp/>frees<sp/>it<sp/>and<sp/>the<sp/>buffer<sp/>too<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeb(<ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*m);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>frees<sp/>recursively<sp/>(follow<sp/>b_cont)<sp/>a<sp/>mblk_t,<sp/>and<sp/>if<sp/>the<sp/>datab</highlight></codeline>
<codeline lineno="124"><highlight class="comment">ref_count<sp/>is<sp/>0,<sp/>frees<sp/>it<sp/>and<sp/>the<sp/>buffer<sp/>too<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freemsg(<ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*mp);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>duplicates<sp/>a<sp/>mblk_t<sp/>,<sp/>buffer<sp/>is<sp/>not<sp/>duplicated*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*dupb(<ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*m);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>duplicates<sp/>a<sp/>complex<sp/>mblk_t,<sp/>buffer<sp/>is<sp/>not<sp/>duplicated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>*dupmsg(<ref refid="structmsgb" kindref="compound">mblk_t</ref>*<sp/>m);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returns<sp/>the<sp/>size<sp/>of<sp/>data<sp/>of<sp/>a<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>msgdsize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*mp);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>concatenates<sp/>all<sp/>fragment<sp/>of<sp/>a<sp/>complex<sp/>message*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>msgpullup(<ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*mp,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>duplicates<sp/>a<sp/>single<sp/>message,<sp/>but<sp/>with<sp/>buffer<sp/>included<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*copyb(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*mp);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>duplicates<sp/>a<sp/>complex<sp/>message<sp/>with<sp/>buffer<sp/>included<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*copymsg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*mp);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*<sp/>appendb(<ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*mp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>bool_t<sp/>pad);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>msgappend(<ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*mp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>bool_t<sp/>pad);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*concatb(<ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*mp,<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*newm);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>qempty(q)<sp/>(&amp;(q)-&gt;_q_stopper==(q)-&gt;_q_stopper.b_next)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>qfirst(q)<sp/>((q)-&gt;_q_stopper.b_next!=&amp;(q)-&gt;_q_stopper<sp/>?<sp/>(q)-&gt;_q_stopper.b_next<sp/>:<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>qbegin(q)<sp/>((q)-&gt;_q_stopper.b_next)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>qlast(q)<sp/>((q)-&gt;_q_stopper.b_prev!=&amp;(q)-&gt;_q_stopper<sp/>?<sp/>(q)-&gt;_q_stopper.b_prev<sp/>:<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>qend(q,mp)<sp/><sp/><sp/><sp/><sp/><sp/>((mp)==&amp;(q)-&gt;_q_stopper)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>qnext(q,mp)<sp/>((mp)-&gt;b_next)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="struct__msgb__allocator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__msgb__allocator" kindref="compound">_msgb_allocator</ref>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>q;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}<ref refid="struct__msgb__allocator" kindref="compound">msgb_allocator_t</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>msgb_allocator_init(<ref refid="struct__msgb__allocator" kindref="compound">msgb_allocator_t</ref><sp/>*pa);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">ORTP_PUBLIC<sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*msgb_allocator_alloc(<ref refid="struct__msgb__allocator" kindref="compound">msgb_allocator_t</ref><sp/>*pa,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>msgb_allocator_uninit(<ref refid="struct__msgb__allocator" kindref="compound">msgb_allocator_t</ref><sp/>*pa);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">ORTP_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_recvaddr_to_sockaddr(<ref refid="structortp__recv__addr" kindref="compound">ortp_recv_addr_t</ref><sp/>*recvaddr,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*addr,<sp/>socklen_t<sp/>*socklen);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/include/ortp/str_utils.h"/>
  </compounddef>
</doxygen>
