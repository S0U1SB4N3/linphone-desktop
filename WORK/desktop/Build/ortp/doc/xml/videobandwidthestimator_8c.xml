<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="videobandwidthestimator_8c" kind="file" language="C++">
    <compoundname>videobandwidthestimator.c</compoundname>
    <includes refid="videobandwidthestimator_8h" local="yes">videobandwidthestimator.h</includes>
    <includes refid="logging_8h" local="no">ortp/logging.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="rtpsession_8h" local="no">ortp/rtpsession.h</includes>
    <incdepgraph>
      <node id="470">
        <label>ortp/payloadtype.h</label>
        <link refid="payloadtype_8h"/>
      </node>
      <node id="471">
        <label>ortp/rtpprofile.h</label>
        <link refid="rtpprofile_8h"/>
      </node>
      <node id="468">
        <label>ortp/rtpsession.h</label>
        <link refid="rtpsession_8h"/>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="472">
        <label>ortp/sessionset.h</label>
        <link refid="sessionset_8h"/>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
      </node>
      <node id="474">
        <label>sys/types.h</label>
      </node>
      <node id="475">
        <label>unistd.h</label>
      </node>
      <node id="466">
        <label>ortp/logging.h</label>
        <link refid="logging_8h"/>
      </node>
      <node id="467">
        <label>math.h</label>
      </node>
      <node id="469">
        <label>bctoolbox/list.h</label>
      </node>
      <node id="473">
        <label>sys/time.h</label>
      </node>
      <node id="465">
        <label>videobandwidthestimator.c</label>
        <link refid="videobandwidthestimator_8c"/>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="videobandwidthestimator_8c_1ac91085dc01d98460831293519bbb448e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref> *</type>
        <definition>OrtpVideoBandwidthEstimator* ortp_video_bandwidth_estimator_new</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>ortp_video_bandwidth_estimator_new</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="25" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="25" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="videobandwidthestimator_8c_1a56cdeebfa3cbd8471fc9fc1828080a35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_video_bandwidth_estimator_destroy</definition>
        <argsstring>(OrtpVideoBandwidthEstimator *vbe)</argsstring>
        <name>ortp_video_bandwidth_estimator_destroy</name>
        <param>
          <type><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref> *</type>
          <declname>vbe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="37" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="videobandwidthestimator_8c_1aaaf82748e6d2bddf316c3a63789d7874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_video_bandwidth_estimator_reset</definition>
        <argsstring>(OrtpVideoBandwidthEstimator *vbe)</argsstring>
        <name>ortp_video_bandwidth_estimator_reset</name>
        <param>
          <type><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref> *</type>
          <declname>vbe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="42" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="42" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="videobandwidthestimator_8c_1a78a2425cf3bad89c111b78d722666c80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_video_bandwidth_estimator_set_packets_count_min</definition>
        <argsstring>(OrtpVideoBandwidthEstimator *vbe, unsigned int value)</argsstring>
        <name>ortp_video_bandwidth_estimator_set_packets_count_min</name>
        <param>
          <type><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref> *</type>
          <declname>vbe</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the minimum number of packets with the same sent timestamp to be processed continuously before being used. Default value is 7. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="49" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="videobandwidthestimator_8c_1a4ec4e22637c938c29806cd38c52d061a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_video_bandwidth_estimator_set_history_max_size</definition>
        <argsstring>(OrtpVideoBandwidthEstimator *vbe, unsigned int value)</argsstring>
        <name>ortp_video_bandwidth_estimator_set_history_max_size</name>
        <param>
          <type><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref> *</type>
          <declname>vbe</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the number of packets needed to compute the available video bandwidth. Default value is 30. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="53" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="videobandwidthestimator_8c_1a36649ee59b23ee9e31674561bd67b073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_video_bandwidth_estimator_set_trust</definition>
        <argsstring>(OrtpVideoBandwidthEstimator *vbe, unsigned int value)</argsstring>
        <name>ortp_video_bandwidth_estimator_set_trust</name>
        <param>
          <type><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref> *</type>
          <declname>vbe</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the percentage for which the chosen bandwidth value in all available will be inferior. Example: for 100 packets with 90% trust, bandwidth value will be the 90th after sorted. Default value is 90. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="57" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="videobandwidthestimator_8c_1ad7a5f70f5635584a57818ddc630369ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ortp_video_bandwidth_estimator_get_packets_count_min</definition>
        <argsstring>(OrtpVideoBandwidthEstimator *vbe)</argsstring>
        <name>ortp_video_bandwidth_estimator_get_packets_count_min</name>
        <param>
          <type><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref> *</type>
          <declname>vbe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the minimum number of packets with the same sent timestamp to be processed continuously before being used. Default value is 7. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="61" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="videobandwidthestimator_8c_1ad059fa5dd444fe24cba1127efe7cb199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ortp_video_bandwidth_estimator_get_history_max_size</definition>
        <argsstring>(OrtpVideoBandwidthEstimator *vbe)</argsstring>
        <name>ortp_video_bandwidth_estimator_get_history_max_size</name>
        <param>
          <type><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref> *</type>
          <declname>vbe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the number of packets needed to compute the available video bandwidth. Default value is 30. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="65" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="videobandwidthestimator_8c_1ad266fc2c34fa3cd0729eb5b0d83ec20b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ortp_video_bandwidth_estimator_get_trust</definition>
        <argsstring>(OrtpVideoBandwidthEstimator *vbe)</argsstring>
        <name>ortp_video_bandwidth_estimator_get_trust</name>
        <param>
          <type><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref> *</type>
          <declname>vbe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the percentage for which the chosen bandwidth value in all available will be inferior. Example: for 100 packets with 90% trust, bandwidth value will be the 90th after sorted. Default value is 90. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="69" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="videobandwidthestimator_8c_1a5b58f49a3bcc5d9bd6cecd32395dddad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int compare_float</definition>
        <argsstring>(const float *v1, const float *v2)</argsstring>
        <name>compare_float</name>
        <param>
          <type>const float *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="73" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="videobandwidthestimator_8c_1a89bf3ec385736d73c0a8e91036668069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ortp_video_bandwidth_estimator_get_estimated_available_bandwidth</definition>
        <argsstring>(OrtpVideoBandwidthEstimator *vbe)</argsstring>
        <name>ortp_video_bandwidth_estimator_get_estimated_available_bandwidth</name>
        <param>
          <type><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref> *</type>
          <declname>vbe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="79" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="79" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="videobandwidthestimator_8c_1aad8c18eec5b2cfc5905486e595875fe5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compute_bitrate_add_to_list_and_remove_oldest_value</definition>
        <argsstring>(OrtpVideoBandwidthEstimator *vbe, OrtpVideoBandwidthEstimatorPacket *packet)</argsstring>
        <name>compute_bitrate_add_to_list_and_remove_oldest_value</name>
        <param>
          <type><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref> *</type>
          <declname>vbe</declname>
        </param>
        <param>
          <type><ref refid="struct__OrtpVideoBandwidthEstimatorPacket" kindref="compound">OrtpVideoBandwidthEstimatorPacket</ref> *</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="93" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="93" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="videobandwidthestimator_8c_1a50fa4a228109e045efa97888fb92c614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ortp_video_bandwidth_estimator_process_packet</definition>
        <argsstring>(OrtpVideoBandwidthEstimator *vbe, uint32_t sent_timestamp, const struct timeval *recv_timestamp, int msgsize, bool_t is_last)</argsstring>
        <name>ortp_video_bandwidth_estimator_process_packet</name>
        <param>
          <type><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref> *</type>
          <declname>vbe</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sent_timestamp</declname>
        </param>
        <param>
          <type>const struct timeval *</type>
          <declname>recv_timestamp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>msgsize</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>is_last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" line="116" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c" bodystart="116" bodyend="153"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>oRTP<sp/>library<sp/>is<sp/>an<sp/>RTP<sp/>(Realtime<sp/>Transport<sp/>Protocol<sp/>-<sp/>rfc3550)<sp/>implementation<sp/>with<sp/>additional<sp/>features.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2017<sp/>Belledonne<sp/>Communications<sp/>SARL</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;videobandwidthestimator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="logging_8h" kindref="compound">ortp/logging.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="rtpsession_8h" kindref="compound">ortp/rtpsession.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*<sp/>ortp_video_bandwidth_estimator_new(<ref refid="struct__RtpSession" kindref="compound">RtpSession</ref><sp/>*session)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*vbe<sp/>=<sp/>(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref>*)ortp_malloc0(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref>));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbe-&gt;session<sp/>=<sp/>session;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbe-&gt;packet_count_min<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbe-&gt;packets_size_max<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbe-&gt;trust_percentage<sp/>=<sp/>90;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>vbe-&gt;nb_packets_computed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>vbe-&gt;packets<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>vbe-&gt;last_packet<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vbe;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_video_bandwidth_estimator_destroy(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*vbe){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>ortp_video_bandwidth_estimator_reset(vbe);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ortp_free(vbe);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_video_bandwidth_estimator_reset(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*vbe)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_free(vbe-&gt;last_packet);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>vbe-&gt;last_packet<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>vbe-&gt;nb_packets_computed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbe-&gt;packets<sp/>=<sp/>bctbx_list_free_with_data(vbe-&gt;packets,<sp/>ortp_free);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_video_bandwidth_estimator_set_packets_count_min(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*vbe,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>vbe-&gt;packet_count_min<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_video_bandwidth_estimator_set_history_max_size(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*vbe,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>vbe-&gt;packets_size_max<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_video_bandwidth_estimator_set_trust(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*vbe,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>vbe-&gt;trust_percentage<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ortp_video_bandwidth_estimator_get_packets_count_min(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*vbe)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vbe-&gt;packet_count_min;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ortp_video_bandwidth_estimator_get_history_max_size(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*vbe)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vbe-&gt;packets_size_max;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ortp_video_bandwidth_estimator_get_trust(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*vbe)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vbe-&gt;trust_percentage;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compare_float(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*v2)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*v1<sp/>==<sp/>*v2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*v1<sp/>&lt;<sp/>*v2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ortp_video_bandwidth_estimator_get_estimated_available_bandwidth(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*vbe)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>bctbx_list_t<sp/>*bitrate_sorted<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>bctbx_list_t<sp/>*elem;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>(int)(vbe-&gt;trust_percentage<sp/>*<sp/>vbe-&gt;packets_size_max<sp/>/<sp/>100);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(elem<sp/>=<sp/>vbe-&gt;packets;<sp/>elem<sp/>!=<sp/>NULL;<sp/>elem<sp/>=<sp/>bctbx_list_next(elem))<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpVideoBandwidthEstimatorPacket" kindref="compound">OrtpVideoBandwidthEstimatorPacket</ref><sp/>*packet<sp/>=<sp/>(<ref refid="struct__OrtpVideoBandwidthEstimatorPacket" kindref="compound">OrtpVideoBandwidthEstimatorPacket</ref><sp/>*)bctbx_list_get_data(elem);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitrate_sorted<sp/>=<sp/>bctbx_list_insert_sorted(bitrate_sorted,<sp/>&amp;packet-&gt;bitrate,<sp/>(bctbx_compare_func)compare_float);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)bctbx_list_nth_data(bitrate_sorted,<sp/>index);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>bctbx_list_free(bitrate_sorted);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*result;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>compute_bitrate_add_to_list_and_remove_oldest_value(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*vbe,<sp/><ref refid="struct__OrtpVideoBandwidthEstimatorPacket" kindref="compound">OrtpVideoBandwidthEstimatorPacket</ref><sp/>*packet)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>difftime<sp/>=<sp/>(float)(packet-&gt;recv_last_timestamp.tv_sec<sp/>-<sp/>packet-&gt;recv_first_timestamp.tv_sec)<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>1e-6f*(packet-&gt;recv_last_timestamp.tv_usec<sp/>-<sp/>packet-&gt;recv_first_timestamp.tv_usec);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packet-&gt;bitrate<sp/>=<sp/>(packet-&gt;bytes<sp/>*<sp/>8<sp/>/<sp/>difftime);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_debug(</highlight><highlight class="stringliteral">&quot;[VBE]<sp/>Bitrate<sp/>is<sp/>%f<sp/>kbits/s<sp/>computed<sp/>using<sp/>%f<sp/>timedif<sp/>and<sp/>%u<sp/>size&quot;</highlight><highlight class="normal">,<sp/>packet-&gt;bitrate<sp/>/<sp/>1000,<sp/>difftime,<sp/>packet-&gt;bytes);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>vbe-&gt;nb_packets_computed<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbe-&gt;packets<sp/>=<sp/>bctbx_list_prepend(vbe-&gt;packets,<sp/>packet);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bctbx_list_size(vbe-&gt;packets)<sp/>&gt;<sp/>vbe-&gt;packets_size_max)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*old_data<sp/>=<sp/>bctbx_list_nth_data(vbe-&gt;packets,<sp/>vbe-&gt;packets_size_max);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbe-&gt;packets<sp/>=<sp/>bctbx_list_remove(vbe-&gt;packets,<sp/>old_data);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vbe-&gt;nb_packets_computed<sp/>%<sp/>vbe-&gt;packets_size_max<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmsgb" kindref="compound">OrtpEvent</ref><sp/>*ev<sp/>=<sp/>ortp_event_new(ORTP_EVENT_NEW_VIDEO_BANDWIDTH_ESTIMATION_AVAILABLE);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpEventData" kindref="compound">OrtpEventData</ref><sp/>*ed<sp/>=<sp/>ortp_event_get_data(ev);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed-&gt;info.video_bandwidth_available<sp/>=<sp/>ortp_video_bandwidth_estimator_get_estimated_available_bandwidth(vbe);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_debug(</highlight><highlight class="stringliteral">&quot;[VBE]<sp/>Dispatching<sp/>event<sp/>ORTP_EVENT_NEW_VIDEO_BANDWIDTH_ESTIMATION_AVAILABLE<sp/>with<sp/>value<sp/>%f<sp/>kbits/s&quot;</highlight><highlight class="normal">,<sp/>ed-&gt;info.video_bandwidth_available<sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtp_session_dispatch_event(vbe-&gt;session,<sp/>ev);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ortp_video_bandwidth_estimator_process_packet(<ref refid="struct__OrtpVideoBandwidthEstimator" kindref="compound">OrtpVideoBandwidthEstimator</ref><sp/>*vbe,<sp/>uint32_t<sp/>sent_timestamp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*recv_timestamp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgsize,<sp/>bool_t<sp/>is_last)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpVideoBandwidthEstimatorPacket" kindref="compound">OrtpVideoBandwidthEstimatorPacket</ref><sp/>*last_packet<sp/>=<sp/>vbe-&gt;last_packet;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpVideoBandwidthEstimatorPacket" kindref="compound">OrtpVideoBandwidthEstimatorPacket</ref><sp/>*current_packet<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_packet)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_packet-&gt;sent_timestamp<sp/>==<sp/>sent_timestamp)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_packet<sp/>=<sp/>last_packet;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_packet-&gt;count<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_packet-&gt;bytes<sp/>+=<sp/>msgsize;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_packet-&gt;recv_last_timestamp.tv_sec<sp/>=<sp/>recv_timestamp-&gt;tv_sec;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_packet-&gt;recv_last_timestamp.tv_usec<sp/>=<sp/>recv_timestamp-&gt;tv_usec;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_last<sp/>&amp;&amp;<sp/>current_packet-&gt;count<sp/>&gt;=<sp/>vbe-&gt;packet_count_min)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_bitrate_add_to_list_and_remove_oldest_value(vbe,<sp/>current_packet);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbe-&gt;last_packet<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>happen<sp/>even<sp/>if<sp/>it&apos;s<sp/>probability<sp/>is<sp/>quite<sp/>low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_packet-&gt;count<sp/>&gt;=<sp/>vbe-&gt;packet_count_min)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_warning(</highlight><highlight class="stringliteral">&quot;[VBE]<sp/>Last<sp/>packet<sp/>not<sp/>complete<sp/>but<sp/>enough<sp/>packet<sp/>received<sp/>(%u),<sp/>add<sp/>to<sp/>packets<sp/>list&quot;</highlight><highlight class="normal">,<sp/>last_packet-&gt;count);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_bitrate_add_to_list_and_remove_oldest_value(vbe,<sp/>last_packet);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_free(vbe-&gt;last_packet);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbe-&gt;last_packet<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!current_packet)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_packet<sp/>=<sp/>(<ref refid="struct__OrtpVideoBandwidthEstimatorPacket" kindref="compound">OrtpVideoBandwidthEstimatorPacket</ref>*)ortp_malloc0(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__OrtpVideoBandwidthEstimatorPacket" kindref="compound">OrtpVideoBandwidthEstimatorPacket</ref>));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_packet-&gt;count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_packet-&gt;bytes<sp/>=<sp/>msgsize;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_packet-&gt;sent_timestamp<sp/>=<sp/>sent_timestamp;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_packet-&gt;recv_first_timestamp.tv_sec<sp/>=<sp/>recv_timestamp-&gt;tv_sec;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_packet-&gt;recv_first_timestamp.tv_usec<sp/>=<sp/>recv_timestamp-&gt;tv_usec;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbe-&gt;last_packet<sp/>=<sp/>current_packet;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/videobandwidthestimator.c"/>
  </compounddef>
</doxygen>
