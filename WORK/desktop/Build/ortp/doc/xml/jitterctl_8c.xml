<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="jitterctl_8c" kind="file" language="C++">
    <compoundname>jitterctl.c</compoundname>
    <includes refid="rtpsession_8h" local="yes">ortp/rtpsession.h</includes>
    <includes refid="payloadtype_8h" local="yes">ortp/payloadtype.h</includes>
    <includes refid="ortp_8h" local="yes">ortp/ortp.h</includes>
    <includes refid="src_2utils_8h" local="yes">utils.h</includes>
    <includes refid="rtpsession__priv_8h" local="yes">rtpsession_priv.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="jitterctl_8h" local="yes">jitterctl.h</includes>
    <incdepgraph>
      <node id="75">
        <label>ortp/payloadtype.h</label>
        <link refid="payloadtype_8h"/>
      </node>
      <node id="76">
        <label>ortp/rtpprofile.h</label>
        <link refid="rtpprofile_8h"/>
      </node>
      <node id="81">
        <label>ortp/ortp.h</label>
        <link refid="ortp_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>ortp/rtpsession.h</label>
        <link refid="rtpsession_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>ortp/sessionset.h</label>
        <link refid="sessionset_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>sys/types.h</label>
      </node>
      <node id="80">
        <label>unistd.h</label>
      </node>
      <node id="82">
        <label>ortp/logging.h</label>
        <link refid="logging_8h"/>
      </node>
      <node id="83">
        <label>math.h</label>
      </node>
      <node id="74">
        <label>bctoolbox/list.h</label>
      </node>
      <node id="78">
        <label>sys/time.h</label>
      </node>
      <node id="72">
        <label>jitterctl.c</label>
        <link refid="jitterctl_8c"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="jitterctl_8c_1aeca75a0323bdbd58dd56c0d88c02e0d3" prot="public" static="no">
        <name>JC_BETA</name>
        <initializer>.01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="34" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jitterctl_8c_1abd67ce4accc7b29f2be0d5ce8f08af1f" prot="public" static="no">
        <name>JC_GAMMA</name>
        <initializer>(JC_BETA)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="35" column="9" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jitterctl_8c_1ad894171e8e3ea3439e58a34840b4bc2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_init</definition>
        <argsstring>(JitterControl *ctl, PayloadType *payload)</argsstring>
        <name>jitter_control_init</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type><ref refid="struct__OrtpPayloadType" kindref="compound">PayloadType</ref> *</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="39" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="39" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a182eff0b6b99969acabc02e8e7061ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_enable_adaptive</definition>
        <argsstring>(JitterControl *ctl, bool_t val)</argsstring>
        <name>jitter_control_enable_adaptive</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="58" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1ac7cedf0ca397e8dce8fec56957ac135f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_set_payload</definition>
        <argsstring>(JitterControl *ctl, PayloadType *pt)</argsstring>
        <name>jitter_control_set_payload</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type><ref refid="struct__OrtpPayloadType" kindref="compound">PayloadType</ref> *</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="62" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="62" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a016cc20a25a65aa79ae7daddbc8e1da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_dump_stats</definition>
        <argsstring>(JitterControl *ctl)</argsstring>
        <name>jitter_control_dump_stats</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="72" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a6daec9a9429b1f37fc6936894c1dd556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_update_corrective_slide</definition>
        <argsstring>(JitterControl *ctl)</argsstring>
        <name>jitter_control_update_corrective_slide</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="79" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="79" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a720e6485be865ec0984ce087f71fcf2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_update_size</definition>
        <argsstring>(JitterControl *ctl, queue_t *q)</argsstring>
        <name>jitter_control_update_size</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type><ref refid="struct__queue" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="92" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="92" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a50e88a74fcb7836f0276f0b683b0a3d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float jitter_control_compute_mean_size</definition>
        <argsstring>(JitterControl *ctl)</argsstring>
        <name>jitter_control_compute_mean_size</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="103" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="103" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a252921dd3dc9a6cbc078ab1ef74125b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_init_jitter_buffer</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_init_jitter_buffer</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="114" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="114" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a3504171811ed93af8630749aa4a1b881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_jitter_compensation</definition>
        <argsstring>(RtpSession *session, int milisec)</argsstring>
        <name>rtp_session_set_jitter_compensation</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>milisec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>a RtpSession </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>milisec</parametername>
</parameternamelist>
<parameterdescription>
<para>the time interval in milisec to be jitter compensed.</para></parameterdescription>
</parameteritem>
</parameterlist>
Sets the time interval for which packet are buffered instead of being delivered to the application. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="131" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="131" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a0eee0ea3d4a44e68d1aef90b4b9a35be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_enable_adaptive_jitter_compensation</definition>
        <argsstring>(RtpSession *session, bool_t val)</argsstring>
        <name>rtp_session_enable_adaptive_jitter_compensation</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="137" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1ad27be6013ce94656180a58963800230c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t rtp_session_adaptive_jitter_compensation_enabled</definition>
        <argsstring>(RtpSession *session)</argsstring>
        <name>rtp_session_adaptive_jitter_compensation_enabled</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="141" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a53f1d5afe6db2314411155f1d677ab22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_enable_jitter_buffer</definition>
        <argsstring>(RtpSession *session, bool_t enabled)</argsstring>
        <name>rtp_session_enable_jitter_buffer</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="145" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a737717d728c4375643257bbe2aee3f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t rtp_session_jitter_buffer_enabled</definition>
        <argsstring>(const RtpSession *session)</argsstring>
        <name>rtp_session_jitter_buffer_enabled</name>
        <param>
          <type>const <ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="150" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1ac14fd747e1168852e98aa99f028157c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_set_jitter_buffer_params</definition>
        <argsstring>(RtpSession *session, const JBParameters *par)</argsstring>
        <name>rtp_session_set_jitter_buffer_params</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="rtpsession_8h_1a045ce176ebe9323b1e7574e35c5fc777" kindref="member">JBParameters</ref> *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="154" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a9841bac05956a611de77d3cf051e54fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtp_session_get_jitter_buffer_params</definition>
        <argsstring>(RtpSession *session, JBParameters *par)</argsstring>
        <name>rtp_session_get_jitter_buffer_params</name>
        <param>
          <type><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="rtpsession_8h_1a045ce176ebe9323b1e7574e35c5fc777" kindref="member">JBParameters</ref> *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="160" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1ab0a96f0d9704bae7953be2115808e00e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_new_packet</definition>
        <argsstring>(JitterControl *ctl, uint32_t packet_ts, uint32_t cur_str_ts)</argsstring>
        <name>jitter_control_new_packet</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>packet_ts</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cur_str_ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="173" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="173" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a0d47f9b4d48f24d41486f919fa8b3147" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void jitter_control_update_interarrival_jitter</definition>
        <argsstring>(JitterControl *ctl, int32_t diff)</argsstring>
        <name>jitter_control_update_interarrival_jitter</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="188" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="188" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a5314adc47148f84ea7ba030a441f9f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_new_packet_basic</definition>
        <argsstring>(JitterControl *ctl, uint32_t packet_ts, uint32_t cur_str_ts)</argsstring>
        <name>jitter_control_new_packet_basic</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>packet_ts</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cur_str_ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="196" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="196" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a67e937e84c2a08c2c22334ab81bb8428" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>static bool_t time_for_log</definition>
        <argsstring>(JitterControl *ctl, uint32_t cur_str_ts)</argsstring>
        <name>time_for_log</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cur_str_ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="224" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="224" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1af6b5c6634c2a0202142d915c65679367" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t jitter_control_local_ts_to_remote_ts_rls</definition>
        <argsstring>(JitterControl *ctl, uint32_t local_ts)</argsstring>
        <name>jitter_control_local_ts_to_remote_ts_rls</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>local_ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="233" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1af726e52cbd7e8dec6c06e44c23d8865c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jitter_control_new_packet_rls</definition>
        <argsstring>(JitterControl *ctl, uint32_t packet_ts, uint32_t cur_str_ts)</argsstring>
        <name>jitter_control_new_packet_rls</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>packet_ts</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cur_str_ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="238" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="238" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="jitterctl_8c_1a509fdd4214fb821f3eac9784326be503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t jitter_control_get_compensated_timestamp</definition>
        <argsstring>(JitterControl *obj, uint32_t user_ts)</argsstring>
        <name>jitter_control_get_compensated_timestamp</name>
        <param>
          <type><ref refid="struct__JitterControl" kindref="compound">JitterControl</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>user_ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" line="329" column="1" bodyfile="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c" bodystart="329" bodyend="343"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>oRTP<sp/>library<sp/>is<sp/>an<sp/>RTP<sp/>(Realtime<sp/>Transport<sp/>Protocol<sp/>-<sp/>rfc3550)<sp/>implementation<sp/>with<sp/>additional<sp/>features.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2017<sp/>Belledonne<sp/>Communications<sp/>SARL</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitterctl.c</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>Mon<sp/>Nov<sp/><sp/>8<sp/>11:53:21<sp/>2004</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/><sp/>2004<sp/><sp/>Simon<sp/>MORLAT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>Email<sp/>simon.morlat@linphone.org</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rtpsession_8h" kindref="compound">ortp/rtpsession.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="payloadtype_8h" kindref="compound">ortp/payloadtype.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ortp_8h" kindref="compound">ortp/ortp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rtpsession_priv.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JC_BETA<sp/>.01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JC_GAMMA<sp/>(JC_BETA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jitterctl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_init(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/><ref refid="struct__OrtpPayloadType" kindref="compound">PayloadType</ref><sp/>*payload){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;count=0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;clock_offset_ts=0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;prev_clock_offset_ts=0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;jitter=0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;inter_jitter=0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;cum_jitter_buffer_count=0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;cum_jitter_buffer_size=0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;corrective_slide=0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;clock_rate=8000;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;adapt_refresh_prev_ts=0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(payload!=NULL){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitter_control_set_payload(ctl,payload);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_enable_adaptive(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/>bool_t<sp/>val){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;params.adaptive=val;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_set_payload(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/><ref refid="struct__OrtpPayloadType" kindref="compound">PayloadType</ref><sp/>*pt){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;jitt_comp_ts<sp/>=</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)<sp/>(((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>ctl-&gt;params.nom_size<sp/>/<sp/>1000.0)<sp/>*<sp/>(pt-&gt;<ref refid="struct__OrtpPayloadType_1a020ebbacab34872cfdffc7a5cddf6aa8" kindref="member">clock_rate</ref>));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*make<sp/>correction<sp/>by<sp/>not<sp/>less<sp/>than<sp/>10ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;corrective_step=(int)<sp/>(0.01<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)pt-&gt;<ref refid="struct__OrtpPayloadType_1a020ebbacab34872cfdffc7a5cddf6aa8" kindref="member">clock_rate</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;adapt_jitt_comp_ts=ctl-&gt;jitt_comp_ts;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;clock_rate=pt-&gt;<ref refid="struct__OrtpPayloadType_1a020ebbacab34872cfdffc7a5cddf6aa8" kindref="member">clock_rate</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_dump_stats(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_message(</highlight><highlight class="stringliteral">&quot;JitterControl:\n\tslide=%g,jitter=%g,adapt_jitt_comp_ts=%i,corrective_slide=%i,<sp/>count=%i&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)ctl-&gt;clock_offset_ts,ctl-&gt;jitter,<sp/>ctl-&gt;adapt_jitt_comp_ts,<sp/>ctl-&gt;corrective_slide,ctl-&gt;count);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*the<sp/>goal<sp/>of<sp/>this<sp/>method<sp/>is<sp/>to<sp/>compute<sp/>&quot;corrective_slide&quot;:<sp/>a<sp/>timestamp<sp/>unit&apos;d<sp/>value<sp/>to<sp/>be<sp/>added</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>to<sp/>recv<sp/>timestamp<sp/>to<sp/>make<sp/>them<sp/>reflect<sp/>the<sp/>instant<sp/>they<sp/>are<sp/>delivered<sp/>by<sp/>the<sp/>jitter<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_update_corrective_slide(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=(int)(ctl-&gt;clock_offset_ts-ctl-&gt;prev_clock_offset_ts);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp&gt;ctl-&gt;corrective_step)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;corrective_slide+=ctl-&gt;corrective_step;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;prev_clock_offset_ts=ctl-&gt;clock_offset_ts+ctl-&gt;corrective_step;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp&lt;-ctl-&gt;corrective_step)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;corrective_slide-=ctl-&gt;corrective_step;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;prev_clock_offset_ts=ctl-&gt;clock_offset_ts-ctl-&gt;corrective_step;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_update_size(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/><ref refid="struct__queue" kindref="compound">queue_t</ref><sp/>*q){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*newest=qlast(q);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmsgb" kindref="compound">mblk_t</ref><sp/>*oldest=qbegin(q);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>newest_ts,oldest_ts;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newest==NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newest_ts=rtp_get_timestamp(newest);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldest_ts=rtp_get_timestamp(oldest);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;cum_jitter_buffer_count++;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;cum_jitter_buffer_size+=(uint32_t)(newest_ts-oldest_ts);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jitter_control_compute_mean_size(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctl-&gt;cum_jitter_buffer_count!=0){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmp=((double)ctl-&gt;cum_jitter_buffer_size)/(double)ctl-&gt;cum_jitter_buffer_count;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;cum_jitter_buffer_size=0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;cum_jitter_buffer_count=0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;jitter_buffer_mean_size<sp/>=<sp/>1000.0f*(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)tmp/(float)ctl-&gt;clock_rate;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctl-&gt;jitter_buffer_mean_size;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_init_jitter_buffer(<ref refid="struct__RtpSession" kindref="compound">RtpSession</ref><sp/>*session){</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__OrtpPayloadType" kindref="compound">PayloadType</ref><sp/>*payload=NULL;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(session-&gt;rcv.pt!=-1)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payload<sp/>=<sp/>rtp_profile_get_payload<sp/>(session-&gt;rcv.profile,session-&gt;rcv.pt);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">/*else<sp/>not<sp/>set<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitter_control_init(&amp;session-&gt;rtp.jittctl,payload);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="rtpsession_8h_1a3504171811ed93af8630749aa4a1b881" kindref="member">rtp_session_set_jitter_compensation</ref><sp/>(<ref refid="struct__RtpSession" kindref="compound">RtpSession</ref><sp/>*<sp/>session,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milisec)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session-&gt;rtp.jittctl.params.min_size<sp/>=<sp/>session-&gt;rtp.jittctl.params.nom_size<sp/>=<sp/>milisec;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtp_session_init_jitter_buffer(session);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_enable_adaptive_jitter_compensation(<ref refid="struct__RtpSession" kindref="compound">RtpSession</ref><sp/>*session,<sp/>bool_t<sp/>val){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitter_control_enable_adaptive(&amp;session-&gt;rtp.jittctl,val);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">bool_t<sp/>rtp_session_adaptive_jitter_compensation_enabled(<ref refid="struct__RtpSession" kindref="compound">RtpSession</ref><sp/>*session){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>session-&gt;rtp.jittctl.params.adaptive;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_enable_jitter_buffer(<ref refid="struct__RtpSession" kindref="compound">RtpSession</ref><sp/>*session,<sp/>bool_t<sp/>enabled){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session-&gt;rtp.jittctl.params.enabled<sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session-&gt;flags|=RTP_SESSION_RECV_SYNC;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">bool_t<sp/>rtp_session_jitter_buffer_enabled(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__RtpSession" kindref="compound">RtpSession</ref><sp/>*session){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>session-&gt;rtp.jittctl.params.enabled;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_set_jitter_buffer_params(<ref refid="struct__RtpSession" kindref="compound">RtpSession</ref><sp/>*session,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__JBParameters" kindref="compound">JBParameters</ref><sp/>*par){</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(par<sp/>==<sp/>&amp;session-&gt;rtp.jittctl.params)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;session-&gt;rtp.jittctl.params,<sp/>par,<sp/>sizeof<sp/>(<ref refid="struct__JBParameters" kindref="compound">JBParameters</ref>));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtp_session_init_jitter_buffer(session);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rtp_session_get_jitter_buffer_params(<ref refid="struct__RtpSession" kindref="compound">RtpSession</ref><sp/>*session,<sp/><ref refid="struct__JBParameters" kindref="compound">JBParameters</ref><sp/>*par){</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(par,<sp/>&amp;session-&gt;rtp.jittctl.params,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__JBParameters" kindref="compound">JBParameters</ref>));</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>The<sp/>algorithm<sp/>computes<sp/>two<sp/>values:</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slide:<sp/>an<sp/>average<sp/>of<sp/>difference<sp/>between<sp/>the<sp/>expected<sp/>and<sp/>the<sp/>socket-received<sp/>timestamp</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitter:<sp/>an<sp/>average<sp/>of<sp/>the<sp/>absolute<sp/>value<sp/>of<sp/>the<sp/>difference<sp/>between<sp/>socket-received<sp/>timestamp<sp/>and<sp/>slide.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slide<sp/>is<sp/>used<sp/>to<sp/>make<sp/>clock-slide<sp/>detection<sp/>and<sp/>correction.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitter<sp/>is<sp/>added<sp/>to<sp/>the<sp/>initial<sp/>jitt_comp_time<sp/>value.<sp/>It<sp/>compensates<sp/>bursty<sp/>packets<sp/>arrival<sp/>(packets</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>arriving<sp/>at<sp/>regular<sp/>interval<sp/>).</highlight></codeline>
<codeline lineno="172"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_new_packet(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/>uint32_t<sp/>packet_ts,<sp/>uint32_t<sp/>cur_str_ts){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ctl-&gt;params.<ref refid="struct__JBParameters_1ad4bf57ea281593ed5cbce2621e08333e" kindref="member">buffer_algorithm</ref>){</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OrtpJitterBufferBasic:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitter_control_new_packet_basic<sp/>(ctl,<sp/>packet_ts,<sp/>cur_str_ts);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OrtpJitterBufferRecursiveLeastSquare:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitter_control_new_packet_rls<sp/>(ctl,<sp/>packet_ts,<sp/>cur_str_ts);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_fatal(</highlight><highlight class="stringliteral">&quot;No<sp/>such<sp/>new<sp/>packet<sp/>strategy:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>ctl-&gt;params.<ref refid="struct__JBParameters_1ad4bf57ea281593ed5cbce2621e08333e" kindref="member">buffer_algorithm</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;count++;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_update_interarrival_jitter(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/>int32_t<sp/>diff){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*compute<sp/>interarrival<sp/>jitter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>delta;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta=diff-ctl-&gt;olddiff;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;inter_jitter=(float)<sp/>(ctl-&gt;inter_jitter+<sp/>((<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)abs(delta)<sp/>-<sp/>ctl-&gt;inter_jitter)*(1/16.0)));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;olddiff=diff;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_new_packet_basic(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/>uint32_t<sp/>packet_ts,<sp/>uint32_t<sp/>cur_str_ts){</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>diff<sp/>=<sp/>packet_ts<sp/>-<sp/>cur_str_ts;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gap,slide;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctl-&gt;count==0){</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;clock_offset_ts=ctl-&gt;prev_clock_offset_ts=diff;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slide=(double)diff;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;olddiff=diff;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;jitter=0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slide=((double)ctl-&gt;clock_offset_ts*(1-JC_BETA))<sp/>+<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)diff*JC_BETA);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gap=(double)diff<sp/>-<sp/>slide;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gap=gap&lt;0<sp/>?<sp/>-gap<sp/>:<sp/>0;<sp/></highlight><highlight class="comment">/*compute<sp/>only<sp/>for<sp/>late<sp/>packets*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;jitter=(float)<sp/>((ctl-&gt;jitter*(1-JC_GAMMA))<sp/>+<sp/>(gap*JC_GAMMA));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitter_control_update_interarrival_jitter(ctl,<sp/>diff);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctl-&gt;params.adaptive){</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctl-&gt;count%50==0)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;adapt_jitt_comp_ts=(int)<sp/>MAX(ctl-&gt;jitt_comp_ts,2*ctl-&gt;jitter);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jitter_control_dump_stats(ctl);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;clock_offset_ts=(int32_t)slide;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*ctl-&gt;slide<sp/>and<sp/>jitter<sp/>size<sp/>are<sp/>not<sp/>updated*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>bool_t<sp/>time_for_log(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/>uint32_t<sp/>cur_str_ts){</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>elapsed<sp/>=<sp/>(int32_t)(cur_str_ts<sp/>-<sp/>ctl-&gt;last_log_ts);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elapsed<sp/>&gt;=<sp/>5*ctl-&gt;clock_rate){</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;last_log_ts<sp/>=<sp/>cur_str_ts;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>jitter_control_local_ts_to_remote_ts_rls(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/>uint32_t<sp/>local_ts){</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)(<sp/>(int64_t)(ctl-&gt;capped_clock_ratio*(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(local_ts<sp/>-<sp/>ctl-&gt;local_ts_start)<sp/>+<sp/>ctl-&gt;clock_offset_ts));</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">/****************************<sp/>RLS<sp/>*********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jitter_control_new_packet_rls(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*ctl,<sp/>uint32_t<sp/>packet_ts,<sp/>uint32_t<sp/>cur_str_ts){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>diff<sp/>=<sp/>packet_ts<sp/>-<sp/>cur_str_ts;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deviation;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>jb_size_updated<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctl-&gt;count==0){</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;clock_offset_ts<sp/>=<sp/>ctl-&gt;prev_clock_offset_ts<sp/>=<sp/>(int32_t)packet_ts;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Offset<sp/>compensation.<sp/>In<sp/>order<sp/>to<sp/>avoid<sp/>managing<sp/>the<sp/>rollover<sp/>of<sp/>the<sp/>uint32_t<sp/>timestamp,<sp/>the<sp/>timestamps<sp/>passed</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>kalman<sp/>filter<sp/>are<sp/>substracted<sp/>with<sp/>their<sp/>initial<sp/>value.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>allows<sp/>a<sp/>video<sp/>stream<sp/>to<sp/>run<sp/>13hours<sp/>(clockrate:<sp/>90<sp/>000),<sp/>which<sp/>looks<sp/>at<sp/>first<sp/>sight</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sufficient<sp/>for<sp/>a<sp/>VoIP<sp/>application.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;local_ts_start<sp/>=<sp/>cur_str_ts;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;remote_ts_start<sp/>=<sp/>packet_ts;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;olddiff<sp/>=<sp/>diff;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;jitter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_extremum_init(&amp;ctl-&gt;max_ts_deviation,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(ctl-&gt;params.refresh_ms<sp/>/<sp/>1000.f<sp/>*<sp/>ctl-&gt;clock_rate));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_extremum_record_max(&amp;ctl-&gt;max_ts_deviation,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)ctl-&gt;jitt_comp_ts);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clock<sp/>rates<sp/>should<sp/>be<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_kalman_rls_init(&amp;ctl-&gt;kalman_rls,<sp/>1.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;capped_clock_ratio<sp/>=<sp/>ctl-&gt;kalman_rls.m;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Compute<sp/>the<sp/>deviation<sp/>from<sp/>the<sp/>value<sp/>predicted<sp/>by<sp/>the<sp/>kalman<sp/>filter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviation<sp/>=<sp/>abs((int32_t)(packet_ts<sp/>-<sp/>jitter_control_local_ts_to_remote_ts_rls(ctl,<sp/>cur_str_ts)));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*update<sp/>the<sp/>kalman<sp/>filter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_kalman_rls_record(&amp;ctl-&gt;kalman_rls,<sp/>cur_str_ts<sp/>-<sp/>ctl-&gt;local_ts_start,<sp/>packet_ts<sp/>-<sp/>ctl-&gt;remote_ts_start);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;capped_clock_ratio<sp/>=<sp/>MAX(.5,<sp/>MIN(ctl-&gt;kalman_rls.m,<sp/>2));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(.5f&lt;ctl-&gt;kalman_rls.m<sp/>&amp;&amp;<sp/>ctl-&gt;kalman_rls.m&lt;2.f){</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*realistic<sp/>clock<sp/>ratio,<sp/>the<sp/>filter<sp/>is<sp/>well<sp/>converged*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;clock_offset_ts<sp/>=<sp/>(int32_t)((int32_t)ctl-&gt;kalman_rls.b<sp/>+<sp/>ctl-&gt;remote_ts_start);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;clock_offset_ts<sp/>=<sp/>diff;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*ortp_message(&quot;deviation=%g<sp/>ms&quot;,<sp/>1000.0*deviation/(double)ctl-&gt;clock_rate);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitter_control_update_interarrival_jitter(ctl,<sp/>diff);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_str_ts<sp/>-=<sp/>ctl-&gt;local_ts_start;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctl-&gt;params.adaptive){</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_t<sp/>max_updated<sp/>=<sp/>ortp_extremum_record_max(&amp;ctl-&gt;max_ts_deviation,<sp/>cur_str_ts,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)deviation);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_deviation<sp/>=<sp/>MAX(ortp_extremum_get_previous(&amp;ctl-&gt;max_ts_deviation),<sp/>ortp_extremum_get_current(&amp;ctl-&gt;max_ts_deviation));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_updated<sp/>&amp;&amp;<sp/>max_deviation<sp/>&gt;<sp/>ctl-&gt;adapt_jitt_comp_ts){</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;adapt_jitt_comp_ts=(int)max_deviation;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jb_size_updated<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_deviation<sp/>&lt;<sp/>ctl-&gt;params.ramp_threshold/100.f*ctl-&gt;adapt_jitt_comp_ts){</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Jitter<sp/>is<sp/>decreasing.<sp/>Make<sp/>a<sp/>smooth<sp/>descent<sp/>to<sp/>avoid<sp/>dropping<sp/>lot<sp/>of<sp/>packets*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(int32_t)(cur_str_ts<sp/>-<sp/>ctl-&gt;adapt_refresh_prev_ts)<sp/>&gt;<sp/>((ctl-&gt;params.ramp_refresh_ms*ctl-&gt;clock_rate)/1000))<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;adapt_jitt_comp_ts<sp/>-=<sp/>(ctl-&gt;params.ramp_step_ms<sp/>*<sp/>ctl-&gt;clock_rate)<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jb_size_updated<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jb_size_updated){</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_size_ts<sp/>=<sp/>(ctl-&gt;params.min_size<sp/>*<sp/>ctl-&gt;clock_rate)<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size_ts<sp/>=<sp/>(ctl-&gt;params.max_size<sp/>*<sp/>ctl-&gt;clock_rate)<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctl-&gt;adapt_jitt_comp_ts<sp/>&lt;<sp/>min_size_ts){</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;adapt_jitt_comp_ts<sp/>=<sp/>min_size_ts;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctl-&gt;adapt_jitt_comp_ts<sp/>&gt;<sp/>max_size_ts){</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;adapt_jitt_comp_ts<sp/>=<sp/>max_size_ts;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;adapt_refresh_prev_ts<sp/>=<sp/>cur_str_ts;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jb_size_updated<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_for_log(ctl,<sp/>cur_str_ts)){</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_message(</highlight><highlight class="stringliteral">&quot;jitter<sp/>buffer<sp/>%s:<sp/>target-size:<sp/>%f<sp/>ms,<sp/>effective-size:<sp/>%f<sp/>(min:<sp/>%i<sp/>nom:<sp/>%i,<sp/>max:<sp/>%i)&quot;</highlight><highlight class="normal">,jb_size_updated<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;updated&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;stable&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)ctl-&gt;adapt_jitt_comp_ts/(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)ctl-&gt;clock_rate)*1000.0,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;jitter_buffer_mean_size,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctl-&gt;params.min_size,<sp/>ctl-&gt;params.nom_size,<sp/>ctl-&gt;params.max_size);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_message(</highlight><highlight class="stringliteral">&quot;jitter<sp/>buffer<sp/>rls<sp/>stats:<sp/>count=%d,<sp/>clockrate=%i&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>offset=%g<sp/>clock_ratio=%g&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>capped_offset=%i<sp/>capped_clock_ratio=%f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>max_ts_deviation=%f<sp/>prev_max_ts_deviation=%f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>deviation=%i&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>RLS<sp/>VARIABLES:<sp/>P[0][0]=%f,<sp/>P[1][0]=%f,<sp/>P[0][1]=%f,<sp/>P[1][1]=%f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>ctl-&gt;count,<sp/>ctl-&gt;clock_rate</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>ctl-&gt;kalman_rls.b,<sp/>ctl-&gt;kalman_rls.m</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>ctl-&gt;clock_offset_ts,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)ctl-&gt;capped_clock_ratio</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>ortp_extremum_get_current(&amp;ctl-&gt;max_ts_deviation),<sp/>ortp_extremum_get_previous(&amp;ctl-&gt;max_ts_deviation)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>deviation</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>ctl-&gt;kalman_rls.P[0][0],<sp/>ctl-&gt;kalman_rls.P[1][0],<sp/>ctl-&gt;kalman_rls.P[0][1],<sp/>ctl-&gt;kalman_rls.P[1][1]);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">uint32_t<sp/>jitter_control_get_compensated_timestamp(<ref refid="struct__JitterControl" kindref="compound">JitterControl</ref><sp/>*obj<sp/>,<sp/>uint32_t<sp/>user_ts){</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(obj-&gt;params.<ref refid="struct__JBParameters_1ad4bf57ea281593ed5cbce2621e08333e" kindref="member">buffer_algorithm</ref>){</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OrtpJitterBufferBasic:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>(uint32_t)(<sp/>(int64_t)user_ts+obj-&gt;clock_offset_ts-(int64_t)obj-&gt;adapt_jitt_comp_ts);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OrtpJitterBufferRecursiveLeastSquare:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>jitter_control_local_ts_to_remote_ts_rls(obj,<sp/>user_ts)<sp/>-<sp/>obj-&gt;adapt_jitt_comp_ts;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ortp_fatal(</highlight><highlight class="stringliteral">&quot;No<sp/>such<sp/>new<sp/>packet<sp/>strategy:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>obj-&gt;params.<ref refid="struct__JBParameters_1ad4bf57ea281593ed5cbce2621e08333e" kindref="member">buffer_algorithm</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/S0U1SB4N3/test006/linphone-desktop/submodules/oRTP/src/jitterctl.c"/>
  </compounddef>
</doxygen>
