.TH "deprecated" 3 "Thu Dec 14 2017" "Version 3.12.0" "Liblinphone" \" -*- nroff -*-
.ad l
.nh
.SH NAME
deprecatedDeprecated List 
 \- 
.IP "\fBGlobal \fB_LinphoneCoreVTable::auth_info_requested\fP \fP" 1c
Use authentication_requested instead\&. 
.IP "\fBGlobal \fB_LinphoneCoreVTable::display_message\fP \fP" 1c
Callback to display a message to the user  
.IP "\fBGlobal \fB_LinphoneCoreVTable::display_status\fP \fP" 1c
Callback that notifies various events with human readable text\&. 
.IP "\fBGlobal \fB_LinphoneCoreVTable::display_url\fP \fP" 1c
.IP "\fBGlobal \fB_LinphoneCoreVTable::display_warning\fP \fP" 1c
Callback to display a warning to the user  
.IP "\fBGlobal \fB_LinphoneCoreVTable::file_transfer_progress_indication\fP \fP" 1c
Callback to indicate file transfer progress  
.IP "\fBGlobal \fB_LinphoneCoreVTable::file_transfer_recv\fP \fP" 1c
Callback to store file received attached to a \fBLinphoneChatMessage\fP  
.IP "\fBGlobal \fB_LinphoneCoreVTable::file_transfer_send\fP \fP" 1c
Callback to collect file chunk to be sent for a \fBLinphoneChatMessage\fP  
.IP "\fBGlobal \fB_LinphoneCoreVTable::text_received\fP \fP" 1c
, use \fBmessage_received\fP instead 
.br
 A text message has been received  
.IP "\fBClass \fB_LinphoneSipTransports\fP \fP" 1c
  
.IP "\fBGlobal \fBDisplayMessageCb\fP )(LinphoneCore *lc, const char *message)\fP" 1c
  
.IP "\fBGlobal \fBDisplayStatusCb\fP )(LinphoneCore *lc, const char *message)\fP" 1c
  
.IP "\fBGlobal \fBDisplayUrlCb\fP )(LinphoneCore *lc, const char *message, const char *url)\fP" 1c
  
.IP "\fBGlobal \fBlinphone_address_destroy\fP (LinphoneAddress *u)\fP" 1c
Use \fBlinphone_address_unref()\fP instead   
.IP "\fBGlobal \fBlinphone_address_is_secure\fP (const LinphoneAddress *addr)\fP" 1c
use \fBlinphone_address_get_secure()\fP   
.IP "\fBGlobal \fBlinphone_call_get_user_pointer\fP (call)\fP" 1c
Use \fBlinphone_call_get_user_data()\fP instead\&. 
.IP "\fBGlobal \fBlinphone_call_is_in_conference\fP (const LinphoneCall *call)\fP" 1c
Use \fBlinphone_call_get_conference()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_call_log_destroy\fP (LinphoneCallLog *cl)\fP" 1c
Use \fBlinphone_call_log_unref()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_call_log_get_from\fP (cl)\fP" 1c
Use \fBlinphone_call_log_get_from_address()\fP instead\&. 
.IP "\fBGlobal \fBlinphone_call_log_get_to\fP (cl)\fP" 1c
Use \fBlinphone_call_log_get_to_address()\fP instead\&. 
.IP "\fBGlobal \fBlinphone_call_log_get_user_pointer\fP (cl)\fP" 1c
Use \fBlinphone_call_log_get_user_data()\fP instead\&. 
.IP "\fBGlobal \fBlinphone_call_log_set_user_pointer\fP (cl, ud)\fP" 1c
Use \fBlinphone_call_log_set_user_data()\fP instead\&. 
.IP "\fBGlobal \fBlinphone_call_params_destroy\fP (LinphoneCallParams *cp)\fP" 1c
Use \fBlinphone_call_params_unref()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_call_params_get_received_video_size\fP (const LinphoneCallParams *cp)\fP" 1c
Use \fBlinphone_call_params_get_received_video_definition()\fP instead  
.IP "\fBGlobal \fBlinphone_call_params_get_sent_video_size\fP (const LinphoneCallParams *cp)\fP" 1c
Use \fBlinphone_call_params_get_sent_video_definition()\fP instead  
.IP "\fBGlobal \fBlinphone_call_params_get_used_audio_codec\fP (const LinphoneCallParams *cp)\fP" 1c
Use \fBlinphone_call_params_get_used_audio_payload_type()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_call_params_get_used_text_codec\fP (const LinphoneCallParams *cp)\fP" 1c
Use \fBlinphone_call_params_get_used_text_payload_type()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_call_params_get_used_video_codec\fP (const LinphoneCallParams *cp)\fP" 1c
Use \fBlinphone_call_params_get_used_video_payload_type()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_call_params_local_conference_mode\fP \fP" 1c
Use \fBlinphone_call_params_get_local_conference_mode()\fP instead\&. 
.IP "\fBGlobal \fBlinphone_call_set_user_pointer\fP (call, ud)\fP" 1c
Use \fBlinphone_call_set_user_data()\fP instead\&. 
.IP "\fBGlobal \fBlinphone_chat_message_get_from\fP (msg)\fP" 1c
Use \fBlinphone_chat_message_get_from_address()\fP instead\&. 
.IP "\fBGlobal \fBlinphone_chat_message_get_to\fP (msg)\fP" 1c
Use \fBlinphone_chat_message_get_to_address()\fP instead\&. 
.IP "\fBGlobal \fBlinphone_chat_message_set_from\fP (msg, addr)\fP" 1c
Use \fBlinphone_chat_message_set_from_address()\fP instead\&. 
.IP "\fBGlobal \fBlinphone_chat_message_start_file_download\fP (LinphoneChatMessage *message, LinphoneChatMessageStateChangedCb status_cb, void *ud)\fP" 1c
Use \fBlinphone_chat_message_download_file()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_chat_room_destroy\fP (LinphoneChatRoom *cr)\fP" 1c
Use \fBlinphone_chat_room_unref()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_chat_room_get_lc\fP (LinphoneChatRoom *cr)\fP" 1c
use \fBlinphone_chat_room_get_core()\fP   
.IP "\fBGlobal \fBlinphone_chat_room_send_message\fP (LinphoneChatRoom *cr, const char *msg)\fP" 1c
Use \fBlinphone_chat_room_send_chat_message()\fP instead\&.  
.IP "\fBGlobal \fBlinphone_chat_room_send_message2\fP (LinphoneChatRoom *cr, LinphoneChatMessage *msg, LinphoneChatMessageStateChangedCb status_cb, void *ud)\fP" 1c
Use \fBlinphone_chat_room_send_chat_message()\fP instead\&.  
.IP "\fBGlobal \fBlinphone_conference_params_free\fP (LinphoneConferenceParams *params)\fP" 1c
Use \fBlinphone_conference_params_unref()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_accept_call\fP (LinphoneCore *lc, LinphoneCall *call)\fP" 1c
Use \fBlinphone_call_accept()\fP instead  
.IP "\fBGlobal \fBlinphone_core_accept_call_update\fP (LinphoneCore *lc, LinphoneCall *call, const LinphoneCallParams *params)\fP" 1c
Use \fBlinphone_call_accept_update()\fP instead  
.IP "\fBGlobal \fBlinphone_core_accept_call_with_params\fP (LinphoneCore *lc, LinphoneCall *call, const LinphoneCallParams *params)\fP" 1c
Use \fBlinphone_call_accept_with_params()\fP instead  
.IP "\fBGlobal \fBlinphone_core_accept_early_media\fP (LinphoneCore *lc, LinphoneCall *call)\fP" 1c
Use \fBlinphone_call_accept_early_media()\fP instead  
.IP "\fBGlobal \fBlinphone_core_accept_early_media_with_params\fP (LinphoneCore *lc, LinphoneCall *call, const LinphoneCallParams *params)\fP" 1c
Use \fBlinphone_call_accept_early_media_with_params()\fP instead  
.IP "\fBGlobal \fBlinphone_core_add_friend\fP (LinphoneCore *lc, LinphoneFriend *fr)\fP" 1c
use \fBlinphone_friend_list_add_friend()\fP instead\&.  
.IP "\fBGlobal \fBlinphone_core_add_listener\fP (LinphoneCore *lc, LinphoneCoreVTable *vtable)\fP" 1c
Use \fBlinphone_core_add_callbacks()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_check_payload_type_usability\fP (LinphoneCore *lc, const OrtpPayloadType *pt)\fP" 1c
Use \fBlinphone_payload_type_is_usable()\fP instead\&. 
.IP "\fBGlobal \fBlinphone_core_create_lp_config\fP (LinphoneCore *lc, const char *filename)\fP" 1c
Use \fBlinphone_core_create_config()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_decline_call\fP (LinphoneCore *lc, LinphoneCall *call, LinphoneReason reason)\fP" 1c
Use \fBlinphone_call_decline()\fP instead  
.IP "\fBGlobal \fBlinphone_core_defer_call_update\fP (LinphoneCore *lc, LinphoneCall *call)\fP" 1c
Use \fBlinphone_call_defer_update()\fP instead  
.IP "\fBGlobal \fBlinphone_core_destroy\fP (LinphoneCore *lc)\fP" 1c
Use \fBlinphone_core_unref()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_disable_logs\fP (void)\fP" 1c
Use \fBlinphone_core_set_log_level\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_enable_logs\fP (FILE *file)\fP" 1c
Use \fBlinphone_core_set_log_file\fP and \fBlinphone_core_set_log_level\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_enable_logs_with_cb\fP (OrtpLogFunc logfunc)\fP" 1c
Use \fBlinphone_core_set_log_handler\fP and \fBlinphone_core_set_log_level\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_enable_payload_type\fP (LinphoneCore *lc, OrtpPayloadType *pt, bool_t enable)\fP" 1c
Use \fBlinphone_payload_type_enable()\fP\&.   
.IP "\fBGlobal \fBlinphone_core_enable_video\fP (LinphoneCore *lc, bool_t vcap_enabled, bool_t display_enabled)\fP" 1c
Use \fBlinphone_core_enable_video_capture\fP and \fBlinphone_core_enable_video_display\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_find_payload_type\fP (LinphoneCore *lc, const char *type, int rate, int channels)\fP" 1c
Use \fBlinphone_core_get_payload_type()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_get_audio_codecs\fP (const LinphoneCore *lc)\fP" 1c
Use \fBlinphone_core_get_audio_payload_types()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_get_current_preview_video_size\fP (const LinphoneCore *lc)\fP" 1c
Use \fBlinphone_core_get_current_preview_video_definition()\fP instead  
.IP "\fBGlobal \fBlinphone_core_get_default_proxy\fP (LinphoneCore *lc, LinphoneProxyConfig **config)\fP" 1c
Use \fBlinphone_core_get_default_proxy_config()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_get_firewall_policy\fP (const LinphoneCore *lc)\fP" 1c
Use \fBlinphone_core_get_nat_policy()\fP instead   
.IP "\fBGlobal \fBlinphone_core_get_friend_by_address\fP (const LinphoneCore *lc, const char *addr)\fP" 1c
use \fBlinphone_core_find_friend()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_get_friend_list\fP (const LinphoneCore *lc)\fP" 1c
use \fBlinphone_core_get_friends_lists()\fP or \fBlinphone_friend_list_get_friends()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_get_payload_type_bitrate\fP (LinphoneCore *lc, const OrtpPayloadType *pt)\fP" 1c
Use linphone_payload_type_get_bitrate()\&.   
.IP "\fBGlobal \fBlinphone_core_get_payload_type_number\fP (LinphoneCore *lc, const OrtpPayloadType *pt)\fP" 1c
Use \fBlinphone_payload_type_get_number()\fP instead   
.IP "\fBGlobal \fBlinphone_core_get_play_level\fP (LinphoneCore *lc)\fP" 1c
  
.IP "\fBGlobal \fBlinphone_core_get_preferred_video_size\fP (const LinphoneCore *lc)\fP" 1c
Use \fBlinphone_core_get_preferred_video_definition()\fP instead  
.IP "\fBGlobal \fBlinphone_core_get_presence_info\fP (const LinphoneCore *lc)\fP" 1c
Use \fBlinphone_core_get_presence_model()\fP instead   
.IP "\fBGlobal \fBlinphone_core_get_preview_video_size\fP (const LinphoneCore *lc)\fP" 1c
Use \fBlinphone_core_get_preview_video_definition()\fP instead  
.IP "\fBGlobal \fBlinphone_core_get_rec_level\fP (LinphoneCore *lc)\fP" 1c
  
.IP "\fBGlobal \fBlinphone_core_get_ring_level\fP (LinphoneCore *lc)\fP" 1c
  
.IP "\fBGlobal \fBlinphone_core_get_sip_port\fP (LinphoneCore *lc)\fP" 1c
use \fBlinphone_core_get_sip_transports()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_get_sip_transports\fP (LinphoneCore *lc, LinphoneSipTransports *transports)\fP" 1c
  
.IP "\fBGlobal \fBlinphone_core_get_sip_transports_used\fP (LinphoneCore *lc, LinphoneSipTransports *tr)\fP" 1c
Use linphone_core_get_transports_used instead   
.IP "\fBGlobal \fBlinphone_core_get_supported_video_sizes\fP (LinphoneCore *lc)\fP" 1c
Use \fBlinphone_factory_get_supported_video_definitions()\fP instead  
.IP "\fBGlobal \fBlinphone_core_get_text_codecs\fP (const LinphoneCore *lc)\fP" 1c
Use \fBlinphone_core_get_text_payload_types()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_get_user_agent_name\fP (void)\fP" 1c
Use \fBlinphone_core_get_user_agent\fP instead\&. 
.IP "\fBGlobal \fBlinphone_core_get_user_agent_version\fP (void)\fP" 1c
Use \fBlinphone_core_get_user_agent\fP instead\&. 
.IP "\fBGlobal \fBlinphone_core_get_video_codecs\fP (const LinphoneCore *lc)\fP" 1c
Use \fBlinphone_core_get_video_payload_types()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_get_video_policy\fP (const LinphoneCore *lc)\fP" 1c
.IP "\fBGlobal \fBlinphone_core_interpret_friend_uri\fP (LinphoneCore *lc, const char *uri, char **result)\fP" 1c
Use \fBlinphone_core_interpret_url()\fP instead   
.IP "\fBGlobal \fBlinphone_core_new\fP (const LinphoneCoreVTable *vtable, const char *config_path, const char *factory_config_path, void *userdata)\fP" 1c
Use \fBlinphone_factory_create_core()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_new_with_config\fP (const LinphoneCoreVTable *vtable, LpConfig *config, void *userdata)\fP" 1c
Use \fBlinphone_factory_create_core_with_config()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_pause_call\fP (LinphoneCore *lc, LinphoneCall *call)\fP" 1c
Use \fBlinphone_call_pause()\fP instead  
.IP "\fBGlobal \fBlinphone_core_payload_type_enabled\fP (const LinphoneCore *lc, const OrtpPayloadType *pt)\fP" 1c
Use \fBlinphone_payload_type_enabled()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_payload_type_is_vbr\fP (const LinphoneCore *lc, const OrtpPayloadType *pt)\fP" 1c
Use \fBlinphone_payload_type_is_vbr()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_redirect_call\fP (LinphoneCore *lc, LinphoneCall *call, const char *redirect_uri)\fP" 1c
Use \fBlinphone_call_redirect()\fP instead  
.IP "\fBGlobal \fBlinphone_core_remove_friend\fP (LinphoneCore *lc, LinphoneFriend *fr)\fP" 1c
use \fBlinphone_friend_list_remove_friend()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_remove_listener\fP (LinphoneCore *lc, const LinphoneCoreVTable *vtable)\fP" 1c
Use \fBlinphone_core_remove_callbacks()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_resume_call\fP (LinphoneCore *lc, LinphoneCall *call)\fP" 1c
Use \fBlinphone_call_resume()\fP instead  
.IP "\fBGlobal \fBlinphone_core_send_dtmf\fP (LinphoneCore *lc, char dtmf)\fP" 1c
Use \fBlinphone_call_send_dtmf\fP instead\&. This function only works during calls\&. The dtmf is automatically played to the user\&.  
.IP "\fBGlobal \fBlinphone_core_set_audio_codecs\fP (LinphoneCore *lc, bctbx_list_t *codecs)\fP" 1c
Use \fBlinphone_core_set_audio_payload_types()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_set_default_proxy\fP (lc, config)\fP" 1c
Use \fBlinphone_core_set_default_proxy_config()\fP instead\&. 
.IP "\fBGlobal \fBlinphone_core_set_firewall_policy\fP (LinphoneCore *lc, LinphoneFirewallPolicy pol)\fP" 1c
Use \fBlinphone_core_set_nat_policy()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_set_payload_type_bitrate\fP (LinphoneCore *lc, OrtpPayloadType *pt, int bitrate)\fP" 1c
Use \fBlinphone_payload_type_set_normal_bitrate()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_set_payload_type_number\fP (LinphoneCore *lc, OrtpPayloadType *pt, int number)\fP" 1c
Use \fBlinphone_payload_type_set_number()\fP instead   
.IP "\fBGlobal \fBlinphone_core_set_play_level\fP (LinphoneCore *lc, int level)\fP" 1c
.PP
  
.IP "\fBGlobal \fBlinphone_core_set_preferred_video_size\fP (LinphoneCore *lc, MSVideoSize vsize)\fP" 1c
Use \fBlinphone_core_set_preferred_video_definition()\fP instead  
.IP "\fBGlobal \fBlinphone_core_set_preferred_video_size_by_name\fP (LinphoneCore *lc, const char *name)\fP" 1c
Use \fBlinphone_factory_create_video_definition_from_name()\fP and \fBlinphone_core_set_preferred_video_definition()\fP instead  
.IP "\fBGlobal \fBlinphone_core_set_presence_info\fP (LinphoneCore *lc, int minutes_away, const char *alternative_contact, LinphoneOnlineStatus os)\fP" 1c
Use \fBlinphone_core_set_presence_model()\fP instead   
.IP "\fBGlobal \fBlinphone_core_set_preview_video_size\fP (LinphoneCore *lc, MSVideoSize vsize)\fP" 1c
Use \fBlinphone_core_set_preview_video_definition()\fP instead  
.IP "\fBGlobal \fBlinphone_core_set_preview_video_size_by_name\fP (LinphoneCore *lc, const char *name)\fP" 1c
Use \fBlinphone_factory_create_video_definition_from_name()\fP and \fBlinphone_core_set_preview_video_definition()\fP instead  
.IP "\fBGlobal \fBlinphone_core_set_rec_level\fP (LinphoneCore *lc, int level)\fP" 1c
.PP
  
.IP "\fBGlobal \fBlinphone_core_set_ring_level\fP (LinphoneCore *lc, int level)\fP" 1c
  
.IP "\fBGlobal \fBlinphone_core_set_sip_port\fP (LinphoneCore *lc, int port)\fP" 1c
use \fBlinphone_core_set_sip_transports()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_set_sip_transports\fP (LinphoneCore *lc, const LinphoneSipTransports *transports)\fP" 1c
Use linphone_core_set_transports instead   
.IP "\fBGlobal \fBlinphone_core_set_text_codecs\fP (LinphoneCore *lc, bctbx_list_t *codecs)\fP" 1c
Use \fBlinphone_core_set_text_payload_types()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_set_video_codecs\fP (LinphoneCore *lc, bctbx_list_t *codecs)\fP" 1c
Use \fBlinphone_core_set_video_payload_types()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_core_set_video_policy\fP (LinphoneCore *lc, const LinphoneVideoPolicy *policy)\fP" 1c
.IP "\fBGlobal \fBlinphone_core_terminate_call\fP (LinphoneCore *lc, LinphoneCall *call)\fP" 1c
Use \fBlinphone_call_terminate()\fP instead  
.IP "\fBGlobal \fBlinphone_core_transfer_call\fP (LinphoneCore *lc, LinphoneCall *call, const char *refer_to)\fP" 1c
Use \fBlinphone_call_transfer()\fP instead  
.IP "\fBGlobal \fBlinphone_core_transfer_call_to_another\fP (LinphoneCore *lc, LinphoneCall *call, LinphoneCall *dest)\fP" 1c
Use \fBlinphone_call_transfer_to_another()\fP instead  
.IP "\fBGlobal \fBlinphone_core_update_call\fP (LinphoneCore *lc, LinphoneCall *call, const LinphoneCallParams *params)\fP" 1c
Use \fBlinphone_call_update()\fP instead  
.IP "\fBGlobal \fBlinphone_friend_destroy\fP (LinphoneFriend *lf)\fP" 1c
Use \fBlinphone_friend_unref()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_friend_get_status\fP (const LinphoneFriend *lf)\fP" 1c
Use \fBlinphone_friend_get_presence_model()\fP instead   
.IP "\fBGlobal \fBlinphone_friend_new\fP (void)\fP" 1c
use \fBlinphone_core_create_friend\fP instead   
.IP "\fBGlobal \fBlinphone_friend_new_with_addr\fP \fP" 1c
Use \fBlinphone_friend_new_with_address\fP instead  
.IP "\fBGlobal \fBlinphone_friend_new_with_address\fP (const char *addr)\fP" 1c
use \fBlinphone_core_create_friend_with_address\fP instead   
.IP "\fBGlobal \fBlinphone_friend_set_addr\fP \fP" 1c
Use \fBlinphone_friend_set_address\fP instead  
.IP "\fBGlobal \fBlinphone_info_message_destroy\fP (LinphoneInfoMessage *im)\fP" 1c
Use \fBlinphone_info_message_unref()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_proxy_config_destroy\fP (LinphoneProxyConfig *cfg)\fP" 1c
  
.IP "\fBGlobal \fBlinphone_proxy_config_enable_avpf\fP (LinphoneProxyConfig *cfg, bool_t enable)\fP" 1c
use \fBlinphone_proxy_config_set_avpf_mode()\fP   
.IP "\fBGlobal \fBlinphone_proxy_config_get_identity\fP (const LinphoneProxyConfig *cfg)\fP" 1c
use \fBlinphone_proxy_config_get_identity_address()\fP   
.IP "\fBGlobal \fBlinphone_proxy_config_is_registered\fP (const LinphoneProxyConfig *cfg)\fP" 1c
Use \fBlinphone_proxy_config_get_state()\fP instead\&.   
.IP "\fBGlobal \fBlinphone_proxy_config_new\fP (void)\fP" 1c
, use \fBlinphone_core_create_proxy_config\fP instead   
.IP "\fBGlobal \fBlinphone_proxy_config_normalize_number\fP (LinphoneProxyConfig *proxy, const char *username, char *result, size_t result_len)\fP" 1c
use \fBlinphone_proxy_config_normalize_phone_number()\fP   
.IP "\fBGlobal \fBlinphone_proxy_config_set_identity\fP (LinphoneProxyConfig *cfg, const char *identity)\fP" 1c
Use \fBlinphone_proxy_config_set_identity_address()\fP   
.IP "\fBGlobal \fBlinphone_tunnel_auto_detect\fP (LinphoneTunnel *tunnel)\fP" 1c
Replaced by linphone_tunnel_set_mode(LinphoneTunnelModeAuto)   
.IP "\fBGlobal \fBlinphone_tunnel_auto_detect_enabled\fP (LinphoneTunnel *tunnel)\fP" 1c
Replaced by \fBlinphone_tunnel_get_mode()\fP   
.IP "\fBGlobal \fBlinphone_tunnel_config_destroy\fP (LinphoneTunnelConfig *tunnel)\fP" 1c
use \fBlinphone_tunnel_config_unref()\fP\&.   
.IP "\fBGlobal \fBlinphone_tunnel_enable\fP (LinphoneTunnel *tunnel, bool_t enabled)\fP" 1c
Replaced by \fBlinphone_tunnel_set_mode()\fP   
.IP "\fBGlobal \fBlinphone_tunnel_enabled\fP (const LinphoneTunnel *tunnel)\fP" 1c
Replaced by \fBlinphone_tunnel_get_mode()\fP   
.IP "\fBGlobal \fBlinphone_vcard_free\fP (LinphoneVcard *vCard)\fP" 1c
Use \fBlinphone_vcard_unref()\fP or belle_sip_object_unref() instead\&.   
.IP "\fBGlobal \fBlinphone_vcard_new\fP (void)\fP" 1c
Use \fBlinphone_factory_create_vcard()\fP instead\&.   
.IP "\fBGlobal \fBLinphoneChatMessageStateChangedCb\fP )(LinphoneChatMessage *msg, LinphoneChatMessageState state, void *ud)\fP" 1c
Use LinphoneChatMessageCbsMsgStateChangedCb instead\&.   
.IP "\fBGlobal \fBLinphoneCoreTextMessageReceivedCb\fP )(LinphoneCore *lc, LinphoneChatRoom *room, const LinphoneAddress *from, const char *message)\fP" 1c
use \fBLinphoneCoreMessageReceivedCb\fP instead\&.   
.IP "\fBGlobal \fBLinphoneFirewallPolicy\fP \fP" 1c
Use \fBLinphoneNatPolicy\fP instead\&.   
.IP "\fBGlobal \fBLinphoneFirewallPolicy\fP \fP" 1c
Use \fBLinphoneNatPolicy\fP instead\&.   
.IP "\fBGlobal \fBLinphoneVideoPolicy\fP \fP" 1c
  
.IP "\fBGlobal \fBLinphoneVideoPolicy\fP \fP" 1c
  
.IP "\fBGlobal \fBShowInterfaceCb\fP )(LinphoneCore *lc)\fP" 1c
 
.PP

