<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__mediastreamer2__intro" kind="group">
    <compoundname>mediastreamer2_intro</compoundname>
    <title>Introduction to mediastreamer2 concepts</title>
    <innergroup refid="group__howto0__samplegraph">Howto 1: build a sample audio graph.</innergroup>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<sect1 id="group__mediastreamer2__intro_1what_is_it">
<title>What is mediastreamer2?</title>
<para>mediastreamer2 is a powerful engine to make audio and video streams. mediastreamer2 is GPL (COPYING). Please understand the licencing details before using it!</para><para>Commercial support and licensing is provided by Belledonne Communications <ulink url="http://www.belledonne-communications.com">http://www.belledonne-communications.com</ulink></para><para><simplesect kind="see"><para><ulink url="http://www.linphone.org/eng/documentation/dev/mediastreamer2.html">http://www.linphone.org/eng/documentation/dev/mediastreamer2.html</ulink></para></simplesect>
</para></sect1>
<sect1 id="group__mediastreamer2__intro_1definitions">
<title>Some definitions</title>
<para><itemizedlist>
<listitem><para><bold>Filter:</bold> A filter is a mediastreamer2 component that process data. A filter have 0 or several INPUT pins and 0 or several OUTPUT pins. Here is a list of possible use of filters:<itemizedlist>
<listitem><para>capture audio or video data.</para></listitem><listitem><para>play audio or display video data.</para></listitem><listitem><para>send or receive RTP data.</para></listitem><listitem><para>encode or decode audio or video data.</para></listitem><listitem><para>transform (resize video, resample audio...) data.</para></listitem><listitem><para>duplicate any kind of data.</para></listitem><listitem><para>mix audio/video data.</para></listitem></itemizedlist>
</para></listitem><listitem><para><bold>Graph:</bold> A graph is a manager of filters connected together. It will transfer data from OUTPUT pins to INPUT pins and will be responsible for running filters.</para></listitem></itemizedlist>
</para></sect1>
<sect1 id="group__mediastreamer2__intro_1how_do_i_use_mediastreamer2">
<title>How do I use mediastreamer2?</title>
<para>Mediastreamer2 can be used for a lot of different purpose. The primary use is to manage RTP audio and video session. You will need to use the API to build filters, link them together in a graph. Then the ticker API will help you to start and stop the graph.</para><para>Basic graph example:</para><para><dot>
digraph example {
 rankdir=LR
 node [shape=record, fontname=Helvetica, fontsize=10];
 capt [ label=&quot;AUDIO CAPTURE FILTER&quot;];
 enc [ label=&quot;ENCODE FILTER&quot;];
 rtp [ label=&quot;RTP FILTER&quot;];
 capt -&gt; enc;
 enc -&gt; rtp;
}
</dot>
</para><para>The above graph is composed of three filters. The first one has no input: it captures audio data directly from the drivers and provide it to the OUTPUT pin. This data is sent to the INPUT pin of the encoder which of course encodes the data and sends it to its OUTPUT pin. This pin is connected to the INPUT pin of a filter capable of building and sending RTP packets.</para><para>The modular design helps you to encode in many different formats just by replacing the &quot;ENCODE FILTER&quot; with another one. mediastreamer2 contains internal support for g711u, g711a, speex and gsm. Other encoding formats can be added by implementing new filters as plugins which can then be dynamically loaded.</para><para><simplesect kind="see"><para><ref refid="group__filters" kindref="compound">Filters documentation</ref> </para></simplesect>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
